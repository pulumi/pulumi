// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ArgFunction(ctx *pulumi.Context, args *ArgFunctionArgs, opts ...pulumi.InvokeOption) (*ArgFunctionResult, error) {
	var rv ArgFunctionResult
	err := ctx.Invoke("example::argFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ArgFunctionArgs struct {
	Arg1 *Resource `pulumi:"arg1"`
}

type ArgFunctionResult struct {
	Result *Resource `pulumi:"result"`
}

func ArgFunctionApply(ctx *pulumi.Context, args ArgFunctionApplyInput, opts ...pulumi.InvokeOption) ArgFunctionResultOutput {
	return args.ToArgFunctionApplyOutput().ApplyT(func(v ArgFunctionArgs) (ArgFunctionResult, error) {
		r, err := ArgFunction(ctx, &v, opts...)
		return *r, err

	}).(ArgFunctionResultOutput)
}

// ArgFunctionApplyInput is an input type that accepts ArgFunctionApplyArgs and ArgFunctionApplyOutput values.
// You can construct a concrete instance of `ArgFunctionApplyInput` via:
//
//          ArgFunctionApplyArgs{...}
type ArgFunctionApplyInput interface {
	pulumi.Input

	ToArgFunctionApplyOutput() ArgFunctionApplyOutput
	ToArgFunctionApplyOutputWithContext(context.Context) ArgFunctionApplyOutput
}

type ArgFunctionApplyArgs struct {
	Arg1 ResourceInput `pulumi:"arg1"`
}

func (ArgFunctionApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgFunctionArgs)(nil)).Elem()
}

func (i ArgFunctionApplyArgs) ToArgFunctionApplyOutput() ArgFunctionApplyOutput {
	return i.ToArgFunctionApplyOutputWithContext(context.Background())
}

func (i ArgFunctionApplyArgs) ToArgFunctionApplyOutputWithContext(ctx context.Context) ArgFunctionApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgFunctionApplyOutput)
}

type ArgFunctionApplyOutput struct{ *pulumi.OutputState }

func (ArgFunctionApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgFunctionArgs)(nil)).Elem()
}

func (o ArgFunctionApplyOutput) ToArgFunctionApplyOutput() ArgFunctionApplyOutput {
	return o
}

func (o ArgFunctionApplyOutput) ToArgFunctionApplyOutputWithContext(ctx context.Context) ArgFunctionApplyOutput {
	return o
}

func (o ArgFunctionApplyOutput) Arg1() ResourceOutput {
	return o.ApplyT(func(v ArgFunctionArgs) *Resource { return v.Arg1 }).(ResourceOutput)
}

type ArgFunctionResultOutput struct{ *pulumi.OutputState }

func (ArgFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgFunctionResult)(nil)).Elem()
}

func (o ArgFunctionResultOutput) ToArgFunctionResultOutput() ArgFunctionResultOutput {
	return o
}

func (o ArgFunctionResultOutput) ToArgFunctionResultOutputWithContext(ctx context.Context) ArgFunctionResultOutput {
	return o
}

func (o ArgFunctionResultOutput) Result() ResourceOutput {
	return o.ApplyT(func(v ArgFunctionResult) *Resource { return v.Result }).(ResourceOutput)
}

func init() {
	pulumi.RegisterOutputType(ArgFunctionApplyOutput{})
	pulumi.RegisterOutputType(ArgFunctionResultOutput{})
}
