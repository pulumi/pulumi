// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ArgFunction(ctx *pulumi.Context, args *ArgFunctionArgs, opts ...pulumi.InvokeOption) (*ArgFunctionResult, error) {
	var rv ArgFunctionResult
	err := ctx.Invoke("example::argFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ArgFunctionArgs struct {
	Name *random.RandomPet `pulumi:"name"`
}

type ArgFunctionResult struct {
	Age *int `pulumi:"age"`
}

func ArgFunctionOutput(ctx *pulumi.Context, args ArgFunctionOutputArgs, opts ...pulumi.InvokeOption) ArgFunctionResultTypeOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ArgFunctionResult, error) {
			args := v.(ArgFunctionArgs)
			r, err := ArgFunction(ctx, &args, opts...)
			return *r, err
		}).(ArgFunctionResultTypeOutput)
}

type ArgFunctionOutputArgs struct {
	Name random.RandomPetInput `pulumi:"name"`
}

func (ArgFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgFunctionArgs)(nil)).Elem()
}

type ArgFunctionResultTypeOutput struct{ *pulumi.OutputState }

func (ArgFunctionResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgFunctionResult)(nil)).Elem()
}

func (o ArgFunctionResultTypeOutput) ToArgFunctionResultTypeOutput() ArgFunctionResultTypeOutput {
	return o
}

func (o ArgFunctionResultTypeOutput) ToArgFunctionResultTypeOutputWithContext(ctx context.Context) ArgFunctionResultTypeOutput {
	return o
}

func (o ArgFunctionResultTypeOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArgFunctionResult) *int { return v.Age }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ArgFunctionResultTypeOutput{})
}
