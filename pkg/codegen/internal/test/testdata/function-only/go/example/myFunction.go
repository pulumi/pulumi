// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func MyFunction(ctx *pulumi.Context, args *MyFunctionArgs, opts ...pulumi.InvokeOption) (*MyFunctionResult, error) {
	var rv MyFunctionResult
	err := ctx.Invoke("example::myFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type MyFunctionArgs struct {
	Foo *string `pulumi:"foo"`
}

type MyFunctionResult struct {
	Foo *string `pulumi:"foo"`
}

func MyFunctionOutput(ctx *pulumi.Context, args MyFunctionOutputArgs, opts ...pulumi.InvokeOption) MyFunctionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (MyFunctionResult, error) {
			args := v.(MyFunctionArgs)
			r, err := MyFunction(ctx, &args, opts...)
			return *r, err
		}).(MyFunctionResultOutput)
}

type MyFunctionOutputArgs struct {
	Foo pulumi.StringPtrInput `pulumi:"foo"`
}

func (MyFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MyFunctionArgs)(nil)).Elem()
}

type MyFunctionResultOutput struct{ *pulumi.OutputState }

func (MyFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MyFunctionResult)(nil)).Elem()
}

func (o MyFunctionResultOutput) ToMyFunctionResultOutput() MyFunctionResultOutput {
	return o
}

func (o MyFunctionResultOutput) ToMyFunctionResultOutputWithContext(ctx context.Context) MyFunctionResultOutput {
	return o
}

func (o MyFunctionResultOutput) Foo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MyFunctionResult) *string { return v.Foo }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MyFunctionResultOutput{})
}
