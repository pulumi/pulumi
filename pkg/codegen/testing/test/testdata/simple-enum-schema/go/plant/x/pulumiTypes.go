// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package plant

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"simple-enum-schema/plant/internal"
)

var _ = internal.GetEnvOrDefault

type Container struct {
	Brightness *ContainerBrightness `pulumi:"brightness"`
	Color      *string              `pulumi:"color"`
	Material   *string              `pulumi:"material"`
	Size       ContainerSize        `pulumi:"size"`
}

// Defaults sets the appropriate defaults for Container
func (val *Container) Defaults() *Container {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Brightness == nil {
		brightness_ := ContainerBrightness(1.0)
		tmp.Brightness = &brightness_
	}
	return &tmp
}

type ContainerArgs struct {
	Brightness pulumix.Input[*ContainerBrightness] `pulumi:"brightness"`
	Color      pulumix.Input[*string]              `pulumi:"color"`
	Material   pulumix.Input[*string]              `pulumi:"material"`
	Size       pulumix.Input[ContainerSize]        `pulumi:"size"`
}

// Defaults sets the appropriate defaults for ContainerArgs
func (val *ContainerArgs) Defaults() *ContainerArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Brightness == nil {
		tmp.Brightness = pulumix.Ptr(ContainerBrightness(1.0))
	}
	return &tmp
}
func (ContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (i ContainerArgs) ToContainerOutput() ContainerOutput {
	return i.ToContainerOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerOutput)
}

func (i *ContainerArgs) ToOutput(ctx context.Context) pulumix.Output[*ContainerArgs] {
	return pulumix.Val(i)
}

type ContainerOutput struct{ *pulumi.OutputState }

func (ContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (o ContainerOutput) ToContainerOutput() ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return o
}

func (o ContainerOutput) ToOutput(ctx context.Context) pulumix.Output[Container] {
	return pulumix.Output[Container]{
		OutputState: o.OutputState,
	}
}

func (o ContainerOutput) Brightness() pulumix.Output[*ContainerBrightness] {
	return pulumix.Apply[Container](o, func(v Container) *ContainerBrightness { return v.Brightness })
}

func (o ContainerOutput) Color() pulumix.Output[*string] {
	return pulumix.Apply[Container](o, func(v Container) *string { return v.Color })
}

func (o ContainerOutput) Material() pulumix.Output[*string] {
	return pulumix.Apply[Container](o, func(v Container) *string { return v.Material })
}

func (o ContainerOutput) Size() pulumix.Output[ContainerSize] {
	return pulumix.Apply[Container](o, func(v Container) ContainerSize { return v.Size })
}

func init() {
	pulumi.RegisterOutputType(ContainerOutput{})
}
