// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"assets-and-archives-go-generics-only/example/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type TypeWithAssets struct {
	Archive      *pulumi.Archive        `pulumi:"archive"`
	Asset        pulumi.AssetOrArchive  `pulumi:"asset"`
	PlainArchive pulumi.Archive         `pulumi:"plainArchive"`
	PlainAsset   *pulumi.AssetOrArchive `pulumi:"plainAsset"`
}

type TypeWithAssetsArgs struct {
	Archive      pulumix.Input[*pulumi.Archive]       `pulumi:"archive"`
	Asset        pulumix.Input[pulumi.AssetOrArchive] `pulumi:"asset"`
	PlainArchive pulumi.Archive                       `pulumi:"plainArchive"`
	PlainAsset   *pulumi.AssetOrArchive               `pulumi:"plainAsset"`
}

func (TypeWithAssetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeWithAssets)(nil)).Elem()
}

func (i TypeWithAssetsArgs) ToTypeWithAssetsOutput() TypeWithAssetsOutput {
	return i.ToTypeWithAssetsOutputWithContext(context.Background())
}

func (i TypeWithAssetsArgs) ToTypeWithAssetsOutputWithContext(ctx context.Context) TypeWithAssetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeWithAssetsOutput)
}

func (i *TypeWithAssetsArgs) ToOutput(ctx context.Context) pulumix.Output[*TypeWithAssetsArgs] {
	return pulumix.Val(i)
}

type TypeWithAssetsOutput struct{ *pulumi.OutputState }

func (TypeWithAssetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeWithAssets)(nil)).Elem()
}

func (o TypeWithAssetsOutput) ToTypeWithAssetsOutput() TypeWithAssetsOutput {
	return o
}

func (o TypeWithAssetsOutput) ToTypeWithAssetsOutputWithContext(ctx context.Context) TypeWithAssetsOutput {
	return o
}

func (o TypeWithAssetsOutput) ToOutput(ctx context.Context) pulumix.Output[TypeWithAssets] {
	return pulumix.Output[TypeWithAssets]{
		OutputState: o.OutputState,
	}
}

func (o TypeWithAssetsOutput) Archive() pulumix.Output[*pulumi.Archive] {
	return pulumix.Apply[TypeWithAssets](o, func(v TypeWithAssets) *pulumi.Archive { return v.Archive })
}

func (o TypeWithAssetsOutput) Asset() pulumix.Output[pulumi.AssetOrArchive] {
	return pulumix.Apply[TypeWithAssets](o, func(v TypeWithAssets) pulumi.AssetOrArchive { return v.Asset })
}

func (o TypeWithAssetsOutput) PlainArchive() pulumix.Output[pulumi.Archive] {
	return pulumix.Apply[TypeWithAssets](o, func(v TypeWithAssets) pulumi.Archive { return v.PlainArchive })
}

func (o TypeWithAssetsOutput) PlainAsset() pulumix.Output[*pulumi.AssetOrArchive] {
	return pulumix.Apply[TypeWithAssets](o, func(v TypeWithAssets) *pulumi.AssetOrArchive { return v.PlainAsset })
}

func init() {
	pulumi.RegisterOutputType(TypeWithAssetsOutput{})
}
