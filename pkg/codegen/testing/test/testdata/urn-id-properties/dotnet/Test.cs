// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Urnid
{
    public static class Test
    {
        /// <summary>
        /// It's fine for invokes to use urn and id
        /// </summary>
        public static Task<TestResult> InvokeAsync(TestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<TestResult>("urnid:index:Test", args ?? new TestArgs(), options.WithDefaults());

        /// <summary>
        /// It's fine for invokes to use urn and id
        /// </summary>
        public static Output<TestResult> Invoke(TestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<TestResult>("urnid:index:Test", args ?? new TestInvokeArgs(), options.WithDefaults());
    }


    public sealed class TestArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public double Id { get; set; }

        [Input("urn", required: true)]
        public double Urn { get; set; }

        public TestArgs()
        {
        }
        public static new TestArgs Empty => new TestArgs();
    }

    public sealed class TestInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<double> Id { get; set; } = null!;

        [Input("urn", required: true)]
        public Input<double> Urn { get; set; } = null!;

        public TestInvokeArgs()
        {
        }
        public static new TestInvokeArgs Empty => new TestInvokeArgs();
    }


    [OutputType]
    public sealed class TestResult
    {
        public readonly double? Id;
        public readonly double Urn;

        [OutputConstructor]
        private TestResult(
            double? id,

            double urn)
        {
            Id = id;
            Urn = urn;
        }
    }
}
