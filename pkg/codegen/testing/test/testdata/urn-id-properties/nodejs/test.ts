// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * It's fine for invokes to use urn and id
 */
export function test(args: TestArgs, opts?: pulumi.InvokeOptions): Promise<TestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("urnid:index:Test", {
        "id": args.id,
        "urn": args.urn,
    }, opts);
}

export interface TestArgs {
    id: number;
    urn: number;
}

export interface TestResult {
    readonly id?: number;
    readonly urn: number;
}
/**
 * It's fine for invokes to use urn and id
 */
export function testOutput(args: TestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<TestResult> {
    return pulumi.output(args).apply((a: any) => test(a, opts))
}

export interface TestOutputArgs {
    id: pulumi.Input<number>;
    urn: pulumi.Input<number>;
}
