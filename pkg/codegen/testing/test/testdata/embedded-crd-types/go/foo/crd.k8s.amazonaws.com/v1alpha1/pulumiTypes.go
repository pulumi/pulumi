// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"embedded-crd-types/foo/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ENIConfig struct {
	ApiVersion *string        `pulumi:"apiVersion"`
	Kind       *string        `pulumi:"kind"`
	Spec       *ENIConfigSpec `pulumi:"spec"`
}

type ENIConfigSpec struct {
	SecurityGroups []string `pulumi:"securityGroups"`
	Subnet         *string  `pulumi:"subnet"`
}

// ENIConfigSpecInput is an input type that accepts ENIConfigSpecArgs and ENIConfigSpecOutput values.
// You can construct a concrete instance of `ENIConfigSpecInput` via:
//
//	ENIConfigSpecArgs{...}
type ENIConfigSpecInput interface {
	pulumi.Input

	ToENIConfigSpecOutput() ENIConfigSpecOutput
	ToENIConfigSpecOutputWithContext(context.Context) ENIConfigSpecOutput
}

type ENIConfigSpecArgs struct {
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Subnet         pulumi.StringPtrInput   `pulumi:"subnet"`
}

func (ENIConfigSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ENIConfigSpec)(nil)).Elem()
}

func (i ENIConfigSpecArgs) ToENIConfigSpecOutput() ENIConfigSpecOutput {
	return i.ToENIConfigSpecOutputWithContext(context.Background())
}

func (i ENIConfigSpecArgs) ToENIConfigSpecOutputWithContext(ctx context.Context) ENIConfigSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ENIConfigSpecOutput)
}

func (i ENIConfigSpecArgs) ToOutput(ctx context.Context) pulumix.Output[ENIConfigSpec] {
	return pulumix.Output[ENIConfigSpec]{
		OutputState: i.ToENIConfigSpecOutputWithContext(ctx).OutputState,
	}
}

// ENIConfigSpecMapInput is an input type that accepts ENIConfigSpecMap and ENIConfigSpecMapOutput values.
// You can construct a concrete instance of `ENIConfigSpecMapInput` via:
//
//	ENIConfigSpecMap{ "key": ENIConfigSpecArgs{...} }
type ENIConfigSpecMapInput interface {
	pulumi.Input

	ToENIConfigSpecMapOutput() ENIConfigSpecMapOutput
	ToENIConfigSpecMapOutputWithContext(context.Context) ENIConfigSpecMapOutput
}

type ENIConfigSpecMap map[string]ENIConfigSpecInput

func (ENIConfigSpecMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ENIConfigSpec)(nil)).Elem()
}

func (i ENIConfigSpecMap) ToENIConfigSpecMapOutput() ENIConfigSpecMapOutput {
	return i.ToENIConfigSpecMapOutputWithContext(context.Background())
}

func (i ENIConfigSpecMap) ToENIConfigSpecMapOutputWithContext(ctx context.Context) ENIConfigSpecMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ENIConfigSpecMapOutput)
}

func (i ENIConfigSpecMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ENIConfigSpec] {
	return pulumix.Output[map[string]ENIConfigSpec]{
		OutputState: i.ToENIConfigSpecMapOutputWithContext(ctx).OutputState,
	}
}

type ENIConfigSpecOutput struct{ *pulumi.OutputState }

func (ENIConfigSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ENIConfigSpec)(nil)).Elem()
}

func (o ENIConfigSpecOutput) ToENIConfigSpecOutput() ENIConfigSpecOutput {
	return o
}

func (o ENIConfigSpecOutput) ToENIConfigSpecOutputWithContext(ctx context.Context) ENIConfigSpecOutput {
	return o
}

func (o ENIConfigSpecOutput) ToOutput(ctx context.Context) pulumix.Output[ENIConfigSpec] {
	return pulumix.Output[ENIConfigSpec]{
		OutputState: o.OutputState,
	}
}

func (o ENIConfigSpecOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ENIConfigSpec) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ENIConfigSpecOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ENIConfigSpec) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type ENIConfigSpecMapOutput struct{ *pulumi.OutputState }

func (ENIConfigSpecMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ENIConfigSpec)(nil)).Elem()
}

func (o ENIConfigSpecMapOutput) ToENIConfigSpecMapOutput() ENIConfigSpecMapOutput {
	return o
}

func (o ENIConfigSpecMapOutput) ToENIConfigSpecMapOutputWithContext(ctx context.Context) ENIConfigSpecMapOutput {
	return o
}

func (o ENIConfigSpecMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ENIConfigSpec] {
	return pulumix.Output[map[string]ENIConfigSpec]{
		OutputState: o.OutputState,
	}
}

func (o ENIConfigSpecMapOutput) MapIndex(k pulumi.StringInput) ENIConfigSpecOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ENIConfigSpec {
		return vs[0].(map[string]ENIConfigSpec)[vs[1].(string)]
	}).(ENIConfigSpecOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ENIConfigSpecInput)(nil)).Elem(), ENIConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ENIConfigSpecMapInput)(nil)).Elem(), ENIConfigSpecMap{})
	pulumi.RegisterOutputType(ENIConfigSpecOutput{})
	pulumi.RegisterOutputType(ENIConfigSpecMapOutput{})
}
