// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package submodule1

import (
	"context"
	"reflect"

	"dash-named-schema/foo/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FOOEncryptedBarClass struct {
	pulumi.CustomResourceState
}

// NewFOOEncryptedBarClass registers a new resource with the given unique name, arguments, and options.
func NewFOOEncryptedBarClass(ctx *pulumi.Context,
	name string, args *FOOEncryptedBarClassArgs, opts ...pulumi.ResourceOption) (*FOOEncryptedBarClass, error) {
	if args == nil {
		args = &FOOEncryptedBarClassArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FOOEncryptedBarClass
	err := ctx.RegisterResource("foo-bar:submodule1:FOOEncryptedBarClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFOOEncryptedBarClass gets an existing FOOEncryptedBarClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFOOEncryptedBarClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FOOEncryptedBarClassState, opts ...pulumi.ResourceOption) (*FOOEncryptedBarClass, error) {
	var resource FOOEncryptedBarClass
	err := ctx.ReadResource("foo-bar:submodule1:FOOEncryptedBarClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FOOEncryptedBarClass resources.
type fooencryptedBarClassState struct {
}

type FOOEncryptedBarClassState struct {
}

func (FOOEncryptedBarClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*fooencryptedBarClassState)(nil)).Elem()
}

type fooencryptedBarClassArgs struct {
}

// The set of arguments for constructing a FOOEncryptedBarClass resource.
type FOOEncryptedBarClassArgs struct {
}

func (FOOEncryptedBarClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fooencryptedBarClassArgs)(nil)).Elem()
}

type FOOEncryptedBarClassInput interface {
	pulumi.Input

	ToFOOEncryptedBarClassOutput() FOOEncryptedBarClassOutput
	ToFOOEncryptedBarClassOutputWithContext(ctx context.Context) FOOEncryptedBarClassOutput
}

func (*FOOEncryptedBarClass) ElementType() reflect.Type {
	return reflect.TypeOf((**FOOEncryptedBarClass)(nil)).Elem()
}

func (i *FOOEncryptedBarClass) ToFOOEncryptedBarClassOutput() FOOEncryptedBarClassOutput {
	return i.ToFOOEncryptedBarClassOutputWithContext(context.Background())
}

func (i *FOOEncryptedBarClass) ToFOOEncryptedBarClassOutputWithContext(ctx context.Context) FOOEncryptedBarClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FOOEncryptedBarClassOutput)
}

func (i *FOOEncryptedBarClass) ToOutput(ctx context.Context) pulumix.Output[*FOOEncryptedBarClass] {
	return pulumix.Output[*FOOEncryptedBarClass]{
		OutputState: i.ToFOOEncryptedBarClassOutputWithContext(ctx).OutputState,
	}
}

type FOOEncryptedBarClassOutput struct{ *pulumi.OutputState }

func (FOOEncryptedBarClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FOOEncryptedBarClass)(nil)).Elem()
}

func (o FOOEncryptedBarClassOutput) ToFOOEncryptedBarClassOutput() FOOEncryptedBarClassOutput {
	return o
}

func (o FOOEncryptedBarClassOutput) ToFOOEncryptedBarClassOutputWithContext(ctx context.Context) FOOEncryptedBarClassOutput {
	return o
}

func (o FOOEncryptedBarClassOutput) ToOutput(ctx context.Context) pulumix.Output[*FOOEncryptedBarClass] {
	return pulumix.Output[*FOOEncryptedBarClass]{
		OutputState: o.OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FOOEncryptedBarClassInput)(nil)).Elem(), &FOOEncryptedBarClass{})
	pulumi.RegisterOutputType(FOOEncryptedBarClassOutput{})
}
