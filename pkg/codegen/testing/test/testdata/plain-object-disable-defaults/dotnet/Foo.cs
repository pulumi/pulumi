// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Example
{
    /// <summary>
    /// test new feature with resoruces
    /// </summary>
    [ExampleResourceType("example:index:Foo")]
    public partial class Foo : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A test for plain types
        /// </summary>
        [Output("defaultKubeClientSettings")]
        public Output<Outputs.KubeClientSettings?> DefaultKubeClientSettings { get; private set; } = null!;


        /// <summary>
        /// Create a Foo resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Foo(string name, FooArgs args, CustomResourceOptions? options = null)
            : base("example:index:Foo", name, args ?? new FooArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Foo(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("example:index:Foo", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Foo resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Foo Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Foo(name, id, options);
        }
    }

    public sealed class FooArgs : global::Pulumi.ResourceArgs
    {
        [Input("argument")]
        public string? Argument { get; set; }

        /// <summary>
        /// Options for tuning the Kubernetes client used by a Provider.
        /// </summary>
        [Input("backupKubeClientSettings", required: true)]
        public Input<Inputs.KubeClientSettingsArgs> BackupKubeClientSettings { get; set; } = null!;

        /// <summary>
        /// Options for tuning the Kubernetes client used by a Provider.
        /// </summary>
        [Input("kubeClientSettings")]
        public Input<Inputs.KubeClientSettingsArgs>? KubeClientSettings { get; set; }

        /// <summary>
        /// describing things
        /// </summary>
        [Input("settings")]
        public Input<Inputs.LayeredTypeArgs>? Settings { get; set; }

        public FooArgs()
        {
        }
        public static new FooArgs Empty => new FooArgs();
    }
}
