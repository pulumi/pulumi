// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"go-plain-ref-repro/repro/internal"
)

var _ = internal.GetEnvOrDefault

type TaskDefinitionContainerDefinition struct {
	Command []string `pulumi:"command"`
	Cpu     *int     `pulumi:"cpu"`
}

// TaskDefinitionContainerDefinitionInput is an input type that accepts TaskDefinitionContainerDefinitionArgs and TaskDefinitionContainerDefinitionOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDefinitionInput` via:
//
//	TaskDefinitionContainerDefinitionArgs{...}
type TaskDefinitionContainerDefinitionInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput
	ToTaskDefinitionContainerDefinitionOutputWithContext(context.Context) TaskDefinitionContainerDefinitionOutput
}

type TaskDefinitionContainerDefinitionArgs struct {
	Command pulumi.StringArrayInput `pulumi:"command"`
	Cpu     pulumi.IntPtrInput      `pulumi:"cpu"`
}

func (TaskDefinitionContainerDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput {
	return i.ToTaskDefinitionContainerDefinitionOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionOutput)
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionPtrOutput() TaskDefinitionContainerDefinitionPtrOutput {
	return i.ToTaskDefinitionContainerDefinitionPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionPtrOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionOutput).ToTaskDefinitionContainerDefinitionPtrOutputWithContext(ctx)
}

// TaskDefinitionContainerDefinitionPtrInput is an input type that accepts TaskDefinitionContainerDefinitionArgs, TaskDefinitionContainerDefinitionPtr and TaskDefinitionContainerDefinitionPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDefinitionPtrInput` via:
//
//	        TaskDefinitionContainerDefinitionArgs{...}
//
//	or:
//
//	        nil
type TaskDefinitionContainerDefinitionPtrInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDefinitionPtrOutput() TaskDefinitionContainerDefinitionPtrOutput
	ToTaskDefinitionContainerDefinitionPtrOutputWithContext(context.Context) TaskDefinitionContainerDefinitionPtrOutput
}

type taskDefinitionContainerDefinitionPtrType TaskDefinitionContainerDefinitionArgs

func TaskDefinitionContainerDefinitionPtr(v *TaskDefinitionContainerDefinitionArgs) TaskDefinitionContainerDefinitionPtrInput {
	return (*taskDefinitionContainerDefinitionPtrType)(v)
}

func (*taskDefinitionContainerDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (i *taskDefinitionContainerDefinitionPtrType) ToTaskDefinitionContainerDefinitionPtrOutput() TaskDefinitionContainerDefinitionPtrOutput {
	return i.ToTaskDefinitionContainerDefinitionPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionContainerDefinitionPtrType) ToTaskDefinitionContainerDefinitionPtrOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionPtrOutput)
}

// TaskDefinitionContainerDefinitionMapInput is an input type that accepts TaskDefinitionContainerDefinitionMap and TaskDefinitionContainerDefinitionMapOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDefinitionMapInput` via:
//
//	TaskDefinitionContainerDefinitionMap{ "key": TaskDefinitionContainerDefinitionArgs{...} }
type TaskDefinitionContainerDefinitionMapInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDefinitionMapOutput() TaskDefinitionContainerDefinitionMapOutput
	ToTaskDefinitionContainerDefinitionMapOutputWithContext(context.Context) TaskDefinitionContainerDefinitionMapOutput
}

type TaskDefinitionContainerDefinitionMap map[string]TaskDefinitionContainerDefinitionInput

func (TaskDefinitionContainerDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (i TaskDefinitionContainerDefinitionMap) ToTaskDefinitionContainerDefinitionMapOutput() TaskDefinitionContainerDefinitionMapOutput {
	return i.ToTaskDefinitionContainerDefinitionMapOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDefinitionMap) ToTaskDefinitionContainerDefinitionMapOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionMapOutput)
}

type TaskDefinitionContainerDefinitionOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionPtrOutput() TaskDefinitionContainerDefinitionPtrOutput {
	return o.ToTaskDefinitionContainerDefinitionPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionPtrOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionContainerDefinition) *TaskDefinitionContainerDefinition {
		return &v
	}).(TaskDefinitionContainerDefinitionPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.Command }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type TaskDefinitionContainerDefinitionPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (o TaskDefinitionContainerDefinitionPtrOutput) ToTaskDefinitionContainerDefinitionPtrOutput() TaskDefinitionContainerDefinitionPtrOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionPtrOutput) ToTaskDefinitionContainerDefinitionPtrOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionPtrOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionPtrOutput) Elem() TaskDefinitionContainerDefinitionOutput {
	return o.ApplyT(func(v *TaskDefinitionContainerDefinition) TaskDefinitionContainerDefinition {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionContainerDefinition
		return ret
	}).(TaskDefinitionContainerDefinitionOutput)
}

func (o TaskDefinitionContainerDefinitionPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionContainerDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionContainerDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

type TaskDefinitionContainerDefinitionMapOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (o TaskDefinitionContainerDefinitionMapOutput) ToTaskDefinitionContainerDefinitionMapOutput() TaskDefinitionContainerDefinitionMapOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionMapOutput) ToTaskDefinitionContainerDefinitionMapOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionMapOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionMapOutput) MapIndex(k pulumi.StringInput) TaskDefinitionContainerDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TaskDefinitionContainerDefinition {
		return vs[0].(map[string]TaskDefinitionContainerDefinition)[vs[1].(string)]
	}).(TaskDefinitionContainerDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDefinitionInput)(nil)).Elem(), TaskDefinitionContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDefinitionPtrInput)(nil)).Elem(), TaskDefinitionContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDefinitionMapInput)(nil)).Elem(), TaskDefinitionContainerDefinitionMap{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDefinitionOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDefinitionPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDefinitionMapOutput{})
}
