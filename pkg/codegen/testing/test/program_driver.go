package test

import test "github.com/pulumi/pulumi/sdk/v3/pkg/codegen/testing/test"

type ProgramTest = test.ProgramTest

// Checks that a generated program is correct
// 
// The arguments are to be read:
// (Testing environment, path to generated code, set of dependencies)
type CheckProgramOutput = test.CheckProgramOutput

// Generates a program from a pcl.Program
type GenProgram = test.GenProgram

// Generates a project from a pcl.Program
type GenProject = test.GenProject

type ProgramCodegenOptions = test.ProgramCodegenOptions

type PkgVersionInfo = test.PkgVersionInfo

var PulumiPulumiProgramTests = test.PulumiPulumiProgramTests

var PulumiPulumiYAMLProgramTests = test.PulumiPulumiYAMLProgramTests

// Get batch number k (base-1 indexed) of tests out of n batches total.
func ProgramTestBatch(k, n int) []ProgramTest {
	return test.ProgramTestBatch(k, n)
}

// Useful when debugging a single test case.
func SingleTestCase(directoryName string) []ProgramTest {
	return test.SingleTestCase(directoryName)
}

// TestProgramCodegen runs the complete set of program code generation tests against a particular
// language's code generator.
// 
// A program code generation test consists of a PCL file (.pp extension) and a set of expected outputs
// for each language.
// 
// The PCL file is the only piece that must be manually authored. Once the schema has been written, the expected outputs
// can be generated by running `PULUMI_ACCEPT=true go test ./..." from the `pkg/codegen` directory.
func TestProgramCodegen(t *testing.T, testcase ProgramCodegenOptions) {
	test.TestProgramCodegen(t, testcase)
}

// CheckVersion checks for an expected package version
// Todo: support checking multiple package expected versions
func CheckVersion(t *testing.T, dir, depFilePath string, expectedVersionMap map[string]PkgVersionInfo) {
	test.CheckVersion(t, dir, depFilePath, expectedVersionMap)
}

func GenProjectCleanUp(t *testing.T, dir, depFilePath, outfilePath string) {
	test.GenProjectCleanUp(t, dir, depFilePath, outfilePath)
}

