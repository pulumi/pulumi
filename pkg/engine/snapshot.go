package engine

import (
	"io"

	"github.com/pulumi/pulumi/pkg/resource/deploy"
	"github.com/pulumi/pulumi/pkg/workspace"
)

// SnapshotManager is responsible for maintaining the in-memory representation
// of the current state of the resource world.
type SnapshotManager interface {
	io.Closer

	// BeginMutation signals to the SnapshotManager that the planner intends to mutate the global
	// snapshot. It provides the step that it intends to execute. Based on that step, BeginMutation
	// will record this intent in the global snapshot and return a `SnapshotMutation` that, when ended,
	// will complete the transaction.
	BeginMutation(step deploy.Step) (SnapshotMutation, error)

	// RegisterResourceOutputs registers the set of resource outputs generated by performing the
	// given step. These outputs are persisted in the snapshot.
	RegisterResourceOutputs(step deploy.Step) error

	// RecordPlugins records the set of plugins currently loaded by the plan in the snapshot.
	RecordPlugins(plugins []workspace.PluginInfo) error
}

// SnapshotMutation represents an outstanding mutation that is yet to be completed. When the engine completes
// a mutation, it must call `End` in order to record the successful completion of the mutation.
type SnapshotMutation interface {
	// End marks the end of a transaction initiated by the given step, given whether or not the step
	// completed successfully. If the step did not complete successfully, the snapshot will still be persisted
	// but the state on the given step will not be saved along with it.
	End(step deploy.Step, successful bool) error
}
