Pulumi.X.Automation.Commands.Exceptions.CommandException
Pulumi.X.Automation.Commands.Exceptions.CommandException.Name.get -> string
Pulumi.X.Automation.Commands.Exceptions.ConcurrentUpdateException
Pulumi.X.Automation.Commands.Exceptions.StackAlreadyExistsException
Pulumi.X.Automation.Commands.Exceptions.StackNotFoundException
Pulumi.X.Automation.ConfigValue
Pulumi.X.Automation.ConfigValue.ConfigValue(string value, bool isSecret = false) -> void
Pulumi.X.Automation.ConfigValue.IsSecret.get -> bool
Pulumi.X.Automation.ConfigValue.IsSecret.set -> void
Pulumi.X.Automation.ConfigValue.Value.get -> string
Pulumi.X.Automation.ConfigValue.Value.set -> void
Pulumi.X.Automation.InlineProgramArgs
Pulumi.X.Automation.InlineProgramArgs.InlineProgramArgs(string projectName, string stackName, Pulumi.X.Automation.PulumiFn program) -> void
Pulumi.X.Automation.InlineProgramArgs.ProjectName.get -> string
Pulumi.X.Automation.InlineProgramArgs.StackName.get -> string
Pulumi.X.Automation.LocalProgramArgs
Pulumi.X.Automation.LocalProgramArgs.LocalProgramArgs(string stackName, string workDir) -> void
Pulumi.X.Automation.LocalProgramArgs.StackName.get -> string
Pulumi.X.Automation.LocalWorkspace
Pulumi.X.Automation.LocalWorkspaceOptions
Pulumi.X.Automation.LocalWorkspaceOptions.EnvironmentVariables.get -> System.Collections.Generic.IDictionary<string, string>
Pulumi.X.Automation.LocalWorkspaceOptions.EnvironmentVariables.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.LocalWorkspaceOptions() -> void
Pulumi.X.Automation.LocalWorkspaceOptions.Program.get -> Pulumi.X.Automation.PulumiFn
Pulumi.X.Automation.LocalWorkspaceOptions.Program.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.ProjectSettings.get -> Pulumi.X.Automation.ProjectSettings
Pulumi.X.Automation.LocalWorkspaceOptions.ProjectSettings.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.PulumiHome.get -> string
Pulumi.X.Automation.LocalWorkspaceOptions.PulumiHome.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.SecretsProvider.get -> string
Pulumi.X.Automation.LocalWorkspaceOptions.SecretsProvider.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.StackSettings.get -> System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.StackSettings>
Pulumi.X.Automation.LocalWorkspaceOptions.StackSettings.set -> void
Pulumi.X.Automation.LocalWorkspaceOptions.WorkDir.get -> string
Pulumi.X.Automation.LocalWorkspaceOptions.WorkDir.set -> void
Pulumi.X.Automation.OutputValue
Pulumi.X.Automation.OutputValue.OutputValue() -> void
Pulumi.X.Automation.PluginInfo
Pulumi.X.Automation.PluginInfo.InstallTime.get -> System.DateTimeOffset
Pulumi.X.Automation.PluginInfo.Kind.get -> Pulumi.X.Automation.PluginKind
Pulumi.X.Automation.PluginInfo.LastUsedTime.get -> System.DateTimeOffset
Pulumi.X.Automation.PluginInfo.Name.get -> string
Pulumi.X.Automation.PluginInfo.Path.get -> string
Pulumi.X.Automation.PluginInfo.ServerUrl.get -> string
Pulumi.X.Automation.PluginInfo.Size.get -> long
Pulumi.X.Automation.PluginInfo.Version.get -> string
Pulumi.X.Automation.PluginKind
Pulumi.X.Automation.PluginKind.Analyzer = 0 -> Pulumi.X.Automation.PluginKind
Pulumi.X.Automation.PluginKind.Language = 1 -> Pulumi.X.Automation.PluginKind
Pulumi.X.Automation.PluginKind.Resource = 2 -> Pulumi.X.Automation.PluginKind
Pulumi.X.Automation.ProjectBackend
Pulumi.X.Automation.ProjectBackend.ProjectBackend() -> void
Pulumi.X.Automation.ProjectBackend.Url.get -> string
Pulumi.X.Automation.ProjectBackend.Url.set -> void
Pulumi.X.Automation.ProjectRuntime
Pulumi.X.Automation.ProjectRuntime.Name.get -> Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntime.Name.set -> void
Pulumi.X.Automation.ProjectRuntime.Options.get -> Pulumi.X.Automation.ProjectRuntimeOptions
Pulumi.X.Automation.ProjectRuntime.Options.set -> void
Pulumi.X.Automation.ProjectRuntime.ProjectRuntime(Pulumi.X.Automation.ProjectRuntimeName name) -> void
Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntimeName.Dotnet = 3 -> Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntimeName.Go = 1 -> Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntimeName.NodeJS = 0 -> Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntimeName.Python = 2 -> Pulumi.X.Automation.ProjectRuntimeName
Pulumi.X.Automation.ProjectRuntimeOptions
Pulumi.X.Automation.ProjectRuntimeOptions.Binary.get -> string
Pulumi.X.Automation.ProjectRuntimeOptions.Binary.set -> void
Pulumi.X.Automation.ProjectRuntimeOptions.ProjectRuntimeOptions() -> void
Pulumi.X.Automation.ProjectRuntimeOptions.TypeScript.get -> bool?
Pulumi.X.Automation.ProjectRuntimeOptions.TypeScript.set -> void
Pulumi.X.Automation.ProjectRuntimeOptions.VirtualEnv.get -> string
Pulumi.X.Automation.ProjectRuntimeOptions.VirtualEnv.set -> void
Pulumi.X.Automation.ProjectSettings
Pulumi.X.Automation.ProjectSettings.Author.get -> string
Pulumi.X.Automation.ProjectSettings.Author.set -> void
Pulumi.X.Automation.ProjectSettings.Backend.get -> Pulumi.X.Automation.ProjectBackend
Pulumi.X.Automation.ProjectSettings.Backend.set -> void
Pulumi.X.Automation.ProjectSettings.Config.get -> string
Pulumi.X.Automation.ProjectSettings.Config.set -> void
Pulumi.X.Automation.ProjectSettings.Description.get -> string
Pulumi.X.Automation.ProjectSettings.Description.set -> void
Pulumi.X.Automation.ProjectSettings.License.get -> string
Pulumi.X.Automation.ProjectSettings.License.set -> void
Pulumi.X.Automation.ProjectSettings.Main.get -> string
Pulumi.X.Automation.ProjectSettings.Main.set -> void
Pulumi.X.Automation.ProjectSettings.Name.get -> string
Pulumi.X.Automation.ProjectSettings.Name.set -> void
Pulumi.X.Automation.ProjectSettings.ProjectSettings(string name, Pulumi.X.Automation.ProjectRuntime runtime) -> void
Pulumi.X.Automation.ProjectSettings.Runtime.get -> Pulumi.X.Automation.ProjectRuntime
Pulumi.X.Automation.ProjectSettings.Runtime.set -> void
Pulumi.X.Automation.ProjectSettings.Template.get -> Pulumi.X.Automation.ProjectTemplate
Pulumi.X.Automation.ProjectSettings.Template.set -> void
Pulumi.X.Automation.ProjectSettings.Website.get -> string
Pulumi.X.Automation.ProjectSettings.Website.set -> void
Pulumi.X.Automation.ProjectTemplate
Pulumi.X.Automation.ProjectTemplate.Config.get -> System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.ProjectTemplateConfigValue>
Pulumi.X.Automation.ProjectTemplate.Config.set -> void
Pulumi.X.Automation.ProjectTemplate.Description.get -> string
Pulumi.X.Automation.ProjectTemplate.Description.set -> void
Pulumi.X.Automation.ProjectTemplate.Important.get -> bool?
Pulumi.X.Automation.ProjectTemplate.Important.set -> void
Pulumi.X.Automation.ProjectTemplate.ProjectTemplate() -> void
Pulumi.X.Automation.ProjectTemplate.QuickStart.get -> string
Pulumi.X.Automation.ProjectTemplate.QuickStart.set -> void
Pulumi.X.Automation.ProjectTemplateConfigValue
Pulumi.X.Automation.ProjectTemplateConfigValue.Default.get -> string
Pulumi.X.Automation.ProjectTemplateConfigValue.Default.set -> void
Pulumi.X.Automation.ProjectTemplateConfigValue.Description.get -> string
Pulumi.X.Automation.ProjectTemplateConfigValue.Description.set -> void
Pulumi.X.Automation.ProjectTemplateConfigValue.ProjectTemplateConfigValue() -> void
Pulumi.X.Automation.ProjectTemplateConfigValue.Secret.get -> bool?
Pulumi.X.Automation.ProjectTemplateConfigValue.Secret.set -> void
Pulumi.X.Automation.PulumiFn
Pulumi.X.Automation.StackSettings
Pulumi.X.Automation.StackSettings.Config.get -> System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.StackSettingsConfigValue>
Pulumi.X.Automation.StackSettings.Config.set -> void
Pulumi.X.Automation.StackSettings.EncryptedKey.get -> string
Pulumi.X.Automation.StackSettings.EncryptedKey.set -> void
Pulumi.X.Automation.StackSettings.EncryptionSalt.get -> string
Pulumi.X.Automation.StackSettings.EncryptionSalt.set -> void
Pulumi.X.Automation.StackSettings.SecretsProvider.get -> string
Pulumi.X.Automation.StackSettings.SecretsProvider.set -> void
Pulumi.X.Automation.StackSettings.StackSettings() -> void
Pulumi.X.Automation.StackSettingsConfigValue
Pulumi.X.Automation.StackSettingsConfigValue.IsSecure.get -> bool
Pulumi.X.Automation.StackSettingsConfigValue.StackSettingsConfigValue(string value, bool isSecure) -> void
Pulumi.X.Automation.StackSettingsConfigValue.Value.get -> string
Pulumi.X.Automation.StackSummary
Pulumi.X.Automation.StackSummary.IsCurrent.get -> bool
Pulumi.X.Automation.StackSummary.IsUpdateInProgress.get -> bool
Pulumi.X.Automation.StackSummary.LastUpdate.get -> System.DateTimeOffset?
Pulumi.X.Automation.StackSummary.Name.get -> string
Pulumi.X.Automation.StackSummary.ResourceCount.get -> int?
Pulumi.X.Automation.StackSummary.Url.get -> string
Pulumi.X.Automation.WhoAmIResult
Pulumi.X.Automation.WhoAmIResult.User.get -> string
Pulumi.X.Automation.WhoAmIResult.WhoAmIResult(string user) -> void
Pulumi.X.Automation.Workspace
Pulumi.X.Automation.Workspace.CreateStackAsync(string stackName) -> System.Threading.Tasks.Task
Pulumi.X.Automation.Workspace.SelectStackAsync(string stackName) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack
Pulumi.X.Automation.XStack.Dispose() -> void
Pulumi.X.Automation.XStack.GetConfigAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
Pulumi.X.Automation.XStack.GetConfigValueAsync(string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.ConfigValue>
Pulumi.X.Automation.XStack.Name.get -> string
Pulumi.X.Automation.XStack.RefreshConfigAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
Pulumi.X.Automation.XStack.RemoveConfigAsync(System.Collections.Generic.IEnumerable<string> keys, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack.RemoveConfigValueAsync(string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack.SetConfigAsync(System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.ConfigValue> configMap, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack.SetConfigValueAsync(string key, Pulumi.X.Automation.ConfigValue value, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack.Up(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
Pulumi.X.Automation.XStack.Workspace.get -> Pulumi.X.Automation.Workspace
abstract Pulumi.X.Automation.Workspace.CreateStackAsync(string stackName, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.EnvironmentVariables.get -> System.Collections.Generic.IDictionary<string, string>
abstract Pulumi.X.Automation.Workspace.EnvironmentVariables.set -> void
abstract Pulumi.X.Automation.Workspace.GetConfigAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
abstract Pulumi.X.Automation.Workspace.GetConfigValueAsync(string stackName, string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.ConfigValue>
abstract Pulumi.X.Automation.Workspace.InstallPluginAsync(string name, string version, string kind = "resource", System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.ListPluginsAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<Pulumi.X.Automation.PluginInfo>>
abstract Pulumi.X.Automation.Workspace.ListStacksAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<Pulumi.X.Automation.StackSummary>>
abstract Pulumi.X.Automation.Workspace.PostCommandCallbackAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.Program.get -> Pulumi.X.Automation.PulumiFn
abstract Pulumi.X.Automation.Workspace.Program.set -> void
abstract Pulumi.X.Automation.Workspace.PulumiHome.get -> string
abstract Pulumi.X.Automation.Workspace.RefreshConfigAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
abstract Pulumi.X.Automation.Workspace.RemoveConfigAsync(string stackName, System.Collections.Generic.IEnumerable<string> keys, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.RemoveConfigValueAsync(string stackName, string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.RemovePluginAsync(string name = null, string versionRange = null, string kind = "resource", System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.RemoveStackAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.SecretsProvider.get -> string
abstract Pulumi.X.Automation.Workspace.SelectStackAsync(string stackName, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.SerializeArgsForOpAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<string>>
abstract Pulumi.X.Automation.Workspace.SetConfigAsync(string stackName, System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.ConfigValue> configMap, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.SetConfigValueAsync(string stackName, string key, Pulumi.X.Automation.ConfigValue value, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
abstract Pulumi.X.Automation.Workspace.WhoAmIAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.WhoAmIResult>
abstract Pulumi.X.Automation.Workspace.WorkDir.get -> string
override Pulumi.X.Automation.LocalWorkspace.CreateStackAsync(string stackName, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.Dispose() -> void
override Pulumi.X.Automation.LocalWorkspace.EnvironmentVariables.get -> System.Collections.Generic.IDictionary<string, string>
override Pulumi.X.Automation.LocalWorkspace.EnvironmentVariables.set -> void
override Pulumi.X.Automation.LocalWorkspace.GetConfigAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
override Pulumi.X.Automation.LocalWorkspace.GetConfigValueAsync(string stackName, string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.ConfigValue>
override Pulumi.X.Automation.LocalWorkspace.InstallPluginAsync(string name, string version, string kind = "resource", System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.ListPluginsAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<Pulumi.X.Automation.PluginInfo>>
override Pulumi.X.Automation.LocalWorkspace.ListStacksAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<Pulumi.X.Automation.StackSummary>>
override Pulumi.X.Automation.LocalWorkspace.PostCommandCallbackAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.Program.get -> Pulumi.X.Automation.PulumiFn
override Pulumi.X.Automation.LocalWorkspace.Program.set -> void
override Pulumi.X.Automation.LocalWorkspace.PulumiHome.get -> string
override Pulumi.X.Automation.LocalWorkspace.RefreshConfigAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableDictionary<string, Pulumi.X.Automation.ConfigValue>>
override Pulumi.X.Automation.LocalWorkspace.RemoveConfigAsync(string stackName, System.Collections.Generic.IEnumerable<string> keys, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.RemoveConfigValueAsync(string stackName, string key, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.RemovePluginAsync(string name = null, string versionRange = null, string kind = "resource", System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.RemoveStackAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.SecretsProvider.get -> string
override Pulumi.X.Automation.LocalWorkspace.SelectStackAsync(string stackName, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.SerializeArgsForOpAsync(string stackName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableList<string>>
override Pulumi.X.Automation.LocalWorkspace.SetConfigAsync(string stackName, System.Collections.Generic.IDictionary<string, Pulumi.X.Automation.ConfigValue> configMap, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.SetConfigValueAsync(string stackName, string key, Pulumi.X.Automation.ConfigValue value, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
override Pulumi.X.Automation.LocalWorkspace.WhoAmIAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.WhoAmIResult>
override Pulumi.X.Automation.LocalWorkspace.WorkDir.get -> string
static Pulumi.X.Automation.LocalWorkspace.CreateAsync(Pulumi.X.Automation.LocalWorkspaceOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.LocalWorkspace>
static Pulumi.X.Automation.LocalWorkspace.CreateOrSelectStackAsync(Pulumi.X.Automation.InlineProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateOrSelectStackAsync(Pulumi.X.Automation.InlineProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateOrSelectStackAsync(Pulumi.X.Automation.LocalProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateOrSelectStackAsync(Pulumi.X.Automation.LocalProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateStackAsync(Pulumi.X.Automation.InlineProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateStackAsync(Pulumi.X.Automation.InlineProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateStackAsync(Pulumi.X.Automation.LocalProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.CreateStackAsync(Pulumi.X.Automation.LocalProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.SelectStackAsync(Pulumi.X.Automation.InlineProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.SelectStackAsync(Pulumi.X.Automation.InlineProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.SelectStackAsync(Pulumi.X.Automation.LocalProgramArgs args) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.LocalWorkspace.SelectStackAsync(Pulumi.X.Automation.LocalProgramArgs args, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.XStack.CreateAsync(string name, Pulumi.X.Automation.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.XStack.CreateOrSelectAsync(string name, Pulumi.X.Automation.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
static Pulumi.X.Automation.XStack.SelectAsync(string name, Pulumi.X.Automation.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.XStack>
virtual Pulumi.X.Automation.Workspace.Dispose() -> void
virtual Pulumi.X.Automation.Workspace.GetStackAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Pulumi.X.Automation.StackSummary>