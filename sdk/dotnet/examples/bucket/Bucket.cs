//// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
//// *** Do not edit by hand unless you're certain you know what you are doing! ***

//using Pulumi.Serialization;

//namespace Pulumi.Aws.S3
//{
//    public class Bucket : CustomResource
//    {
//        [Output("accelerationStatus")]
//        public Output<string> AccelerationStatus { get; private set; }

//        [Output("acl")]
//        public Output<string?> Acl { get; private set; }

//        [Output("arn")]
//        public Output<string> Arn { get; private set; }

//        [Output("bucket")]
//        public Output<string> Bucket { get; private set; }

//        [Output("bucketDomainName")]
//        public Output<string> BucketDomainName { get; private set; }

//        [Output("bucketPrefix")]
//        public Output<string?> BucketPrefix { get; private set; }

//        [Output("bucketRegionalDomainName")]
//        public Output<string> BucketRegionalDomainName { get; private set; }

//        [Output("corsRules")]
//        public Output<ImmutableArray<BucketCorsRules>?> CorsRules { get; private set; }

//        [Output("forceDestroy")]
//        public Output<bool?> ForceDestroy { get; private set; }

//        [Output("hostedZoneId")]
//        public Output<string> HostedZoneId { get; private set; }

//        [Output("lifecycleRules")]
//        public Output<ImmutableArray<BucketLifecycleRules>?> LifecycleRules { get; private set; }

//        [Output("loggings")]
//        public Output<ImmutableArray<BucketLoggings>?> Loggings { get; private set; }

//        [Output("objectLockConfiguration")]
//        public Output<BucketObjectLockConfiguration?> ObjectLockConfiguration { get; private set; }

//        [Output("policy")]
//        public Output<string?> Policy { get; private set; }

//        [Output("region")]
//        public Output<string> Region { get; private set; }

//        [Output("replicationConfiguration")]
//        public Output<BucketReplicationConfiguration?> ReplicationConfiguration { get; private set; }

//        [Output("requestPayer")]
//        public Output<string> RequestPayer { get; private set; }

//        [Output("serverSideEncryptionConfiguration")]
//        public Output<BucketServerSideEncryptionConfiguration?> ServerSideEncryptionConfiguration { get; private set; }

//        [Output("tags")]
//        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; }

//        [Output("versioning")]
//        public Output<BucketVersioning> Versioning { get; private set; }

//        [Output("website")]
//        public Output<BucketWebsite?> Website { get; private set; }

//        [Output("websiteDomain")]
//        public Output<string> WebsiteDomain { get; private set; }

//        [Output("websiteEndpoint")]
//        public Output<string> WebsiteEndpoint { get; private set; }


//        public Bucket(string name, BucketArgs args = null, CustomResourceOptions options = null)
//            : base("aws:s3/bucket:Bucket", name, args, options)
//        {
//        }
//    }

//    public class BucketArgs : ResourceArgs
//    {
//        [Input("accelerationStatus")]
//        public Input<string> AccelerationStatus { get; set; }

//        [Input("acl")]
//        public Input<string> Acl { get; set; }

//        [Input("arn")]
//        public Input<string> Arn { get; set; }

//        [Input("bucket")]
//        public Input<string> Bucket { get; set; }

//        [Input("bucketPrefix")]
//        public Input<string> BucketPrefix { get; set; }

//        [Input("corsRules")]
//        private InputList<BucketCorsRulesArgs> _corsRules;
//        public InputList<BucketCorsRulesArgs> CorsRules
//        {
//            get => _corsRules ?? (_corsRules = new InputList<BucketCorsRulesArgs>());
//            set => _corsRules = value;
//        }

//        [Input("forceDestroy")]
//        public Input<bool> ForceDestroy { get; set; }

//        [Input("hostedZoneId")]
//        public Input<string> HostedZoneId { get; set; }

//        [Input("lifecycleRules")]
//        private InputList<BucketLifecycleRulesArgs> _lifecycleRules;
//        public InputList<BucketLifecycleRulesArgs> LifecycleRules
//        {
//            get => _lifecycleRules ?? (_lifecycleRules = new InputList<BucketLifecycleRulesArgs>());
//            set => _lifecycleRules = value;
//        }

//        [Input("loggings")]
//        private InputList<BucketLoggingsArgs> _loggings;
//        public InputList<BucketLoggingsArgs> Loggings
//        {
//            get => _loggings ?? (_loggings = new InputList<BucketLoggingsArgs>());
//            set => _loggings = value;
//        }

//        [Input("objectLockConfiguration")]
//        private Input<BucketObjectLockConfigurationArgs> _objectLockConfiguration;
//        public Input<BucketObjectLockConfigurationArgs> ObjectLockConfiguration
//        {
//            get => _objectLockConfiguration ?? (_objectLockConfiguration = new Input<BucketObjectLockConfigurationArgs>());
//            set => _objectLockConfiguration = value;
//        }

//        [Input("policy")]
//        public Input<string> Policy { get; set; }

//        [Input("region")]
//        public Input<string> Region { get; set; }

//        [Input("replicationConfiguration")]
//        private Input<BucketReplicationConfigurationArgs> _replicationConfiguration;
//        public Input<BucketReplicationConfigurationArgs> ReplicationConfiguration
//        {
//            get => _replicationConfiguration ?? (_replicationConfiguration = new Input<BucketReplicationConfigurationArgs>());
//            set => _replicationConfiguration = value;
//        }

//        [Input("requestPayer")]
//        public Input<string> RequestPayer { get; set; }

//        [Input("serverSideEncryptionConfiguration")]
//        private Input<BucketServerSideEncryptionConfigurationArgs> _serverSideEncryptionConfiguration;
//        public Input<BucketServerSideEncryptionConfigurationArgs> ServerSideEncryptionConfiguration
//        {
//            get => _serverSideEncryptionConfiguration ?? (_serverSideEncryptionConfiguration = new Input<BucketServerSideEncryptionConfigurationArgs>());
//            set => _serverSideEncryptionConfiguration = value;
//        }

//        [Input("tags")]
//        private InputMap<object> _tags;
//        public InputMap<object> Tags
//        {
//            get => _tags ?? (_tags = new InputMap<object>());
//            set => _tags = value;
//        }

//        [Input("versioning")]
//        private Input<BucketVersioningArgs> _versioning;
//        public Input<BucketVersioningArgs> Versioning
//        {
//            get => _versioning ?? (_versioning = new Input<BucketVersioningArgs>());
//            set => _versioning = value;
//        }

//        [Input("website")]
//        private Input<BucketWebsiteArgs> _website;
//        public Input<BucketWebsiteArgs> Website
//        {
//            get => _website ?? (_website = new Input<BucketWebsiteArgs>());
//            set => _website = value;
//        }

//        [Input("websiteDomain")]
//        public Input<string> WebsiteDomain { get; set; }

//        [Input("websiteEndpoint")]
//        public Input<string> WebsiteEndpoint { get; set; }

//        public BucketArgs()
//        {
//        }
//    }

//    public class BucketCorsRulesArgs
//    {
//        [Input("allowedHeaders")]
//        private InputList<string> _allowedHeaders;
//        public InputList<string> AllowedHeaders
//        {
//            get => _allowedHeaders ?? (_allowedHeaders = new InputList<string>());
//            set => _allowedHeaders = value;
//        }

//        [Input("allowedMethods", required = true)]
//        private InputList<string> _allowedMethods;
//        public InputList<string> AllowedMethods
//        {
//            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
//            set => _allowedMethods = value;
//        }

//        [Input("allowedOrigins", required = true)]
//        private InputList<string> _allowedOrigins;
//        public InputList<string> AllowedOrigins
//        {
//            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
//            set => _allowedOrigins = value;
//        }

//        [Input("exposeHeaders")]
//        private InputList<string> _exposeHeaders;
//        public InputList<string> ExposeHeaders
//        {
//            get => _exposeHeaders ?? (_exposeHeaders = new InputList<string>());
//            set => _exposeHeaders = value;
//        }

//        [Input("maxAgeSeconds")]
//        public Input<int> MaxAgeSeconds { get; set; }

//        public BucketCorsRulesArgs()
//        {
//        }
//    }

//    public class BucketLifecycleRulesArgs
//    {
//        [Input("abortIncompleteMultipartUploadDays")]
//        public Input<int> AbortIncompleteMultipartUploadDays { get; set; }

//        [Input("enabled", required = true)]
//        public Input<bool> Enabled { get; set; }

//        [Input("expiration")]
//        private Input<BucketLifecycleRulesExpirationArgs> _expiration;
//        public Input<BucketLifecycleRulesExpirationArgs> Expiration
//        {
//            get => _expiration ?? (_expiration = new Input<BucketLifecycleRulesExpirationArgs>());
//            set => _expiration = value;
//        }

//        [Input("id")]
//        public Input<string> Id { get; set; }

//        [Input("noncurrentVersionExpiration")]
//        private Input<BucketLifecycleRulesNoncurrentVersionExpirationArgs> _noncurrentVersionExpiration;
//        public Input<BucketLifecycleRulesNoncurrentVersionExpirationArgs> NoncurrentVersionExpiration
//        {
//            get => _noncurrentVersionExpiration ?? (_noncurrentVersionExpiration = new Input<BucketLifecycleRulesNoncurrentVersionExpirationArgs>());
//            set => _noncurrentVersionExpiration = value;
//        }

//        [Input("noncurrentVersionTransitions")]
//        private InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs> _noncurrentVersionTransitions;
//        public InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs> NoncurrentVersionTransitions
//        {
//            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs>());
//            set => _noncurrentVersionTransitions = value;
//        }

//        [Input("prefix")]
//        public Input<string> Prefix { get; set; }

//        [Input("tags")]
//        private InputMap<object> _tags;
//        public InputMap<object> Tags
//        {
//            get => _tags ?? (_tags = new InputMap<object>());
//            set => _tags = value;
//        }

//        [Input("transitions")]
//        private InputList<BucketLifecycleRulesTransitionsArgs> _transitions;
//        public InputList<BucketLifecycleRulesTransitionsArgs> Transitions
//        {
//            get => _transitions ?? (_transitions = new InputList<BucketLifecycleRulesTransitionsArgs>());
//            set => _transitions = value;
//        }

//        public BucketLifecycleRulesArgs()
//        {
//        }
//    }

//    public class BucketLifecycleRulesExpirationArgs
//    {
//        [Input("date")]
//        public Input<string> Date { get; set; }

//        [Input("days")]
//        public Input<int> Days { get; set; }

//        [Input("expiredObjectDeleteMarker")]
//        public Input<bool> ExpiredObjectDeleteMarker { get; set; }

//        public BucketLifecycleRulesExpirationArgs()
//        {
//        }
//    }

//    public class BucketLifecycleRulesNoncurrentVersionExpirationArgs
//    {
//        [Input("days")]
//        public Input<int> Days { get; set; }

//        public BucketLifecycleRulesNoncurrentVersionExpirationArgs()
//        {
//        }
//    }

//    public class BucketLifecycleRulesNoncurrentVersionTransitionsArgs
//    {
//        [Input("days")]
//        public Input<int> Days { get; set; }

//        [Input("storageClass", required = true)]
//        public Input<string> StorageClass { get; set; }

//        public BucketLifecycleRulesNoncurrentVersionTransitionsArgs()
//        {
//        }
//    }

//    public class BucketLifecycleRulesTransitionsArgs
//    {
//        [Input("date")]
//        public Input<string> Date { get; set; }

//        [Input("days")]
//        public Input<int> Days { get; set; }

//        [Input("storageClass", required = true)]
//        public Input<string> StorageClass { get; set; }

//        public BucketLifecycleRulesTransitionsArgs()
//        {
//        }
//    }

//    public class BucketLoggingsArgs
//    {
//        [Input("targetBucket", required = true)]
//        public Input<string> TargetBucket { get; set; }

//        [Input("targetPrefix")]
//        public Input<string> TargetPrefix { get; set; }

//        public BucketLoggingsArgs()
//        {
//        }
//    }

//    public class BucketObjectLockConfigurationArgs
//    {
//        [Input("objectLockEnabled", required = true)]
//        public Input<string> ObjectLockEnabled { get; set; }

//        [Input("rule")]
//        private Input<BucketObjectLockConfigurationRuleArgs> _rule;
//        public Input<BucketObjectLockConfigurationRuleArgs> Rule
//        {
//            get => _rule ?? (_rule = new Input<BucketObjectLockConfigurationRuleArgs>());
//            set => _rule = value;
//        }

//        public BucketObjectLockConfigurationArgs()
//        {
//        }
//    }

//    public class BucketObjectLockConfigurationRuleArgs
//    {
//        [Input("defaultRetention", required = true)]
//        private Input<BucketObjectLockConfigurationRuleDefaultRetentionArgs> _defaultRetention;
//        public Input<BucketObjectLockConfigurationRuleDefaultRetentionArgs> DefaultRetention
//        {
//            get => _defaultRetention ?? (_defaultRetention = new Input<BucketObjectLockConfigurationRuleDefaultRetentionArgs>());
//            set => _defaultRetention = value;
//        }

//        public BucketObjectLockConfigurationRuleArgs()
//        {
//        }
//    }

//    public class BucketObjectLockConfigurationRuleDefaultRetentionArgs
//    {
//        [Input("days")]
//        public Input<int> Days { get; set; }

//        [Input("mode", required = true)]
//        public Input<string> Mode { get; set; }

//        [Input("years")]
//        public Input<int> Years { get; set; }

//        public BucketObjectLockConfigurationRuleDefaultRetentionArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationArgs
//    {
//        [Input("role", required = true)]
//        public Input<string> Role { get; set; }

//        [Input("rules", required = true)]
//        private InputList<BucketReplicationConfigurationRulesArgs> _rules;
//        public InputList<BucketReplicationConfigurationRulesArgs> Rules
//        {
//            get => _rules ?? (_rules = new InputList<BucketReplicationConfigurationRulesArgs>());
//            set => _rules = value;
//        }

//        public BucketReplicationConfigurationArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesArgs
//    {
//        [Input("destination", required = true)]
//        private Input<BucketReplicationConfigurationRulesDestinationArgs> _destination;
//        public Input<BucketReplicationConfigurationRulesDestinationArgs> Destination
//        {
//            get => _destination ?? (_destination = new Input<BucketReplicationConfigurationRulesDestinationArgs>());
//            set => _destination = value;
//        }

//        [Input("filter")]
//        private Input<BucketReplicationConfigurationRulesFilterArgs> _filter;
//        public Input<BucketReplicationConfigurationRulesFilterArgs> Filter
//        {
//            get => _filter ?? (_filter = new Input<BucketReplicationConfigurationRulesFilterArgs>());
//            set => _filter = value;
//        }

//        [Input("id")]
//        public Input<string> Id { get; set; }

//        [Input("prefix")]
//        public Input<string> Prefix { get; set; }

//        [Input("priority")]
//        public Input<int> Priority { get; set; }

//        [Input("sourceSelectionCriteria")]
//        private Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs> _sourceSelectionCriteria;
//        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs> SourceSelectionCriteria
//        {
//            get => _sourceSelectionCriteria ?? (_sourceSelectionCriteria = new Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs>());
//            set => _sourceSelectionCriteria = value;
//        }

//        [Input("status", required = true)]
//        public Input<string> Status { get; set; }

//        public BucketReplicationConfigurationRulesArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs
//    {
//        [Input("owner", required = true)]
//        public Input<string> Owner { get; set; }

//        public BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesDestinationArgs
//    {
//        [Input("accessControlTranslation")]
//        private Input<BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs> _accessControlTranslation;
//        public Input<BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs> AccessControlTranslation
//        {
//            get => _accessControlTranslation ?? (_accessControlTranslation = new Input<BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs>());
//            set => _accessControlTranslation = value;
//        }

//        [Input("accountId")]
//        public Input<string> AccountId { get; set; }

//        [Input("bucket", required = true)]
//        public Input<string> Bucket { get; set; }

//        [Input("replicaKmsKeyId")]
//        public Input<string> ReplicaKmsKeyId { get; set; }

//        [Input("storageClass")]
//        public Input<string> StorageClass { get; set; }

//        public BucketReplicationConfigurationRulesDestinationArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesFilterArgs
//    {
//        [Input("prefix")]
//        public Input<string> Prefix { get; set; }

//        [Input("tags")]
//        private InputMap<object> _tags;
//        public InputMap<object> Tags
//        {
//            get => _tags ?? (_tags = new InputMap<object>());
//            set => _tags = value;
//        }

//        public BucketReplicationConfigurationRulesFilterArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs
//    {
//        [Input("sseKmsEncryptedObjects")]
//        private Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs> _sseKmsEncryptedObjects;
//        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs> SseKmsEncryptedObjects
//        {
//            get => _sseKmsEncryptedObjects ?? (_sseKmsEncryptedObjects = new Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs>());
//            set => _sseKmsEncryptedObjects = value;
//        }

//        public BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs()
//        {
//        }
//    }

//    public class BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs
//    {
//        [Input("enabled", required = true)]
//        public Input<bool> Enabled { get; set; }

//        public BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs()
//        {
//        }
//    }

//    public class BucketServerSideEncryptionConfigurationArgs
//    {
//        [Input("rule", required = true)]
//        private Input<BucketServerSideEncryptionConfigurationRuleArgs> _rule;
//        public Input<BucketServerSideEncryptionConfigurationRuleArgs> Rule
//        {
//            get => _rule ?? (_rule = new Input<BucketServerSideEncryptionConfigurationRuleArgs>());
//            set => _rule = value;
//        }

//        public BucketServerSideEncryptionConfigurationArgs()
//        {
//        }
//    }

//    public class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs
//    {
//        [Input("kmsMasterKeyId")]
//        public Input<string> KmsMasterKeyId { get; set; }

//        [Input("sseAlgorithm", required = true)]
//        public Input<string> SseAlgorithm { get; set; }

//        public BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs()
//        {
//        }
//    }

//    public class BucketServerSideEncryptionConfigurationRuleArgs
//    {
//        [Input("applyServerSideEncryptionByDefault", required = true)]
//        private Input<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> _applyServerSideEncryptionByDefault;
//        public Input<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> ApplyServerSideEncryptionByDefault
//        {
//            get => _applyServerSideEncryptionByDefault ?? (_applyServerSideEncryptionByDefault = new Input<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs>());
//            set => _applyServerSideEncryptionByDefault = value;
//        }

//        public BucketServerSideEncryptionConfigurationRuleArgs()
//        {
//        }
//    }

//    public class BucketVersioningArgs
//    {
//        [Input("enabled")]
//        public Input<bool> Enabled { get; set; }

//        [Input("mfaDelete")]
//        public Input<bool> MfaDelete { get; set; }

//        public BucketVersioningArgs()
//        {
//        }
//    }

//    public class BucketWebsiteArgs
//    {
//        [Input("errorDocument")]
//        public Input<string> ErrorDocument { get; set; }

//        [Input("indexDocument")]
//        public Input<string> IndexDocument { get; set; }

//        [Input("redirectAllRequestsTo")]
//        public Input<string> RedirectAllRequestsTo { get; set; }

//        [Input("routingRules")]
//        public Input<string> RoutingRules { get; set; }

//        public BucketWebsiteArgs()
//        {
//        }
//    }

//    [OutputType]
//    public class BucketCorsRules
//    {
//        public readonly ImmutableArray<string>? AllowedHeaders;

//        public readonly ImmutableArray<string> AllowedMethods;

//        public readonly ImmutableArray<string> AllowedOrigins;

//        public readonly ImmutableArray<string>? ExposeHeaders;

//        public readonly int? MaxAgeSeconds;

//        [OutputConstructor]
//        private BucketCorsRules(
//            allowedHeaders ImmutableArray<string>?,
//            allowedMethods ImmutableArray<string>,
//            allowedOrigins ImmutableArray<string>,
//            exposeHeaders ImmutableArray<string>?,
//            maxAgeSeconds int?)
//        {
//            AllowedHeaders = allowedHeaders;
//            AllowedMethods = allowedMethods;
//            AllowedOrigins = allowedOrigins;
//            ExposeHeaders = exposeHeaders;
//            MaxAgeSeconds = maxAgeSeconds;
//        }
//    }

//    [OutputType]
//    public class BucketLifecycleRules
//    {
//        public readonly int? AbortIncompleteMultipartUploadDays;

//        public readonly bool Enabled;

//        public readonly BucketLifecycleRulesExpiration? Expiration;

//        public readonly string Id;

//        public readonly BucketLifecycleRulesNoncurrentVersionExpiration? NoncurrentVersionExpiration;

//        public readonly ImmutableArray<BucketLifecycleRulesNoncurrentVersionTransitions>? NoncurrentVersionTransitions;

//        public readonly string? Prefix;

//        public readonly ImmutableDictionary<string, object>? Tags;

//        public readonly ImmutableArray<BucketLifecycleRulesTransitions>? Transitions;

//        [OutputConstructor]
//        private BucketLifecycleRules(
//            abortIncompleteMultipartUploadDays int?,
//            enabled bool,
//            expiration BucketLifecycleRulesExpiration?,
//            id string,
//            noncurrentVersionExpiration BucketLifecycleRulesNoncurrentVersionExpiration?,
//            noncurrentVersionTransitions ImmutableArray<BucketLifecycleRulesNoncurrentVersionTransitions>?,
//            prefix string?,
//            tags ImmutableDictionary<string, object>?,
//            transitions ImmutableArray<BucketLifecycleRulesTransitions>?)
//        {
//            AbortIncompleteMultipartUploadDays = abortIncompleteMultipartUploadDays;
//            Enabled = enabled;
//            Expiration = expiration;
//            Id = id;
//            NoncurrentVersionExpiration = noncurrentVersionExpiration;
//            NoncurrentVersionTransitions = noncurrentVersionTransitions;
//            Prefix = prefix;
//            Tags = tags;
//            Transitions = transitions;
//        }
//    }

//    [OutputType]
//    public class BucketLifecycleRulesExpiration
//    {
//        public readonly string? Date;

//        public readonly int? Days;

//        public readonly bool? ExpiredObjectDeleteMarker;

//        [OutputConstructor]
//        private BucketLifecycleRulesExpiration(
//            date string?,
//            days int?,
//            expiredObjectDeleteMarker bool?)
//        {
//            Date = date;
//            Days = days;
//            ExpiredObjectDeleteMarker = expiredObjectDeleteMarker;
//        }
//    }

//    [OutputType]
//    public class BucketLifecycleRulesNoncurrentVersionExpiration
//    {
//        public readonly int? Days;

//        [OutputConstructor]
//        private BucketLifecycleRulesNoncurrentVersionExpiration(
//            days int?)
//        {
//            Days = days;
//        }
//    }

//    [OutputType]
//    public class BucketLifecycleRulesNoncurrentVersionTransitions
//    {
//        public readonly int? Days;

//        public readonly string StorageClass;

//        [OutputConstructor]
//        private BucketLifecycleRulesNoncurrentVersionTransitions(
//            days int?,
//            storageClass string)
//        {
//            Days = days;
//            StorageClass = storageClass;
//        }
//    }

//    [OutputType]
//    public class BucketLifecycleRulesTransitions
//    {
//        public readonly string? Date;

//        public readonly int? Days;

//        public readonly string StorageClass;

//        [OutputConstructor]
//        private BucketLifecycleRulesTransitions(
//            date string?,
//            days int?,
//            storageClass string)
//        {
//            Date = date;
//            Days = days;
//            StorageClass = storageClass;
//        }
//    }

//    [OutputType]
//    public class BucketLoggings
//    {
//        public readonly string TargetBucket;

//        public readonly string? TargetPrefix;

//        [OutputConstructor]
//        private BucketLoggings(
//            targetBucket string,
//            targetPrefix string?)
//        {
//            TargetBucket = targetBucket;
//            TargetPrefix = targetPrefix;
//        }
//    }

//    [OutputType]
//    public class BucketObjectLockConfiguration
//    {
//        public readonly string ObjectLockEnabled;

//        public readonly BucketObjectLockConfigurationRule? Rule;

//        [OutputConstructor]
//        private BucketObjectLockConfiguration(
//            objectLockEnabled string,
//            rule BucketObjectLockConfigurationRule?)
//        {
//            ObjectLockEnabled = objectLockEnabled;
//            Rule = rule;
//        }
//    }

//    [OutputType]
//    public class BucketObjectLockConfigurationRule
//    {
//        public readonly BucketObjectLockConfigurationRuleDefaultRetention DefaultRetention;

//        [OutputConstructor]
//        private BucketObjectLockConfigurationRule(
//            defaultRetention BucketObjectLockConfigurationRuleDefaultRetention)
//        {
//            DefaultRetention = defaultRetention;
//        }
//    }

//    [OutputType]
//    public class BucketObjectLockConfigurationRuleDefaultRetention
//    {
//        public readonly int? Days;

//        public readonly string Mode;

//        public readonly int? Years;

//        [OutputConstructor]
//        private BucketObjectLockConfigurationRuleDefaultRetention(
//            days int?,
//            mode string,
//            years int?)
//        {
//            Days = days;
//            Mode = mode;
//            Years = years;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfiguration
//    {
//        public readonly string Role;

//        public readonly ImmutableArray<BucketReplicationConfigurationRules> Rules;

//        [OutputConstructor]
//        private BucketReplicationConfiguration(
//            role string,
//            rules ImmutableArray<BucketReplicationConfigurationRules>)
//        {
//            Role = role;
//            Rules = rules;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRules
//    {
//        public readonly BucketReplicationConfigurationRulesDestination Destination;

//        public readonly BucketReplicationConfigurationRulesFilter? Filter;

//        public readonly string? Id;

//        public readonly string? Prefix;

//        public readonly int? Priority;

//        public readonly BucketReplicationConfigurationRulesSourceSelectionCriteria? SourceSelectionCriteria;

//        public readonly string Status;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRules(
//            destination BucketReplicationConfigurationRulesDestination,
//            filter BucketReplicationConfigurationRulesFilter?,
//            id string?,
//            prefix string?,
//            priority int?,
//            sourceSelectionCriteria BucketReplicationConfigurationRulesSourceSelectionCriteria?,
//            status string)
//        {
//            Destination = destination;
//            Filter = filter;
//            Id = id;
//            Prefix = prefix;
//            Priority = priority;
//            SourceSelectionCriteria = sourceSelectionCriteria;
//            Status = status;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRulesDestination
//    {
//        public readonly BucketReplicationConfigurationRulesDestinationAccessControlTranslation? AccessControlTranslation;

//        public readonly string? AccountId;

//        public readonly string Bucket;

//        public readonly string? ReplicaKmsKeyId;

//        public readonly string? StorageClass;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRulesDestination(
//            accessControlTranslation BucketReplicationConfigurationRulesDestinationAccessControlTranslation?,
//            accountId string?,
//            bucket string,
//            replicaKmsKeyId string?,
//            storageClass string?)
//        {
//            AccessControlTranslation = accessControlTranslation;
//            AccountId = accountId;
//            Bucket = bucket;
//            ReplicaKmsKeyId = replicaKmsKeyId;
//            StorageClass = storageClass;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRulesDestinationAccessControlTranslation
//    {
//        public readonly string Owner;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRulesDestinationAccessControlTranslation(
//            owner string)
//        {
//            Owner = owner;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRulesFilter
//    {
//        public readonly string? Prefix;

//        public readonly ImmutableDictionary<string, object>? Tags;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRulesFilter(
//            prefix string?,
//            tags ImmutableDictionary<string, object>?)
//        {
//            Prefix = prefix;
//            Tags = tags;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRulesSourceSelectionCriteria
//    {
//        public readonly BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects? SseKmsEncryptedObjects;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRulesSourceSelectionCriteria(
//            sseKmsEncryptedObjects BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects?)
//        {
//            SseKmsEncryptedObjects = sseKmsEncryptedObjects;
//        }
//    }

//    [OutputType]
//    public class BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects
//    {
//        public readonly bool Enabled;

//        [OutputConstructor]
//        private BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects(
//            enabled bool)
//        {
//            Enabled = enabled;
//        }
//    }

//    [OutputType]
//    public class BucketServerSideEncryptionConfiguration
//    {
//        public readonly BucketServerSideEncryptionConfigurationRule Rule;

//        [OutputConstructor]
//        private BucketServerSideEncryptionConfiguration(
//            rule BucketServerSideEncryptionConfigurationRule)
//        {
//            Rule = rule;
//        }
//    }

//    [OutputType]
//    public class BucketServerSideEncryptionConfigurationRule
//    {
//        public readonly BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault ApplyServerSideEncryptionByDefault;

//        [OutputConstructor]
//        private BucketServerSideEncryptionConfigurationRule(
//            applyServerSideEncryptionByDefault BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)
//        {
//            ApplyServerSideEncryptionByDefault = applyServerSideEncryptionByDefault;
//        }
//    }

//    [OutputType]
//    public class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault
//    {
//        public readonly string? KmsMasterKeyId;

//        public readonly string SseAlgorithm;

//        [OutputConstructor]
//        private BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault(
//            kmsMasterKeyId string?,
//            sseAlgorithm string)
//        {
//            KmsMasterKeyId = kmsMasterKeyId;
//            SseAlgorithm = sseAlgorithm;
//        }
//    }

//    [OutputType]
//    public class BucketVersioning
//    {
//        public readonly bool? Enabled;

//        public readonly bool? MfaDelete;

//        [OutputConstructor]
//        private BucketVersioning(
//            enabled bool?,
//            mfaDelete bool?)
//        {
//            Enabled = enabled;
//            MfaDelete = mfaDelete;
//        }
//    }

//    [OutputType]
//    public class BucketWebsite
//    {
//        public readonly string? ErrorDocument;

//        public readonly string? IndexDocument;

//        public readonly string? RedirectAllRequestsTo;

//        public readonly string? RoutingRules;

//        [OutputConstructor]
//        private BucketWebsite(
//            errorDocument string?,
//            indexDocument string?,
//            redirectAllRequestsTo string?,
//            routingRules string?)
//        {
//            ErrorDocument = errorDocument;
//            IndexDocument = indexDocument;
//            RedirectAllRequestsTo = redirectAllRequestsTo;
//            RoutingRules = routingRules;
//        }
//    }
//}