// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package config

import (
	"encoding/json"

	"github.com/spf13/cast"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Get loads an optional configuration value by its key, or returns "" if it doesn't exist.
func Get(ctx *pulumi.Context, key string) string {
	v, _ := ctx.GetConfig(key)
	return v
}

// GetObject attempts to load an optional configuration value by its key into the specified output variable.
func GetObject(ctx *pulumi.Context, key string, output interface{}) error {
	if v, ok := ctx.GetConfig(key); ok {
		return json.Unmarshal([]byte(v), output)
	}

	return nil
}

{{range .Builtins}}
{{if .GenerateConfig}}
// Get{{.Name}} loads an optional configuration value by its key, as a {{.Type}}, or returns {{.DefaultConfig}} if it doesn't exist.
func Get{{.Name}}(ctx *pulumi.Context, key string) {{.Type}} {
	if v, ok := ctx.GetConfig(key); ok {
		return cast.To{{.Name}}(v)
	}
	return {{.DefaultConfig}}
}

{{end}}
{{end}}
// GetSecret loads an optional configuration value by its key, or "" if it does not exist, into a secret Output.
func GetSecret(ctx *pulumi.Context, key string) pulumi.Output {
	v, _ := ctx.GetConfig(key)
	return pulumi.ToSecret(pulumi.String(v))
}

// GetSecretObject attempts to load an optional configuration value by its key into the specified output variable.
func GetSecretObject(ctx *pulumi.Context, key string, output interface{}) (pulumi.Output, error) {
	if err := GetObject(ctx, key, output); err != nil {
		return nil, err
	}

	return pulumi.ToSecret(output), nil
}

{{range .Builtins}}
{{if .GenerateConfig}}
// GetSecret{{.Name}} loads an optional {{.Type}} configuration value by its key,
// or false if it does not exist, into a secret Output.
func GetSecret{{.Name}}(ctx *pulumi.Context, key string) pulumi.Output {
	return pulumi.ToSecret(Get{{.Name}}(ctx, key))
}
{{end}}
{{end}}