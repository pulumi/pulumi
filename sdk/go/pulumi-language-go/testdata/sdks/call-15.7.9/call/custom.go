// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package call

import (
	"context"
	"reflect"

	"errors"
	"example.com/pulumi-call/sdk/go/v15/call/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A custom resource that supports method calls
type Custom struct {
	pulumi.CustomResourceState

	Value pulumi.StringOutput `pulumi:"value"`
}

// NewCustom registers a new resource with the given unique name, arguments, and options.
func NewCustom(ctx *pulumi.Context,
	name string, args *CustomArgs, opts ...pulumi.ResourceOption) (*Custom, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Custom
	err := ctx.RegisterResource("call:index:Custom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustom gets an existing Custom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomState, opts ...pulumi.ResourceOption) (*Custom, error) {
	var resource Custom
	err := ctx.ReadResource("call:index:Custom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Custom resources.
type customState struct {
}

type CustomState struct {
}

func (CustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*customState)(nil)).Elem()
}

type customArgs struct {
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a Custom resource.
type CustomArgs struct {
	Value pulumi.StringInput
}

func (CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customArgs)(nil)).Elem()
}

// The `providerValue` method of the `call` package's Custom resource. Returns the resource's provider's `value` and the resource's `value` concatenated.
func (r *Custom) ProviderValue(ctx *pulumi.Context) (CustomProviderValueResult, error) {
	out, err := ctx.Call("call:index:Custom/providerValue", nil, CustomProviderValueResultOutput{}, r)
}

type CustomProviderValueResult struct {
	Result string `pulumi:"result"`
}

type CustomProviderValueResultOutput struct{ *pulumi.OutputState }

func (CustomProviderValueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderValueResult)(nil)).Elem()
}

func (o CustomProviderValueResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderValueResult) string { return v.Result }).(pulumi.StringOutput)
}

type CustomInput interface {
	pulumi.Input

	ToCustomOutput() CustomOutput
	ToCustomOutputWithContext(ctx context.Context) CustomOutput
}

func (*Custom) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (i *Custom) ToCustomOutput() CustomOutput {
	return i.ToCustomOutputWithContext(context.Background())
}

func (i *Custom) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomOutput)
}

type CustomOutput struct{ *pulumi.OutputState }

func (CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (o CustomOutput) ToCustomOutput() CustomOutput {
	return o
}

func (o CustomOutput) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return o
}

func (o CustomOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomInput)(nil)).Elem(), &Custom{})
	pulumi.RegisterOutputType(CustomOutput{})
	pulumi.RegisterOutputType(CustomProviderValueResultOutput{})
}
