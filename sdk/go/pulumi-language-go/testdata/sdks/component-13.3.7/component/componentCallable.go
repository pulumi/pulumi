// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package component

import (
	"context"
	"reflect"

	"errors"
	"example.com/pulumi-component/sdk/go/v13/component/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A component resource that has callable methods.
type ComponentCallable struct {
	pulumi.ResourceState

	Value pulumi.StringOutput `pulumi:"value"`
}

// NewComponentCallable registers a new resource with the given unique name, arguments, and options.
func NewComponentCallable(ctx *pulumi.Context,
	name string, args *ComponentCallableArgs, opts ...pulumi.ResourceOption) (*ComponentCallable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComponentCallable
	err := ctx.RegisterRemoteComponentResource("component:index:ComponentCallable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type componentCallableArgs struct {
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a ComponentCallable resource.
type ComponentCallableArgs struct {
	Value pulumi.StringInput
}

func (ComponentCallableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*componentCallableArgs)(nil)).Elem()
}

// The `identity` method of the `ComponentCallable` component resource. Returns the component's `value` unaltered.
func (r *ComponentCallable) Identity(ctx *pulumi.Context) (ComponentCallableIdentityResult, error) {
	out, err := ctx.Call("component:index:ComponentCallable/identity", nil, ComponentCallableIdentityResultOutput{}, r)
	if err != nil {
		return ComponentCallableIdentityResult{}, err
	}
	return out.(ComponentCallableIdentityResult), nil
}

type ComponentCallableIdentityResult struct {
	Result string `pulumi:"result"`
}

type ComponentCallableIdentityResultOutput struct{ *pulumi.OutputState }

func (ComponentCallableIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentCallableIdentityResult)(nil)).Elem()
}

func (o ComponentCallableIdentityResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentCallableIdentityResult) string { return v.Result }).(pulumi.StringOutput)
}

// The `prefixed` method of the `ComponentCallable` component resource. Accepts a string and returns the component's `value` prefixed with that string.
func (r *ComponentCallable) Prefixed(ctx *pulumi.Context, args *ComponentCallablePrefixedArgs) (ComponentCallablePrefixedResult, error) {
	out, err := ctx.Call("component:index:ComponentCallable/prefixed", args, ComponentCallablePrefixedResultOutput{}, r)
	if err != nil {
		return ComponentCallablePrefixedResult{}, err
	}
	return out.(ComponentCallablePrefixedResult), nil
}

type componentCallablePrefixedArgs struct {
	Prefix string `pulumi:"prefix"`
}

// The set of arguments for the Prefixed method of the ComponentCallable resource.
type ComponentCallablePrefixedArgs struct {
	Prefix pulumi.StringInput
}

func (ComponentCallablePrefixedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*componentCallablePrefixedArgs)(nil)).Elem()
}

type ComponentCallablePrefixedResult struct {
	Result string `pulumi:"result"`
}

type ComponentCallablePrefixedResultOutput struct{ *pulumi.OutputState }

func (ComponentCallablePrefixedResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentCallablePrefixedResult)(nil)).Elem()
}

func (o ComponentCallablePrefixedResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentCallablePrefixedResult) string { return v.Result }).(pulumi.StringOutput)
}

type ComponentCallableInput interface {
	pulumi.Input

	ToComponentCallableOutput() ComponentCallableOutput
	ToComponentCallableOutputWithContext(ctx context.Context) ComponentCallableOutput
}

func (*ComponentCallable) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentCallable)(nil)).Elem()
}

func (i *ComponentCallable) ToComponentCallableOutput() ComponentCallableOutput {
	return i.ToComponentCallableOutputWithContext(context.Background())
}

func (i *ComponentCallable) ToComponentCallableOutputWithContext(ctx context.Context) ComponentCallableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentCallableOutput)
}

type ComponentCallableOutput struct{ *pulumi.OutputState }

func (ComponentCallableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentCallable)(nil)).Elem()
}

func (o ComponentCallableOutput) ToComponentCallableOutput() ComponentCallableOutput {
	return o
}

func (o ComponentCallableOutput) ToComponentCallableOutputWithContext(ctx context.Context) ComponentCallableOutput {
	return o
}

func (o ComponentCallableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentCallable) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentCallableInput)(nil)).Elem(), &ComponentCallable{})
	pulumi.RegisterOutputType(ComponentCallableOutput{})
	pulumi.RegisterOutputType(ComponentCallableIdentityResultOutput{})
	pulumi.RegisterOutputType(ComponentCallablePrefixedResultOutput{})
}
