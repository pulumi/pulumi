// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package testconfigprovider

import (
	"context"
	"reflect"

	"example.com/pulumi-testconfigprovider/sdk/go/testconfigprovider/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Provider struct {
	pulumi.ProviderResourceState

	S1 pulumi.StringPtrOutput `pulumi:"s1"`
	S2 pulumi.StringPtrOutput `pulumi:"s2"`
	S3 pulumi.StringPtrOutput `pulumi:"s3"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:testconfigprovider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	B1  *bool              `pulumi:"b1"`
	B2  *bool              `pulumi:"b2"`
	B3  *bool              `pulumi:"b3"`
	I1  *int               `pulumi:"i1"`
	I2  *int               `pulumi:"i2"`
	I3  *int               `pulumi:"i3"`
	Lb1 []bool             `pulumi:"lb1"`
	Lb2 []bool             `pulumi:"lb2"`
	Lb3 []bool             `pulumi:"lb3"`
	Li1 []int              `pulumi:"li1"`
	Li2 []int              `pulumi:"li2"`
	Li3 []int              `pulumi:"li3"`
	Ln1 []float64          `pulumi:"ln1"`
	Ln2 []float64          `pulumi:"ln2"`
	Ln3 []float64          `pulumi:"ln3"`
	Ls1 []string           `pulumi:"ls1"`
	Ls2 []string           `pulumi:"ls2"`
	Ls3 []string           `pulumi:"ls3"`
	Mb1 map[string]bool    `pulumi:"mb1"`
	Mb2 map[string]bool    `pulumi:"mb2"`
	Mb3 map[string]bool    `pulumi:"mb3"`
	Mi1 map[string]int     `pulumi:"mi1"`
	Mi2 map[string]int     `pulumi:"mi2"`
	Mi3 map[string]int     `pulumi:"mi3"`
	Mn1 map[string]float64 `pulumi:"mn1"`
	Mn2 map[string]float64 `pulumi:"mn2"`
	Mn3 map[string]float64 `pulumi:"mn3"`
	Ms1 map[string]string  `pulumi:"ms1"`
	Ms2 map[string]string  `pulumi:"ms2"`
	Ms3 map[string]string  `pulumi:"ms3"`
	N1  *float64           `pulumi:"n1"`
	N2  *float64           `pulumi:"n2"`
	N3  *float64           `pulumi:"n3"`
	Ob1 *Tb1               `pulumi:"ob1"`
	Ob2 *Tb2               `pulumi:"ob2"`
	Ob3 *Tb3               `pulumi:"ob3"`
	Oi1 *Ti1               `pulumi:"oi1"`
	Oi2 *Ti2               `pulumi:"oi2"`
	Oi3 *Ti3               `pulumi:"oi3"`
	On1 *Tn1               `pulumi:"on1"`
	On2 *Tn2               `pulumi:"on2"`
	On3 *Tn3               `pulumi:"on3"`
	Os1 *Ts1               `pulumi:"os1"`
	Os2 *Ts2               `pulumi:"os2"`
	Os3 *Ts3               `pulumi:"os3"`
	S1  *string            `pulumi:"s1"`
	S2  *string            `pulumi:"s2"`
	S3  *string            `pulumi:"s3"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	B1  pulumi.BoolPtrInput
	B2  pulumi.BoolPtrInput
	B3  pulumi.BoolPtrInput
	I1  pulumi.IntPtrInput
	I2  pulumi.IntPtrInput
	I3  pulumi.IntPtrInput
	Lb1 pulumi.BoolArrayInput
	Lb2 pulumi.BoolArrayInput
	Lb3 pulumi.BoolArrayInput
	Li1 pulumi.IntArrayInput
	Li2 pulumi.IntArrayInput
	Li3 pulumi.IntArrayInput
	Ln1 pulumi.Float64ArrayInput
	Ln2 pulumi.Float64ArrayInput
	Ln3 pulumi.Float64ArrayInput
	Ls1 pulumi.StringArrayInput
	Ls2 pulumi.StringArrayInput
	Ls3 pulumi.StringArrayInput
	Mb1 pulumi.BoolMapInput
	Mb2 pulumi.BoolMapInput
	Mb3 pulumi.BoolMapInput
	Mi1 pulumi.IntMapInput
	Mi2 pulumi.IntMapInput
	Mi3 pulumi.IntMapInput
	Mn1 pulumi.Float64MapInput
	Mn2 pulumi.Float64MapInput
	Mn3 pulumi.Float64MapInput
	Ms1 pulumi.StringMapInput
	Ms2 pulumi.StringMapInput
	Ms3 pulumi.StringMapInput
	N1  pulumi.Float64PtrInput
	N2  pulumi.Float64PtrInput
	N3  pulumi.Float64PtrInput
	Ob1 Tb1PtrInput
	Ob2 Tb2PtrInput
	Ob3 Tb3PtrInput
	Oi1 Ti1PtrInput
	Oi2 Ti2PtrInput
	Oi3 Ti3PtrInput
	On1 Tn1PtrInput
	On2 Tn2PtrInput
	On3 Tn3PtrInput
	Os1 Ts1PtrInput
	Os2 Ts2PtrInput
	Os3 Ts3PtrInput
	S1  pulumi.StringPtrInput
	S2  pulumi.StringPtrInput
	S3  pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) S1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.S1 }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) S2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.S2 }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.S3 }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
