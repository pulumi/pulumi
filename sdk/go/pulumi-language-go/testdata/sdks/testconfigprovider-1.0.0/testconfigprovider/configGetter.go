// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package testconfigprovider

import (
	"context"
	"reflect"

	"example.com/pulumi-testconfigprovider/sdk/go/testconfigprovider/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigGetter struct {
	pulumi.CustomResourceState

	Config pulumi.StringOutput `pulumi:"config"`
}

// NewConfigGetter registers a new resource with the given unique name, arguments, and options.
func NewConfigGetter(ctx *pulumi.Context,
	name string, args *ConfigGetterArgs, opts ...pulumi.ResourceOption) (*ConfigGetter, error) {
	if args == nil {
		args = &ConfigGetterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigGetter
	err := ctx.RegisterResource("testconfigprovider:index:ConfigGetter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigGetter gets an existing ConfigGetter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigGetter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigGetterState, opts ...pulumi.ResourceOption) (*ConfigGetter, error) {
	var resource ConfigGetter
	err := ctx.ReadResource("testconfigprovider:index:ConfigGetter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigGetter resources.
type configGetterState struct {
}

type ConfigGetterState struct {
}

func (ConfigGetterState) ElementType() reflect.Type {
	return reflect.TypeOf((*configGetterState)(nil)).Elem()
}

type configGetterArgs struct {
}

// The set of arguments for constructing a ConfigGetter resource.
type ConfigGetterArgs struct {
}

func (ConfigGetterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configGetterArgs)(nil)).Elem()
}

type ConfigGetterInput interface {
	pulumi.Input

	ToConfigGetterOutput() ConfigGetterOutput
	ToConfigGetterOutputWithContext(ctx context.Context) ConfigGetterOutput
}

func (*ConfigGetter) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigGetter)(nil)).Elem()
}

func (i *ConfigGetter) ToConfigGetterOutput() ConfigGetterOutput {
	return i.ToConfigGetterOutputWithContext(context.Background())
}

func (i *ConfigGetter) ToConfigGetterOutputWithContext(ctx context.Context) ConfigGetterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigGetterOutput)
}

type ConfigGetterOutput struct{ *pulumi.OutputState }

func (ConfigGetterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigGetter)(nil)).Elem()
}

func (o ConfigGetterOutput) ToConfigGetterOutput() ConfigGetterOutput {
	return o
}

func (o ConfigGetterOutput) ToConfigGetterOutputWithContext(ctx context.Context) ConfigGetterOutput {
	return o
}

func (o ConfigGetterOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigGetter) pulumi.StringOutput { return v.Config }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigGetterInput)(nil)).Elem(), &ConfigGetter{})
	pulumi.RegisterOutputType(ConfigGetterOutput{})
}
