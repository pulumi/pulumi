// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configgrpc

import (
	"context"
	"reflect"

	"example.com/pulumi-config-grpc/sdk/go/configgrpc/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Provider struct {
	pulumi.ProviderResourceState

	String1 pulumi.StringPtrOutput `pulumi:"string1"`
	String2 pulumi.StringPtrOutput `pulumi:"string2"`
	String3 pulumi.StringPtrOutput `pulumi:"string3"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:config-grpc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	Bool1       *bool              `pulumi:"bool1"`
	Bool2       *bool              `pulumi:"bool2"`
	Bool3       *bool              `pulumi:"bool3"`
	Int1        *int               `pulumi:"int1"`
	Int2        *int               `pulumi:"int2"`
	Int3        *int               `pulumi:"int3"`
	ListBool1   []bool             `pulumi:"listBool1"`
	ListBool2   []bool             `pulumi:"listBool2"`
	ListBool3   []bool             `pulumi:"listBool3"`
	ListInt1    []int              `pulumi:"listInt1"`
	ListInt2    []int              `pulumi:"listInt2"`
	ListInt3    []int              `pulumi:"listInt3"`
	ListNum1    []float64          `pulumi:"listNum1"`
	ListNum2    []float64          `pulumi:"listNum2"`
	ListNum3    []float64          `pulumi:"listNum3"`
	ListString1 []string           `pulumi:"listString1"`
	ListString2 []string           `pulumi:"listString2"`
	ListString3 []string           `pulumi:"listString3"`
	MapBool1    map[string]bool    `pulumi:"mapBool1"`
	MapBool2    map[string]bool    `pulumi:"mapBool2"`
	MapBool3    map[string]bool    `pulumi:"mapBool3"`
	MapInt1     map[string]int     `pulumi:"mapInt1"`
	MapInt2     map[string]int     `pulumi:"mapInt2"`
	MapInt3     map[string]int     `pulumi:"mapInt3"`
	MapNum1     map[string]float64 `pulumi:"mapNum1"`
	MapNum2     map[string]float64 `pulumi:"mapNum2"`
	MapNum3     map[string]float64 `pulumi:"mapNum3"`
	MapString1  map[string]string  `pulumi:"mapString1"`
	MapString2  map[string]string  `pulumi:"mapString2"`
	MapString3  map[string]string  `pulumi:"mapString3"`
	Num1        *float64           `pulumi:"num1"`
	Num2        *float64           `pulumi:"num2"`
	Num3        *float64           `pulumi:"num3"`
	ObjBool1    *Tbool1            `pulumi:"objBool1"`
	ObjBool2    *Tbool2            `pulumi:"objBool2"`
	ObjBool3    *Tbool3            `pulumi:"objBool3"`
	ObjInt1     *Tint1             `pulumi:"objInt1"`
	ObjInt2     *Tint2             `pulumi:"objInt2"`
	ObjInt3     *Tint3             `pulumi:"objInt3"`
	ObjNum1     *Tnum1             `pulumi:"objNum1"`
	ObjNum2     *Tnum2             `pulumi:"objNum2"`
	ObjNum3     *Tnum3             `pulumi:"objNum3"`
	ObjString1  *Tstring1          `pulumi:"objString1"`
	ObjString2  *Tstring2          `pulumi:"objString2"`
	ObjString3  *Tstring3          `pulumi:"objString3"`
	String1     *string            `pulumi:"string1"`
	String2     *string            `pulumi:"string2"`
	String3     *string            `pulumi:"string3"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	Bool1       pulumi.BoolPtrInput
	Bool2       pulumi.BoolPtrInput
	Bool3       pulumi.BoolPtrInput
	Int1        pulumi.IntPtrInput
	Int2        pulumi.IntPtrInput
	Int3        pulumi.IntPtrInput
	ListBool1   pulumi.BoolArrayInput
	ListBool2   pulumi.BoolArrayInput
	ListBool3   pulumi.BoolArrayInput
	ListInt1    pulumi.IntArrayInput
	ListInt2    pulumi.IntArrayInput
	ListInt3    pulumi.IntArrayInput
	ListNum1    pulumi.Float64ArrayInput
	ListNum2    pulumi.Float64ArrayInput
	ListNum3    pulumi.Float64ArrayInput
	ListString1 pulumi.StringArrayInput
	ListString2 pulumi.StringArrayInput
	ListString3 pulumi.StringArrayInput
	MapBool1    pulumi.BoolMapInput
	MapBool2    pulumi.BoolMapInput
	MapBool3    pulumi.BoolMapInput
	MapInt1     pulumi.IntMapInput
	MapInt2     pulumi.IntMapInput
	MapInt3     pulumi.IntMapInput
	MapNum1     pulumi.Float64MapInput
	MapNum2     pulumi.Float64MapInput
	MapNum3     pulumi.Float64MapInput
	MapString1  pulumi.StringMapInput
	MapString2  pulumi.StringMapInput
	MapString3  pulumi.StringMapInput
	Num1        pulumi.Float64PtrInput
	Num2        pulumi.Float64PtrInput
	Num3        pulumi.Float64PtrInput
	ObjBool1    Tbool1PtrInput
	ObjBool2    Tbool2PtrInput
	ObjBool3    Tbool3PtrInput
	ObjInt1     Tint1PtrInput
	ObjInt2     Tint2PtrInput
	ObjInt3     Tint3PtrInput
	ObjNum1     Tnum1PtrInput
	ObjNum2     Tnum2PtrInput
	ObjNum3     Tnum3PtrInput
	ObjString1  Tstring1PtrInput
	ObjString2  Tstring2PtrInput
	ObjString3  Tstring3PtrInput
	String1     pulumi.StringPtrInput
	String2     pulumi.StringPtrInput
	String3     pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) String1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.String1 }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) String2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.String2 }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) String3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.String3 }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
