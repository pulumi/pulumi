// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scalarreturns

import (
	"reflect"

	"example.com/pulumi-scalar-returns/sdk/go/v21/scalarreturns/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func InvokeSecret(ctx *pulumi.Context, args *InvokeSecretArgs, opts ...pulumi.InvokeOption) (float64, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv map[string]float64
	err := ctx.Invoke("scalar-returns:index:invokeSecret", args, &rv, opts...)
	var result float64
	if err != nil {
		return result, err
	}
	for _, v := range rv {
		result = v
		break
	}
	return result, nil
}

type InvokeSecretArgs struct {
	Value string `pulumi:"value"`
}

func InvokeSecretOutput(ctx *pulumi.Context, args InvokeSecretOutputArgs, opts ...pulumi.InvokeOption) pulumi.Float64Output {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (pulumi.Float64Output, error) {
			args := v.(InvokeSecretArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			rv := ctx.InvokeOutput("scalar-returns:index:invokeSecret", args, pulumi.Float64MapOutput{}, options).(pulumi.Float64MapOutput)
			return rv.ApplyT(func(rv map[string]float64) float64 {
				var result float64
				for _, v := range rv {
					result = v
				}
				return result
			}).(pulumi.Float64Output), nil
		}).(pulumi.Float64Output)
}

type InvokeSecretOutputArgs struct {
	Value pulumi.StringInput `pulumi:"value"`
}

func (InvokeSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvokeSecretArgs)(nil)).Elem()
}
