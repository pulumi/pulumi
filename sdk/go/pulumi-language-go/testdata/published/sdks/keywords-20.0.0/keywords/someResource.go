// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keywords

import (
	"context"
	"reflect"

	"errors"
	"example.com/pulumi-keywords/sdk/go/v20/keywords/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SomeResource struct {
	pulumi.CustomResourceState

	Builtins	pulumi.StringOutput	`pulumi:"builtins"`
	Property	pulumi.StringOutput	`pulumi:"property"`
}

// NewSomeResource registers a new resource with the given unique name, arguments, and options.
func NewSomeResource(ctx *pulumi.Context,
	name string, args *SomeResourceArgs, opts ...pulumi.ResourceOption) (*SomeResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Builtins == nil {
		return nil, errors.New("invalid value for required argument 'Builtins'")
	}
	if args.Property == nil {
		return nil, errors.New("invalid value for required argument 'Property'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SomeResource
	err := ctx.RegisterResource("keywords:index:SomeResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSomeResource gets an existing SomeResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSomeResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SomeResourceState, opts ...pulumi.ResourceOption) (*SomeResource, error) {
	var resource SomeResource
	err := ctx.ReadResource("keywords:index:SomeResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SomeResource resources.
type someResourceState struct {
}

type SomeResourceState struct {
}

func (SomeResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*someResourceState)(nil)).Elem()
}

type someResourceArgs struct {
	Builtins	string	`pulumi:"builtins"`
	Property	string	`pulumi:"property"`
}

// The set of arguments for constructing a SomeResource resource.
type SomeResourceArgs struct {
	Builtins	pulumi.StringInput
	Property	pulumi.StringInput
}

func (SomeResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*someResourceArgs)(nil)).Elem()
}

type SomeResourceInput interface {
	pulumi.Input

	ToSomeResourceOutput() SomeResourceOutput
	ToSomeResourceOutputWithContext(ctx context.Context) SomeResourceOutput
}

func (*SomeResource) ElementType() reflect.Type {
	return reflect.TypeOf((**SomeResource)(nil)).Elem()
}

func (i *SomeResource) ToSomeResourceOutput() SomeResourceOutput {
	return i.ToSomeResourceOutputWithContext(context.Background())
}

func (i *SomeResource) ToSomeResourceOutputWithContext(ctx context.Context) SomeResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SomeResourceOutput)
}

type SomeResourceOutput struct{ *pulumi.OutputState }

func (SomeResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SomeResource)(nil)).Elem()
}

func (o SomeResourceOutput) ToSomeResourceOutput() SomeResourceOutput {
	return o
}

func (o SomeResourceOutput) ToSomeResourceOutputWithContext(ctx context.Context) SomeResourceOutput {
	return o
}

func (o SomeResourceOutput) Builtins() pulumi.StringOutput {
	return o.ApplyT(func(v *SomeResource) pulumi.StringOutput { return v.Builtins }).(pulumi.StringOutput)
}

func (o SomeResourceOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v *SomeResource) pulumi.StringOutput { return v.Property }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SomeResourceInput)(nil)).Elem(), &SomeResource{})
	pulumi.RegisterOutputType(SomeResourceOutput{})
}
