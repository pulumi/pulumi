// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package union

import (
	"context"
	"reflect"

	"example.com/pulumi-union/sdk/go/v18/union/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Example struct {
	pulumi.CustomResourceState

	MapMapUnionProperty	pulumi.MapMapOutput	`pulumi:"mapMapUnionProperty"`
	StringOrIntegerProperty	pulumi.AnyOutput	`pulumi:"stringOrIntegerProperty"`
}

// NewExample registers a new resource with the given unique name, arguments, and options.
func NewExample(ctx *pulumi.Context,
	name string, args *ExampleArgs, opts ...pulumi.ResourceOption) (*Example, error) {
	if args == nil {
		args = &ExampleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Example
	err := ctx.RegisterResource("union:index:Example", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExample gets an existing Example resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExample(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExampleState, opts ...pulumi.ResourceOption) (*Example, error) {
	var resource Example
	err := ctx.ReadResource("union:index:Example", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Example resources.
type exampleState struct {
}

type ExampleState struct {
}

func (ExampleState) ElementType() reflect.Type {
	return reflect.TypeOf((*exampleState)(nil)).Elem()
}

type exampleArgs struct {
	MapMapUnionProperty	map[string]map[string]interface{}	`pulumi:"mapMapUnionProperty"`
	StringOrIntegerProperty	interface{}				`pulumi:"stringOrIntegerProperty"`
}

// The set of arguments for constructing a Example resource.
type ExampleArgs struct {
	MapMapUnionProperty	pulumi.MapMapInput
	StringOrIntegerProperty	pulumi.Input
}

func (ExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exampleArgs)(nil)).Elem()
}

type ExampleInput interface {
	pulumi.Input

	ToExampleOutput() ExampleOutput
	ToExampleOutputWithContext(ctx context.Context) ExampleOutput
}

func (*Example) ElementType() reflect.Type {
	return reflect.TypeOf((**Example)(nil)).Elem()
}

func (i *Example) ToExampleOutput() ExampleOutput {
	return i.ToExampleOutputWithContext(context.Background())
}

func (i *Example) ToExampleOutputWithContext(ctx context.Context) ExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExampleOutput)
}

type ExampleOutput struct{ *pulumi.OutputState }

func (ExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Example)(nil)).Elem()
}

func (o ExampleOutput) ToExampleOutput() ExampleOutput {
	return o
}

func (o ExampleOutput) ToExampleOutputWithContext(ctx context.Context) ExampleOutput {
	return o
}

func (o ExampleOutput) MapMapUnionProperty() pulumi.MapMapOutput {
	return o.ApplyT(func(v *Example) pulumi.MapMapOutput { return v.MapMapUnionProperty }).(pulumi.MapMapOutput)
}

func (o ExampleOutput) StringOrIntegerProperty() pulumi.AnyOutput {
	return o.ApplyT(func(v *Example) pulumi.AnyOutput { return v.StringOrIntegerProperty }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExampleInput)(nil)).Elem(), &Example{})
	pulumi.RegisterOutputType(ExampleOutput{})
}
