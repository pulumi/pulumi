// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package subpackage

import (
	"context"
	"reflect"

	"example.com/pulumi-subpackage/sdk/go/v2/subpackage/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HelloWorldComponent struct {
	pulumi.ResourceState

	ParameterValue pulumi.StringOutput `pulumi:"parameterValue"`
}

// NewHelloWorldComponent registers a new resource with the given unique name, arguments, and options.
func NewHelloWorldComponent(ctx *pulumi.Context,
	name string, args *HelloWorldComponentArgs, opts ...pulumi.ResourceOption) (*HelloWorldComponent, error) {
	if args == nil {
		args = &HelloWorldComponentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HelloWorldComponent
	err = ctx.RegisterPackageRemoteComponentResource("subpackage:index:HelloWorldComponent", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type helloWorldComponentArgs struct {
}

// The set of arguments for constructing a HelloWorldComponent resource.
type HelloWorldComponentArgs struct {
}

func (HelloWorldComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*helloWorldComponentArgs)(nil)).Elem()
}

type HelloWorldComponentInput interface {
	pulumi.Input

	ToHelloWorldComponentOutput() HelloWorldComponentOutput
	ToHelloWorldComponentOutputWithContext(ctx context.Context) HelloWorldComponentOutput
}

func (*HelloWorldComponent) ElementType() reflect.Type {
	return reflect.TypeOf((**HelloWorldComponent)(nil)).Elem()
}

func (i *HelloWorldComponent) ToHelloWorldComponentOutput() HelloWorldComponentOutput {
	return i.ToHelloWorldComponentOutputWithContext(context.Background())
}

func (i *HelloWorldComponent) ToHelloWorldComponentOutputWithContext(ctx context.Context) HelloWorldComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelloWorldComponentOutput)
}

type HelloWorldComponentOutput struct{ *pulumi.OutputState }

func (HelloWorldComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelloWorldComponent)(nil)).Elem()
}

func (o HelloWorldComponentOutput) ToHelloWorldComponentOutput() HelloWorldComponentOutput {
	return o
}

func (o HelloWorldComponentOutput) ToHelloWorldComponentOutputWithContext(ctx context.Context) HelloWorldComponentOutput {
	return o
}

func (o HelloWorldComponentOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v *HelloWorldComponent) pulumi.StringOutput { return v.ParameterValue }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HelloWorldComponentInput)(nil)).Elem(), &HelloWorldComponent{})
	pulumi.RegisterOutputType(HelloWorldComponentOutput{})
}
