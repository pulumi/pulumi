// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scalarreturns

import (
	"reflect"

	"example.com/pulumi-scalar-returns/sdk/go/v21/scalarreturns/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func InvokeSecret(ctx *pulumi.Context, args *InvokeSecretArgs, opts ...pulumi.InvokeOption) (float64, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv map[string]any
	err := ctx.Invoke("scalar-returns:index:invokeSecret", args, &rv, opts...)
	var result float64
	if err != nil {
		return result, err
	}
	for _, v := range rv {
		result = v.(float64)
		break
	}
	return result, nil
}

type InvokeSecretArgs struct {
	Value string `pulumi:"value"`
}

func InvokeSecretOutput(ctx *pulumi.Context, args InvokeSecretOutputArgs, opts ...pulumi.InvokeOption) pulumi.Float64Output {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (pulumi.Float64Output, error) {
			args := v.(InvokeSecretArgs)
			options := internal.PkgInvokeDefaultOpts(opts)
			var rv map[string]any
			err := ctx.Invoke("scalar-returns:index:invokeSecret", args, &rv, options...)
			var result pulumi.Float64
			if err != nil {
				return result.ToFloat64Output(), nil
			}
			for _, v := range rv {
				result = pulumi.Float64(v.(float64))
				break
			}
			return result.ToFloat64Output(), nil
		}).(pulumi.Float64Output)
}

type InvokeSecretOutputArgs struct {
	Value pulumi.StringInput `pulumi:"value"`
}

func (InvokeSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvokeSecretArgs)(nil)).Elem()
}
