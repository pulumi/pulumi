exports.handler = __f0;

var __f1_prototype = {};
Object.defineProperty(__f1_prototype, "constructor", { configurable: true, writable: true, value: __f1 });
Object.defineProperty(__f1_prototype, "m", { configurable: true, writable: true, value: __f2 });
Object.defineProperty(__f1_prototype, "n", { configurable: true, writable: true, value: __f3 });
Object.defineProperty(__f1, "prototype", { value: __f1_prototype });
Object.defineProperty(__f1, "s", { configurable: true, writable: true, value: __f4 });

function __f1() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*constructor*/() {
        this.x = 1;
    };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f2() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*m*/() { return this.n(); };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f3() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*n*/() { return 1; };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f4() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*s*/() { return 0; };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f0() {
  return (function() {
    with({ C: __f1, this: undefined, arguments: undefined }) {

return () => new C();

    }
  }).apply(undefined, undefined).apply(this, arguments);
}
