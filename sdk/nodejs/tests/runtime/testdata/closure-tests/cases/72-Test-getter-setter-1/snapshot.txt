exports.handler = __f0;

var __f1_prototype = {};
Object.defineProperty(__f1_prototype, "constructor", { configurable: true, writable: true, value: __f1 });
Object.defineProperty(__f1_prototype, "foo", { configurable: true, get: __f2, set: __f3 });
Object.defineProperty(__f1, "prototype", { value: __f1_prototype });

function __f1() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*constructor*/() {
        this._x = 0;
    };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f2() {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*foo*/() {
        return this._x;
    };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f3(__0) {
  return (function() {
    with({ this: undefined, arguments: undefined }) {

return function /*foo*/(v) {
        this._x = v;
    };

    }
  }).apply(undefined, undefined).apply(this, arguments);
}

function __f0() {
  return (function() {
    with({ C: __f1, this: undefined, arguments: undefined }) {

return () => C;

    }
  }).apply(undefined, undefined).apply(this, arguments);
}
