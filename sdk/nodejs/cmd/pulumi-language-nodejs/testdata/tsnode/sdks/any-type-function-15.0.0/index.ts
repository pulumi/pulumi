// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { DynListToDynArgs, DynListToDynResult, DynListToDynOutputArgs } from "./dynListToDyn";
export const dynListToDyn: typeof import("./dynListToDyn").dynListToDyn = null as any;
export const dynListToDynOutput: typeof import("./dynListToDyn").dynListToDynOutput = null as any;
utilities.lazyLoad(exports, ["dynListToDyn","dynListToDynOutput"], () => require("./dynListToDyn"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

pulumi.runtime.registerResourcePackage("any-type-function", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:any-type-function") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
