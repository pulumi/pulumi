// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function toSecret(args?: ToSecretArgs, opts?: pulumi.InvokeOptions): Promise<ToSecretResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("testconfigprovider:index:toSecret", {
        "b": args.b,
        "i": args.i,
        "lb": args.lb,
        "li": args.li,
        "ln": args.ln,
        "ls": args.ls,
        "mb": args.mb,
        "mi": args.mi,
        "mn": args.mn,
        "ms": args.ms,
        "n": args.n,
        "ob": args.ob,
        "oi": args.oi,
        "on": args.on,
        "os": args.os,
        "s": args.s,
    }, opts);
}

export interface ToSecretArgs {
    b?: boolean;
    i?: number;
    lb?: boolean[];
    li?: number[];
    ln?: number[];
    ls?: string[];
    mb?: {[key: string]: boolean};
    mi?: {[key: string]: number};
    mn?: {[key: string]: number};
    ms?: {[key: string]: string};
    n?: number;
    ob?: inputs.Tb;
    oi?: inputs.Ti;
    on?: inputs.Tn;
    os?: inputs.Ts;
    s?: string;
}

export interface ToSecretResult {
    readonly b: boolean;
    readonly i: number;
    readonly lb: boolean[];
    readonly li: number[];
    readonly ln: number[];
    readonly ls: string[];
    readonly mb: {[key: string]: boolean};
    readonly mi: {[key: string]: number};
    readonly mn: {[key: string]: number};
    readonly ms: {[key: string]: string};
    readonly n: number;
    readonly ob: outputs.Tb;
    readonly oi: outputs.Ti;
    readonly on: outputs.Tn;
    readonly os: outputs.Ts;
    readonly s: string;
}
export function toSecretOutput(args?: ToSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ToSecretResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("testconfigprovider:index:toSecret", {
        "b": args.b,
        "i": args.i,
        "lb": args.lb,
        "li": args.li,
        "ln": args.ln,
        "ls": args.ls,
        "mb": args.mb,
        "mi": args.mi,
        "mn": args.mn,
        "ms": args.ms,
        "n": args.n,
        "ob": args.ob,
        "oi": args.oi,
        "on": args.on,
        "os": args.os,
        "s": args.s,
    }, opts);
}

export interface ToSecretOutputArgs {
    b?: pulumi.Input<boolean>;
    i?: pulumi.Input<number>;
    lb?: pulumi.Input<pulumi.Input<boolean>[]>;
    li?: pulumi.Input<pulumi.Input<number>[]>;
    ln?: pulumi.Input<pulumi.Input<number>[]>;
    ls?: pulumi.Input<pulumi.Input<string>[]>;
    mb?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    mi?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mn?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    ms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    n?: pulumi.Input<number>;
    ob?: pulumi.Input<inputs.TbArgs>;
    oi?: pulumi.Input<inputs.TiArgs>;
    on?: pulumi.Input<inputs.TnArgs>;
    os?: pulumi.Input<inputs.TsArgs>;
    s?: pulumi.Input<string>;
}
