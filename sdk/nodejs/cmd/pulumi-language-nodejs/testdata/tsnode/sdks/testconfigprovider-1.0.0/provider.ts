// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'testconfigprovider';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    public readonly s1!: pulumi.Output<string | undefined>;
    public readonly s2!: pulumi.Output<string | undefined>;
    public readonly s3!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["b1"] = pulumi.output(args ? args.b1 : undefined).apply(JSON.stringify);
            resourceInputs["b2"] = pulumi.output(args ? args.b2 : undefined).apply(JSON.stringify);
            resourceInputs["b3"] = pulumi.output(args ? args.b3 : undefined).apply(JSON.stringify);
            resourceInputs["i1"] = pulumi.output(args ? args.i1 : undefined).apply(JSON.stringify);
            resourceInputs["i2"] = pulumi.output(args ? args.i2 : undefined).apply(JSON.stringify);
            resourceInputs["i3"] = pulumi.output(args ? args.i3 : undefined).apply(JSON.stringify);
            resourceInputs["lb1"] = pulumi.output(args ? args.lb1 : undefined).apply(JSON.stringify);
            resourceInputs["lb2"] = pulumi.output(args ? args.lb2 : undefined).apply(JSON.stringify);
            resourceInputs["lb3"] = pulumi.output(args ? args.lb3 : undefined).apply(JSON.stringify);
            resourceInputs["li1"] = pulumi.output(args ? args.li1 : undefined).apply(JSON.stringify);
            resourceInputs["li2"] = pulumi.output(args ? args.li2 : undefined).apply(JSON.stringify);
            resourceInputs["li3"] = pulumi.output(args ? args.li3 : undefined).apply(JSON.stringify);
            resourceInputs["ln1"] = pulumi.output(args ? args.ln1 : undefined).apply(JSON.stringify);
            resourceInputs["ln2"] = pulumi.output(args ? args.ln2 : undefined).apply(JSON.stringify);
            resourceInputs["ln3"] = pulumi.output(args ? args.ln3 : undefined).apply(JSON.stringify);
            resourceInputs["ls1"] = pulumi.output(args ? args.ls1 : undefined).apply(JSON.stringify);
            resourceInputs["ls2"] = pulumi.output(args ? args.ls2 : undefined).apply(JSON.stringify);
            resourceInputs["ls3"] = pulumi.output(args ? args.ls3 : undefined).apply(JSON.stringify);
            resourceInputs["mb1"] = pulumi.output(args ? args.mb1 : undefined).apply(JSON.stringify);
            resourceInputs["mb2"] = pulumi.output(args ? args.mb2 : undefined).apply(JSON.stringify);
            resourceInputs["mb3"] = pulumi.output(args ? args.mb3 : undefined).apply(JSON.stringify);
            resourceInputs["mi1"] = pulumi.output(args ? args.mi1 : undefined).apply(JSON.stringify);
            resourceInputs["mi2"] = pulumi.output(args ? args.mi2 : undefined).apply(JSON.stringify);
            resourceInputs["mi3"] = pulumi.output(args ? args.mi3 : undefined).apply(JSON.stringify);
            resourceInputs["mn1"] = pulumi.output(args ? args.mn1 : undefined).apply(JSON.stringify);
            resourceInputs["mn2"] = pulumi.output(args ? args.mn2 : undefined).apply(JSON.stringify);
            resourceInputs["mn3"] = pulumi.output(args ? args.mn3 : undefined).apply(JSON.stringify);
            resourceInputs["ms1"] = pulumi.output(args ? args.ms1 : undefined).apply(JSON.stringify);
            resourceInputs["ms2"] = pulumi.output(args ? args.ms2 : undefined).apply(JSON.stringify);
            resourceInputs["ms3"] = pulumi.output(args ? args.ms3 : undefined).apply(JSON.stringify);
            resourceInputs["n1"] = pulumi.output(args ? args.n1 : undefined).apply(JSON.stringify);
            resourceInputs["n2"] = pulumi.output(args ? args.n2 : undefined).apply(JSON.stringify);
            resourceInputs["n3"] = pulumi.output(args ? args.n3 : undefined).apply(JSON.stringify);
            resourceInputs["ob1"] = pulumi.output(args ? args.ob1 : undefined).apply(JSON.stringify);
            resourceInputs["ob2"] = pulumi.output(args ? args.ob2 : undefined).apply(JSON.stringify);
            resourceInputs["ob3"] = pulumi.output(args ? args.ob3 : undefined).apply(JSON.stringify);
            resourceInputs["oi1"] = pulumi.output(args ? args.oi1 : undefined).apply(JSON.stringify);
            resourceInputs["oi2"] = pulumi.output(args ? args.oi2 : undefined).apply(JSON.stringify);
            resourceInputs["oi3"] = pulumi.output(args ? args.oi3 : undefined).apply(JSON.stringify);
            resourceInputs["on1"] = pulumi.output(args ? args.on1 : undefined).apply(JSON.stringify);
            resourceInputs["on2"] = pulumi.output(args ? args.on2 : undefined).apply(JSON.stringify);
            resourceInputs["on3"] = pulumi.output(args ? args.on3 : undefined).apply(JSON.stringify);
            resourceInputs["os1"] = pulumi.output(args ? args.os1 : undefined).apply(JSON.stringify);
            resourceInputs["os2"] = pulumi.output(args ? args.os2 : undefined).apply(JSON.stringify);
            resourceInputs["os3"] = pulumi.output(args ? args.os3 : undefined).apply(JSON.stringify);
            resourceInputs["s1"] = args ? args.s1 : undefined;
            resourceInputs["s2"] = args ? args.s2 : undefined;
            resourceInputs["s3"] = args ? args.s3 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    b1?: pulumi.Input<boolean>;
    b2?: pulumi.Input<boolean>;
    b3?: pulumi.Input<boolean>;
    i1?: pulumi.Input<number>;
    i2?: pulumi.Input<number>;
    i3?: pulumi.Input<number>;
    lb1?: pulumi.Input<pulumi.Input<boolean>[]>;
    lb2?: pulumi.Input<pulumi.Input<boolean>[]>;
    lb3?: pulumi.Input<pulumi.Input<boolean>[]>;
    li1?: pulumi.Input<pulumi.Input<number>[]>;
    li2?: pulumi.Input<pulumi.Input<number>[]>;
    li3?: pulumi.Input<pulumi.Input<number>[]>;
    ln1?: pulumi.Input<pulumi.Input<number>[]>;
    ln2?: pulumi.Input<pulumi.Input<number>[]>;
    ln3?: pulumi.Input<pulumi.Input<number>[]>;
    ls1?: pulumi.Input<pulumi.Input<string>[]>;
    ls2?: pulumi.Input<pulumi.Input<string>[]>;
    ls3?: pulumi.Input<pulumi.Input<string>[]>;
    mb1?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    mb2?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    mb3?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    mi1?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mi2?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mi3?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mn1?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mn2?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    mn3?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    ms1?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ms2?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ms3?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    n1?: pulumi.Input<number>;
    n2?: pulumi.Input<number>;
    n3?: pulumi.Input<number>;
    ob1?: pulumi.Input<inputs.Tb1Args>;
    ob2?: pulumi.Input<inputs.Tb2Args>;
    ob3?: pulumi.Input<inputs.Tb3Args>;
    oi1?: pulumi.Input<inputs.Ti1Args>;
    oi2?: pulumi.Input<inputs.Ti2Args>;
    oi3?: pulumi.Input<inputs.Ti3Args>;
    on1?: pulumi.Input<inputs.Tn1Args>;
    on2?: pulumi.Input<inputs.Tn2Args>;
    on3?: pulumi.Input<inputs.Tn3Args>;
    os1?: pulumi.Input<inputs.Ts1Args>;
    os2?: pulumi.Input<inputs.Ts2Args>;
    os3?: pulumi.Input<inputs.Ts3Args>;
    s1?: pulumi.Input<string>;
    s2?: pulumi.Input<string>;
    s3?: pulumi.Input<string>;
}
