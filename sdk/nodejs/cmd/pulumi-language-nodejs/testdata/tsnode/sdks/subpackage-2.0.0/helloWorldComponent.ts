// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class HelloWorldComponent extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'subpackage:index:HelloWorldComponent';

    /**
     * Returns true if the given object is an instance of HelloWorldComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HelloWorldComponent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HelloWorldComponent.__pulumiType;
    }

    public /*out*/ readonly parameterValue!: pulumi.Output<string>;

    /**
     * Create a HelloWorldComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HelloWorldComponentArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["parameterValue"] = undefined /*out*/;
        } else {
            resourceInputs["parameterValue"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HelloWorldComponent.__pulumiType, name, resourceInputs, opts, true /*remote*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a HelloWorldComponent resource.
 */
export interface HelloWorldComponentArgs {
}
