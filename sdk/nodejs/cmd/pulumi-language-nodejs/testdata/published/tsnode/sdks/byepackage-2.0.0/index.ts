// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GoodbyeWorldArgs } from "./goodbyeWorld";
export type GoodbyeWorld = import("./goodbyeWorld").GoodbyeWorld;
export const GoodbyeWorld: typeof import("./goodbyeWorld").GoodbyeWorld = null as any;
utilities.lazyLoad(exports, ["GoodbyeWorld"], () => require("./goodbyeWorld"));

export { GoodbyeWorldComponentArgs } from "./goodbyeWorldComponent";
export type GoodbyeWorldComponent = import("./goodbyeWorldComponent").GoodbyeWorldComponent;
export const GoodbyeWorldComponent: typeof import("./goodbyeWorldComponent").GoodbyeWorldComponent = null as any;
utilities.lazyLoad(exports, ["GoodbyeWorldComponent"], () => require("./goodbyeWorldComponent"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "byepackage:index:GoodbyeWorld":
                return new GoodbyeWorld(name, <any>undefined, { urn })
            case "byepackage:index:GoodbyeWorldComponent":
                return new GoodbyeWorldComponent(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("byepackage", "index", _module)
pulumi.runtime.registerResourcePackage("byepackage", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:byepackage") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
