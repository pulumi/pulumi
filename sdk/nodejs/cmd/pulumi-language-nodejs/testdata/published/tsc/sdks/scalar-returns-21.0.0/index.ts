// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { InvokeArrayArgs, InvokeArrayOutputArgs } from "./invokeArray";
export const invokeArray: typeof import("./invokeArray").invokeArray = null as any;
export const invokeArrayOutput: typeof import("./invokeArray").invokeArrayOutput = null as any;
utilities.lazyLoad(exports, ["invokeArray","invokeArrayOutput"], () => require("./invokeArray"));

export { InvokeMapArgs, InvokeMapOutputArgs } from "./invokeMap";
export const invokeMap: typeof import("./invokeMap").invokeMap = null as any;
export const invokeMapOutput: typeof import("./invokeMap").invokeMapOutput = null as any;
utilities.lazyLoad(exports, ["invokeMap","invokeMapOutput"], () => require("./invokeMap"));

export { InvokeSecretArgs, InvokeSecretOutputArgs } from "./invokeSecret";
export const invokeSecret: typeof import("./invokeSecret").invokeSecret = null as any;
export const invokeSecretOutput: typeof import("./invokeSecret").invokeSecretOutput = null as any;
utilities.lazyLoad(exports, ["invokeSecret","invokeSecretOutput"], () => require("./invokeSecret"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

pulumi.runtime.registerResourcePackage("scalar-returns", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:scalar-returns") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
