// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: pulumi/testing/language.proto

package testing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLanguageTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLanguageTestsRequest) Reset() {
	*x = GetLanguageTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageTestsRequest) ProtoMessage() {}

func (x *GetLanguageTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageTestsRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageTestsRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{0}
}

type GetLanguageTestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tests []string `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
}

func (x *GetLanguageTestsResponse) Reset() {
	*x = GetLanguageTestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageTestsResponse) ProtoMessage() {}

func (x *GetLanguageTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageTestsResponse.ProtoReflect.Descriptor instead.
func (*GetLanguageTestsResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{1}
}

func (x *GetLanguageTestsResponse) GetTests() []string {
	if x != nil {
		return x.Tests
	}
	return nil
}

type PrepareLanguageTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguagePluginName   string `protobuf:"bytes,1,opt,name=language_plugin_name,json=languagePluginName,proto3" json:"language_plugin_name,omitempty"`
	LanguagePluginTarget string `protobuf:"bytes,2,opt,name=language_plugin_target,json=languagePluginTarget,proto3" json:"language_plugin_target,omitempty"`
	SnapshotDirectory    string `protobuf:"bytes,3,opt,name=snapshot_directory,json=snapshotDirectory,proto3" json:"snapshot_directory,omitempty"`
	TemporaryDirectory   string `protobuf:"bytes,4,opt,name=temporary_directory,json=temporaryDirectory,proto3" json:"temporary_directory,omitempty"`
	CoreSdkDirectory     string `protobuf:"bytes,5,opt,name=core_sdk_directory,json=coreSdkDirectory,proto3" json:"core_sdk_directory,omitempty"`
}

func (x *PrepareLanguageTestsRequest) Reset() {
	*x = PrepareLanguageTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareLanguageTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareLanguageTestsRequest) ProtoMessage() {}

func (x *PrepareLanguageTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareLanguageTestsRequest.ProtoReflect.Descriptor instead.
func (*PrepareLanguageTestsRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{2}
}

func (x *PrepareLanguageTestsRequest) GetLanguagePluginName() string {
	if x != nil {
		return x.LanguagePluginName
	}
	return ""
}

func (x *PrepareLanguageTestsRequest) GetLanguagePluginTarget() string {
	if x != nil {
		return x.LanguagePluginTarget
	}
	return ""
}

func (x *PrepareLanguageTestsRequest) GetSnapshotDirectory() string {
	if x != nil {
		return x.SnapshotDirectory
	}
	return ""
}

func (x *PrepareLanguageTestsRequest) GetTemporaryDirectory() string {
	if x != nil {
		return x.TemporaryDirectory
	}
	return ""
}

func (x *PrepareLanguageTestsRequest) GetCoreSdkDirectory() string {
	if x != nil {
		return x.CoreSdkDirectory
	}
	return ""
}

type PrepareLanguageTestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PrepareLanguageTestsResponse) Reset() {
	*x = PrepareLanguageTestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareLanguageTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareLanguageTestsResponse) ProtoMessage() {}

func (x *PrepareLanguageTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareLanguageTestsResponse.ProtoReflect.Descriptor instead.
func (*PrepareLanguageTestsResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{3}
}

func (x *PrepareLanguageTestsResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RunLanguageTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Test  string `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *RunLanguageTestRequest) Reset() {
	*x = RunLanguageTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLanguageTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLanguageTestRequest) ProtoMessage() {}

func (x *RunLanguageTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLanguageTestRequest.ProtoReflect.Descriptor instead.
func (*RunLanguageTestRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{4}
}

func (x *RunLanguageTestRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RunLanguageTestRequest) GetTest() string {
	if x != nil {
		return x.Test
	}
	return ""
}

type RunLanguageTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Messages []string `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	Stdout   string   `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr   string   `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *RunLanguageTestResponse) Reset() {
	*x = RunLanguageTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pulumi_testing_language_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLanguageTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLanguageTestResponse) ProtoMessage() {}

func (x *RunLanguageTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_testing_language_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLanguageTestResponse.ProtoReflect.Descriptor instead.
func (*RunLanguageTestResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_testing_language_proto_rawDescGZIP(), []int{5}
}

func (x *RunLanguageTestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunLanguageTestResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RunLanguageTestResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *RunLanguageTestResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

var File_pulumi_testing_language_proto protoreflect.FileDescriptor

var file_pulumi_testing_language_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x93, 0x02, 0x0a, 0x1b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x72, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x73, 0x64, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x64, 0x6b, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x34, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x42, 0x0a, 0x16, 0x52,
	0x75, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22,
	0x7f, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x32, 0xe4, 0x02, 0x0a, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x72, 0x70,
	0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x79, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x75, 0x6c, 0x75,
	0x6d, 0x69, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75,
	0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2f, 0x70, 0x75, 0x6c,
	0x75, 0x6d, 0x69, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pulumi_testing_language_proto_rawDescOnce sync.Once
	file_pulumi_testing_language_proto_rawDescData = file_pulumi_testing_language_proto_rawDesc
)

func file_pulumi_testing_language_proto_rawDescGZIP() []byte {
	file_pulumi_testing_language_proto_rawDescOnce.Do(func() {
		file_pulumi_testing_language_proto_rawDescData = protoimpl.X.CompressGZIP(file_pulumi_testing_language_proto_rawDescData)
	})
	return file_pulumi_testing_language_proto_rawDescData
}

var file_pulumi_testing_language_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pulumi_testing_language_proto_goTypes = []interface{}{
	(*GetLanguageTestsRequest)(nil),      // 0: pulumirpc.testing.GetLanguageTestsRequest
	(*GetLanguageTestsResponse)(nil),     // 1: pulumirpc.testing.GetLanguageTestsResponse
	(*PrepareLanguageTestsRequest)(nil),  // 2: pulumirpc.testing.PrepareLanguageTestsRequest
	(*PrepareLanguageTestsResponse)(nil), // 3: pulumirpc.testing.PrepareLanguageTestsResponse
	(*RunLanguageTestRequest)(nil),       // 4: pulumirpc.testing.RunLanguageTestRequest
	(*RunLanguageTestResponse)(nil),      // 5: pulumirpc.testing.RunLanguageTestResponse
}
var file_pulumi_testing_language_proto_depIdxs = []int32{
	0, // 0: pulumirpc.testing.LanguageTest.GetLanguageTests:input_type -> pulumirpc.testing.GetLanguageTestsRequest
	2, // 1: pulumirpc.testing.LanguageTest.PrepareLanguageTests:input_type -> pulumirpc.testing.PrepareLanguageTestsRequest
	4, // 2: pulumirpc.testing.LanguageTest.RunLanguageTest:input_type -> pulumirpc.testing.RunLanguageTestRequest
	1, // 3: pulumirpc.testing.LanguageTest.GetLanguageTests:output_type -> pulumirpc.testing.GetLanguageTestsResponse
	3, // 4: pulumirpc.testing.LanguageTest.PrepareLanguageTests:output_type -> pulumirpc.testing.PrepareLanguageTestsResponse
	5, // 5: pulumirpc.testing.LanguageTest.RunLanguageTest:output_type -> pulumirpc.testing.RunLanguageTestResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pulumi_testing_language_proto_init() }
func file_pulumi_testing_language_proto_init() {
	if File_pulumi_testing_language_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pulumi_testing_language_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pulumi_testing_language_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageTestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pulumi_testing_language_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareLanguageTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pulumi_testing_language_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareLanguageTestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pulumi_testing_language_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLanguageTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pulumi_testing_language_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLanguageTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pulumi_testing_language_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pulumi_testing_language_proto_goTypes,
		DependencyIndexes: file_pulumi_testing_language_proto_depIdxs,
		MessageInfos:      file_pulumi_testing_language_proto_msgTypes,
	}.Build()
	File_pulumi_testing_language_proto = out.File
	file_pulumi_testing_language_proto_rawDesc = nil
	file_pulumi_testing_language_proto_goTypes = nil
	file_pulumi_testing_language_proto_depIdxs = nil
}
