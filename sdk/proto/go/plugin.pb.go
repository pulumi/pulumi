// Code generated by protoc-gen-go.
// source: plugin.proto
// DO NOT EDIT!

package pulumirpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// PluginInfo is meta-information about a plugin that is used by the system.
type PluginInfo struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *PluginInfo) Reset()                    { *m = PluginInfo{} }
func (m *PluginInfo) String() string            { return proto.CompactTextString(m) }
func (*PluginInfo) ProtoMessage()               {}
func (*PluginInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PluginInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// PluginDependency is information about a plugin that a program may depend upon.
type PluginDependency struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *PluginDependency) Reset()                    { *m = PluginDependency{} }
func (m *PluginDependency) String() string            { return proto.CompactTextString(m) }
func (*PluginDependency) ProtoMessage()               {}
func (*PluginDependency) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *PluginDependency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PluginDependency) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *PluginDependency) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*PluginInfo)(nil), "pulumirpc.PluginInfo")
	proto.RegisterType((*PluginDependency)(nil), "pulumirpc.PluginDependency")
}

func init() { proto.RegisterFile("plugin.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc8, 0x29, 0x4d,
	0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2c, 0x28, 0xcd, 0x29, 0xcd, 0xcd,
	0x2c, 0x2a, 0x48, 0x56, 0x52, 0xe3, 0xe2, 0x0a, 0x00, 0x4b, 0x79, 0xe6, 0xa5, 0xe5, 0x0b, 0x49,
	0x70, 0xb1, 0x97, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0xc1, 0xb8, 0x4a, 0x21, 0x5c, 0x02, 0x10, 0x75, 0x2e, 0xa9, 0x05, 0xa9, 0x79, 0x29, 0xa9, 0x79,
	0xc9, 0x95, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x50, 0xa5, 0x60, 0x36, 0x48, 0x2c,
	0x3b, 0x33, 0x2f, 0x45, 0x82, 0x09, 0x22, 0x06, 0x62, 0x23, 0x9b, 0xca, 0x8c, 0x62, 0x6a, 0x12,
	0x1b, 0xd8, 0x3d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0x6c, 0x8e, 0x80, 0x9f, 0x00,
	0x00, 0x00,
}
