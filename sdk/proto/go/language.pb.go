// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.5
// source: pulumi/language.proto

package pulumirpc

import (
	codegen "github.com/pulumi/pulumi/sdk/v3/proto/go/codegen"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// `RuntimeOptionType` is an enum that captures the type of a runtime option.
type RuntimeOptionPrompt_RuntimeOptionType int32

const (
	// A string value.
	RuntimeOptionPrompt_STRING RuntimeOptionPrompt_RuntimeOptionType = 0
	// A 32-bit integer value.
	RuntimeOptionPrompt_INT32 RuntimeOptionPrompt_RuntimeOptionType = 1
)

// Enum value maps for RuntimeOptionPrompt_RuntimeOptionType.
var (
	RuntimeOptionPrompt_RuntimeOptionType_name = map[int32]string{
		0: "STRING",
		1: "INT32",
	}
	RuntimeOptionPrompt_RuntimeOptionType_value = map[string]int32{
		"STRING": 0,
		"INT32":  1,
	}
)

func (x RuntimeOptionPrompt_RuntimeOptionType) Enum() *RuntimeOptionPrompt_RuntimeOptionType {
	p := new(RuntimeOptionPrompt_RuntimeOptionType)
	*p = x
	return p
}

func (x RuntimeOptionPrompt_RuntimeOptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeOptionPrompt_RuntimeOptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumi_language_proto_enumTypes[0].Descriptor()
}

func (RuntimeOptionPrompt_RuntimeOptionType) Type() protoreflect.EnumType {
	return &file_pulumi_language_proto_enumTypes[0]
}

func (x RuntimeOptionPrompt_RuntimeOptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeOptionPrompt_RuntimeOptionType.Descriptor instead.
func (RuntimeOptionPrompt_RuntimeOptionType) EnumDescriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{15, 0}
}

// A `ProgramInfo` struct specifies a Pulumi program, and is built typically based on the location of a `Pulumi.yaml`
// file and the `runtime`, `main` and other properties within that file.
type ProgramInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The root of the project containing the program, where the `Pulumi.yaml` file is located. This should be an
	// absolute path on the filesystem that is accessible to the language host.
	RootDirectory string `protobuf:"bytes,1,opt,name=root_directory,json=rootDirectory,proto3" json:"root_directory,omitempty"`
	// The directory containing the program to execute (e.g. the location of the `index.ts` for a TypeScript NodeJS
	// program). This should be an absolute path on the filesystem that is accessible to the language host. If
	// `ProgramInfo` is being built from a `Pulumi.yaml`, this will typically be the directory portion of the `main`
	// property in that file.
	ProgramDirectory string `protobuf:"bytes,2,opt,name=program_directory,json=programDirectory,proto3" json:"program_directory,omitempty"`
	// The entry point of the program to execute. This should be a relative path from the `program_directory`, and is
	// often just `.` to indicate the program directory itself, but it can also be a filename inside the directory.. If
	// `ProgramInfo` is being built from a `Pulumi.yaml`, this will typically be the filename specified `main` property
	// in that file if it is present, or the aforementioned `.` if not.
	EntryPoint string `protobuf:"bytes,3,opt,name=entry_point,json=entryPoint,proto3" json:"entry_point,omitempty"`
	// A struct capturing any language-specific options. If `ProgramInfo` is being built from a `Pulumi.yaml`, this will
	// contain the `runtime.options` property from that file.
	Options       *structpb.Struct `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgramInfo) Reset() {
	*x = ProgramInfo{}
	mi := &file_pulumi_language_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramInfo) ProtoMessage() {}

func (x *ProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramInfo.ProtoReflect.Descriptor instead.
func (*ProgramInfo) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{0}
}

func (x *ProgramInfo) GetRootDirectory() string {
	if x != nil {
		return x.RootDirectory
	}
	return ""
}

func (x *ProgramInfo) GetProgramDirectory() string {
	if x != nil {
		return x.ProgramDirectory
	}
	return ""
}

func (x *ProgramInfo) GetEntryPoint() string {
	if x != nil {
		return x.EntryPoint
	}
	return ""
}

func (x *ProgramInfo) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

// `AboutRequest` is the type of requests sent as part of an [](pulumirpc.LanguageRuntime.About) call.
type AboutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The program to use.
	Info          *ProgramInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AboutRequest) Reset() {
	*x = AboutRequest{}
	mi := &file_pulumi_language_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AboutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AboutRequest) ProtoMessage() {}

func (x *AboutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AboutRequest.ProtoReflect.Descriptor instead.
func (*AboutRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{1}
}

func (x *AboutRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// `AboutResponse` is the type of responses sent by an [](pulumirpc.LanguageRuntime.About) call. It contains information
// about the language runtime being used.
type AboutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The primary executable for the runtime of this language. This should be an absolute path. E.g. for NodeJS on a
	// POSIX system, this might be something like `/usr/bin/node`.
	Executable string `protobuf:"bytes,1,opt,name=executable,proto3" json:"executable,omitempty"`
	// The version of the runtime underpinning the language host. E.g. for a NodeJS host, this might be the version of
	// `node` being used.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Other host-specific metadata about the runtime underpinning the language host.
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AboutResponse) Reset() {
	*x = AboutResponse{}
	mi := &file_pulumi_language_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AboutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AboutResponse) ProtoMessage() {}

func (x *AboutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AboutResponse.ProtoReflect.Descriptor instead.
func (*AboutResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{2}
}

func (x *AboutResponse) GetExecutable() string {
	if x != nil {
		return x.Executable
	}
	return ""
}

func (x *AboutResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AboutResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// `GetProgramDependenciesRequest` is the type of requests sent as part of a
// [](pulumirpc.LanguageRuntime.GetProgramDependencies) call.
type GetProgramDependenciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The project name.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field. Newer
	// versions of the engine will always set this field to the string `"deprecated"`.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The program's working directory.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `program_directory` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Pwd string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// The path to the program.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `entry_point` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Program string `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	// True if transitive dependencies should be included in the response.
	TransitiveDependencies bool `protobuf:"varint,4,opt,name=transitiveDependencies,proto3" json:"transitiveDependencies,omitempty"`
	// The program to use.
	Info          *ProgramInfo `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgramDependenciesRequest) Reset() {
	*x = GetProgramDependenciesRequest{}
	mi := &file_pulumi_language_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgramDependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramDependenciesRequest) ProtoMessage() {}

func (x *GetProgramDependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramDependenciesRequest.ProtoReflect.Descriptor instead.
func (*GetProgramDependenciesRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetProgramDependenciesRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetProgramDependenciesRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetProgramDependenciesRequest) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *GetProgramDependenciesRequest) GetTransitiveDependencies() bool {
	if x != nil {
		return x.TransitiveDependencies
	}
	return false
}

func (x *GetProgramDependenciesRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// `DependencyInfo` is a struct that captures information about a language-specific dependency required by a program
// (e.g. an NPM package for NodeJS, or a Maven library for Java). It is returned as part of a
// [](pulumirpc.LanguageRuntime.GetProgramDependenciesResponse).
type DependencyInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the dependency.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The version of the dependency.
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyInfo) Reset() {
	*x = DependencyInfo{}
	mi := &file_pulumi_language_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyInfo) ProtoMessage() {}

func (x *DependencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyInfo.ProtoReflect.Descriptor instead.
func (*DependencyInfo) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{4}
}

func (x *DependencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DependencyInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// `GetProgramDependenciesResponse` is the type of responses sent by a
// [](pulumirpc.LanguageRuntime.GetProgramDependencies) call. It contains information about the dependencies of a
// program.
type GetProgramDependenciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The dependencies of the program specified by the request.
	Dependencies  []*DependencyInfo `protobuf:"bytes,1,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgramDependenciesResponse) Reset() {
	*x = GetProgramDependenciesResponse{}
	mi := &file_pulumi_language_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgramDependenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramDependenciesResponse) ProtoMessage() {}

func (x *GetProgramDependenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramDependenciesResponse.ProtoReflect.Descriptor instead.
func (*GetProgramDependenciesResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{5}
}

func (x *GetProgramDependenciesResponse) GetDependencies() []*DependencyInfo {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

// `GetRequiredPluginsRequest` is the type of requests sent as part of a
// [](pulumirpc.LanguageRuntime.GetRequiredPlugins) call.
type GetRequiredPluginsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The project name.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field. Newer
	// versions of the engine will always set this field to the string `"deprecated"`.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The program's working directory.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `program_directory` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Pwd string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// The path to the program.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `entry_point` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Program string `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	// The program to use.
	Info          *ProgramInfo `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequiredPluginsRequest) Reset() {
	*x = GetRequiredPluginsRequest{}
	mi := &file_pulumi_language_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequiredPluginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequiredPluginsRequest) ProtoMessage() {}

func (x *GetRequiredPluginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequiredPluginsRequest.ProtoReflect.Descriptor instead.
func (*GetRequiredPluginsRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetRequiredPluginsRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetRequiredPluginsRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *GetRequiredPluginsRequest) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *GetRequiredPluginsRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// `GetRequiredPluginsResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.GetRequiredPlugins)
// call. It contains information about the plugins required by a program.
type GetRequiredPluginsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The plugins required by the program specified by the request.
	Plugins       []*PluginDependency `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequiredPluginsResponse) Reset() {
	*x = GetRequiredPluginsResponse{}
	mi := &file_pulumi_language_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequiredPluginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequiredPluginsResponse) ProtoMessage() {}

func (x *GetRequiredPluginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequiredPluginsResponse.ProtoReflect.Descriptor instead.
func (*GetRequiredPluginsResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{7}
}

func (x *GetRequiredPluginsResponse) GetPlugins() []*PluginDependency {
	if x != nil {
		return x.Plugins
	}
	return nil
}

// `GetRequiredPackagesRequest` is the type of requests sent as part of a
// [](pulumirpc.LanguageRuntime.GetRequiredPackages) call.
type GetRequiredPackagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The program to use.
	Info          *ProgramInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequiredPackagesRequest) Reset() {
	*x = GetRequiredPackagesRequest{}
	mi := &file_pulumi_language_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequiredPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequiredPackagesRequest) ProtoMessage() {}

func (x *GetRequiredPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequiredPackagesRequest.ProtoReflect.Descriptor instead.
func (*GetRequiredPackagesRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequiredPackagesRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// `GetRequiredPackagesResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.GetRequiredPackages)
// call. It contains information about the packages required by a program.
type GetRequiredPackagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The packages required by the program specified by the request.
	Packages      []*PackageDependency `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequiredPackagesResponse) Reset() {
	*x = GetRequiredPackagesResponse{}
	mi := &file_pulumi_language_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequiredPackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequiredPackagesResponse) ProtoMessage() {}

func (x *GetRequiredPackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequiredPackagesResponse.ProtoReflect.Descriptor instead.
func (*GetRequiredPackagesResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{9}
}

func (x *GetRequiredPackagesResponse) GetPackages() []*PackageDependency {
	if x != nil {
		return x.Packages
	}
	return nil
}

// `RunRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.Run) call.
type RunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The project name.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The name of the stack being deployed into.
	Stack string `protobuf:"bytes,2,opt,name=stack,proto3" json:"stack,omitempty"`
	// The program's working directory.
	Pwd string `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// The path to the program.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `entry_point` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Program string `protobuf:"bytes,4,opt,name=program,proto3" json:"program,omitempty"`
	// Any arguments to pass to the program.
	Args []string `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	// Configuration variables to apply before running the program.
	Config map[string]string `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if we are only doing a dry run (preview).
	DryRun bool `protobuf:"varint,7,opt,name=dryRun,proto3" json:"dryRun,omitempty"`
	// The degree of parallelism that should be used for resource operations. A value less than or equal to 1 indicates
	// serial execution.
	Parallel int32 `protobuf:"varint,8,opt,name=parallel,proto3" json:"parallel,omitempty"`
	// The address of the [](pulumirpc.ResourceMonitor) that the program should connect to send [resource
	// registrations](resource-registration) and other calls to.
	MonitorAddress string `protobuf:"bytes,9,opt,name=monitor_address,json=monitorAddress,proto3" json:"monitor_address,omitempty"`
	// This is deprecated, query mode is no longer a supported feature.
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	QueryMode bool `protobuf:"varint,10,opt,name=queryMode,proto3" json:"queryMode,omitempty"`
	// A list of configuration keys whose values should be treated as secrets.
	ConfigSecretKeys []string `protobuf:"bytes,11,rep,name=configSecretKeys,proto3" json:"configSecretKeys,omitempty"`
	// The organization of the stack being deployed into.
	Organization string `protobuf:"bytes,12,opt,name=organization,proto3" json:"organization,omitempty"`
	// This is deprecated, runtimes should look at the string based config as that maintains the full textual data from
	// the users config file.
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	ConfigPropertyMap *structpb.Struct `protobuf:"bytes,13,opt,name=configPropertyMap,proto3" json:"configPropertyMap,omitempty"`
	// The program to use.
	Info *ProgramInfo `protobuf:"bytes,14,opt,name=info,proto3" json:"info,omitempty"`
	// The target of a codegen.LoaderServer to use for loading schemas.
	LoaderTarget string `protobuf:"bytes,15,opt,name=loader_target,json=loaderTarget,proto3" json:"loader_target,omitempty"`
	// True if and only if the host should start the program under a debugger.
	AttachDebugger bool `protobuf:"varint,16,opt,name=attach_debugger,json=attachDebugger,proto3" json:"attach_debugger,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	mi := &file_pulumi_language_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{10}
}

func (x *RunRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *RunRequest) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

func (x *RunRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *RunRequest) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *RunRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RunRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *RunRequest) GetParallel() int32 {
	if x != nil {
		return x.Parallel
	}
	return 0
}

func (x *RunRequest) GetMonitorAddress() string {
	if x != nil {
		return x.MonitorAddress
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *RunRequest) GetQueryMode() bool {
	if x != nil {
		return x.QueryMode
	}
	return false
}

func (x *RunRequest) GetConfigSecretKeys() []string {
	if x != nil {
		return x.ConfigSecretKeys
	}
	return nil
}

func (x *RunRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *RunRequest) GetConfigPropertyMap() *structpb.Struct {
	if x != nil {
		return x.ConfigPropertyMap
	}
	return nil
}

func (x *RunRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RunRequest) GetLoaderTarget() string {
	if x != nil {
		return x.LoaderTarget
	}
	return ""
}

func (x *RunRequest) GetAttachDebugger() bool {
	if x != nil {
		return x.AttachDebugger
	}
	return false
}

// `RunResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.Run) call.
type RunResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Information about any unhandled error that occurred during the run.
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// True if an error happened, but it was reported to the user. Work should halt immediately, reporting nothing
	// further to the user (since this reporting has already happened). This corresponds to a `result.Bail()` value
	// being raised in the Go application layer.
	Bail          bool `protobuf:"varint,2,opt,name=bail,proto3" json:"bail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	mi := &file_pulumi_language_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{11}
}

func (x *RunResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RunResponse) GetBail() bool {
	if x != nil {
		return x.Bail
	}
	return false
}

// `InstallDependenciesRequest` is the type of requests sent as part of an
// [](pulumirpc.LanguageRuntime.InstallDependencies) call.
type InstallDependenciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The program's working directory.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `program_directory` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	// True if we are running in a terminal and may use [ANSI escape
	// codes](https://en.wikipedia.org/wiki/ANSI_escape_code) in our output.
	IsTerminal bool `protobuf:"varint,2,opt,name=is_terminal,json=isTerminal,proto3" json:"is_terminal,omitempty"`
	// The program to use.
	Info *ProgramInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	// True if the host should use language-specific version managers, such as `pyenv` or `nvm`, to set up the version
	// of the language toolchain used.
	UseLanguageVersionTools bool `protobuf:"varint,4,opt,name=use_language_version_tools,json=useLanguageVersionTools,proto3" json:"use_language_version_tools,omitempty"`
	// True if this install is for a plugin, as opposed to a top level Pulumi program.
	IsPlugin      bool `protobuf:"varint,5,opt,name=is_plugin,json=isPlugin,proto3" json:"is_plugin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallDependenciesRequest) Reset() {
	*x = InstallDependenciesRequest{}
	mi := &file_pulumi_language_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallDependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallDependenciesRequest) ProtoMessage() {}

func (x *InstallDependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallDependenciesRequest.ProtoReflect.Descriptor instead.
func (*InstallDependenciesRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{12}
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *InstallDependenciesRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *InstallDependenciesRequest) GetIsTerminal() bool {
	if x != nil {
		return x.IsTerminal
	}
	return false
}

func (x *InstallDependenciesRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *InstallDependenciesRequest) GetUseLanguageVersionTools() bool {
	if x != nil {
		return x.UseLanguageVersionTools
	}
	return false
}

func (x *InstallDependenciesRequest) GetIsPlugin() bool {
	if x != nil {
		return x.IsPlugin
	}
	return false
}

// `InstallDependenciesResponse` is the type of responses streamed by an
// [](pulumirpc.LanguageRuntime.InstallDependencies) call.
type InstallDependenciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A line of standard output.
	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// A line of standard error.
	Stderr        []byte `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallDependenciesResponse) Reset() {
	*x = InstallDependenciesResponse{}
	mi := &file_pulumi_language_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallDependenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallDependenciesResponse) ProtoMessage() {}

func (x *InstallDependenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallDependenciesResponse.ProtoReflect.Descriptor instead.
func (*InstallDependenciesResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{13}
}

func (x *InstallDependenciesResponse) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *InstallDependenciesResponse) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

// `RuntimeOptionsRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.RuntimeOptionsPrompts)
// call.
type RuntimeOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The program to use.
	Info          *ProgramInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeOptionsRequest) Reset() {
	*x = RuntimeOptionsRequest{}
	mi := &file_pulumi_language_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptionsRequest) ProtoMessage() {}

func (x *RuntimeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptionsRequest.ProtoReflect.Descriptor instead.
func (*RuntimeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{14}
}

func (x *RuntimeOptionsRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// `RuntimeOptionPrompt` is a struct that captures information about a runtime option that should be prompted for during
// `pulumi new`.
type RuntimeOptionPrompt struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique key that identifies the runtime option.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// A human-readable description of the runtime option.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The type of the runtime option.
	PromptType RuntimeOptionPrompt_RuntimeOptionType `protobuf:"varint,3,opt,name=promptType,proto3,enum=pulumirpc.RuntimeOptionPrompt_RuntimeOptionType" json:"promptType,omitempty"`
	// A set of choices for the runtime option that may be displayed as part of the prompting process.
	Choices []*RuntimeOptionPrompt_RuntimeOptionValue `protobuf:"bytes,4,rep,name=choices,proto3" json:"choices,omitempty"`
	// The default value of the runtime option.
	Default       *RuntimeOptionPrompt_RuntimeOptionValue `protobuf:"bytes,5,opt,name=default,proto3" json:"default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeOptionPrompt) Reset() {
	*x = RuntimeOptionPrompt{}
	mi := &file_pulumi_language_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeOptionPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptionPrompt) ProtoMessage() {}

func (x *RuntimeOptionPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptionPrompt.ProtoReflect.Descriptor instead.
func (*RuntimeOptionPrompt) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{15}
}

func (x *RuntimeOptionPrompt) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RuntimeOptionPrompt) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RuntimeOptionPrompt) GetPromptType() RuntimeOptionPrompt_RuntimeOptionType {
	if x != nil {
		return x.PromptType
	}
	return RuntimeOptionPrompt_STRING
}

func (x *RuntimeOptionPrompt) GetChoices() []*RuntimeOptionPrompt_RuntimeOptionValue {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *RuntimeOptionPrompt) GetDefault() *RuntimeOptionPrompt_RuntimeOptionValue {
	if x != nil {
		return x.Default
	}
	return nil
}

// `RuntimeOptionsResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.RuntimeOptionsPrompts) call.
// It contains information about additional prompts to ask during `pulumi new`.
type RuntimeOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Prompts to ask the user.
	Prompts       []*RuntimeOptionPrompt `protobuf:"bytes,1,rep,name=prompts,proto3" json:"prompts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeOptionsResponse) Reset() {
	*x = RuntimeOptionsResponse{}
	mi := &file_pulumi_language_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptionsResponse) ProtoMessage() {}

func (x *RuntimeOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptionsResponse.ProtoReflect.Descriptor instead.
func (*RuntimeOptionsResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{16}
}

func (x *RuntimeOptionsResponse) GetPrompts() []*RuntimeOptionPrompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

// `RunPluginRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.RunPlugin) call.
type RunPluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The plugin program's working directory.
	Pwd string `protobuf:"bytes,1,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// The path to the plugin program.
	//
	// :::{important}
	// This is deprecated in favour of passing a [program info](pulumirpc.ProgramInfo) struct as the `info` field, with
	// the `entry_point` field set to this value.
	// :::
	//
	// Deprecated: Marked as deprecated in pulumi/language.proto.
	Program string `protobuf:"bytes,2,opt,name=program,proto3" json:"program,omitempty"`
	// Any arguments to pass to the plugin program.
	Args []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	// Any environment variables to set prior to executing the plugin program.
	Env []string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	// The [plugin program](pulumirpc.ProgramInfo) to use.
	Info *ProgramInfo `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	// The kind of plugin to run (resource/analyzer/etc).
	Kind string `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	// The name of the plugin (for display purposes)
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// True if a plugin should be started under a debugger.
	AttachDebugger bool `protobuf:"varint,8,opt,name=attach_debugger,json=attachDebugger,proto3" json:"attach_debugger,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunPluginRequest) Reset() {
	*x = RunPluginRequest{}
	mi := &file_pulumi_language_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunPluginRequest) ProtoMessage() {}

func (x *RunPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunPluginRequest.ProtoReflect.Descriptor instead.
func (*RunPluginRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{17}
}

func (x *RunPluginRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

// Deprecated: Marked as deprecated in pulumi/language.proto.
func (x *RunPluginRequest) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *RunPluginRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunPluginRequest) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunPluginRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RunPluginRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *RunPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunPluginRequest) GetAttachDebugger() bool {
	if x != nil {
		return x.AttachDebugger
	}
	return false
}

// `RunPluginResponse` is the type of responses streamed by a [](pulumirpc.LanguageRuntime.RunPlugin) call.
type RunPluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Output:
	//
	//	*RunPluginResponse_Stdout
	//	*RunPluginResponse_Stderr
	//	*RunPluginResponse_Exitcode
	Output        isRunPluginResponse_Output `protobuf_oneof:"output"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunPluginResponse) Reset() {
	*x = RunPluginResponse{}
	mi := &file_pulumi_language_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunPluginResponse) ProtoMessage() {}

func (x *RunPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunPluginResponse.ProtoReflect.Descriptor instead.
func (*RunPluginResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{18}
}

func (x *RunPluginResponse) GetOutput() isRunPluginResponse_Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *RunPluginResponse) GetStdout() []byte {
	if x != nil {
		if x, ok := x.Output.(*RunPluginResponse_Stdout); ok {
			return x.Stdout
		}
	}
	return nil
}

func (x *RunPluginResponse) GetStderr() []byte {
	if x != nil {
		if x, ok := x.Output.(*RunPluginResponse_Stderr); ok {
			return x.Stderr
		}
	}
	return nil
}

func (x *RunPluginResponse) GetExitcode() int32 {
	if x != nil {
		if x, ok := x.Output.(*RunPluginResponse_Exitcode); ok {
			return x.Exitcode
		}
	}
	return 0
}

type isRunPluginResponse_Output interface {
	isRunPluginResponse_Output()
}

type RunPluginResponse_Stdout struct {
	// A line of standard output.
	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3,oneof"`
}

type RunPluginResponse_Stderr struct {
	// A line of standard error.
	Stderr []byte `protobuf:"bytes,2,opt,name=stderr,proto3,oneof"`
}

type RunPluginResponse_Exitcode struct {
	// An exit code that the plugin program has terminated with. This should be the last message sent by the host.
	Exitcode int32 `protobuf:"varint,3,opt,name=exitcode,proto3,oneof"`
}

func (*RunPluginResponse_Stdout) isRunPluginResponse_Output() {}

func (*RunPluginResponse_Stderr) isRunPluginResponse_Output() {}

func (*RunPluginResponse_Exitcode) isRunPluginResponse_Output() {}

// `GenerateProgramRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.GenerateProgram)
// call.
type GenerateProgramRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The source of the project, represented as a map of file names to [PCL](pcl) source code.
	Source map[string]string `protobuf:"bytes,1,rep,name=source,proto3" json:"source,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The target of a codegen.LoaderServer to use for loading schemas.
	LoaderTarget string `protobuf:"bytes,2,opt,name=loader_target,json=loaderTarget,proto3" json:"loader_target,omitempty"`
	// True if [PCL binding](pcl-binding) should be strict.
	Strict        bool `protobuf:"varint,3,opt,name=strict,proto3" json:"strict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateProgramRequest) Reset() {
	*x = GenerateProgramRequest{}
	mi := &file_pulumi_language_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateProgramRequest) ProtoMessage() {}

func (x *GenerateProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateProgramRequest.ProtoReflect.Descriptor instead.
func (*GenerateProgramRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateProgramRequest) GetSource() map[string]string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *GenerateProgramRequest) GetLoaderTarget() string {
	if x != nil {
		return x.LoaderTarget
	}
	return ""
}

func (x *GenerateProgramRequest) GetStrict() bool {
	if x != nil {
		return x.Strict
	}
	return false
}

// `GenerateProgramResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.GenerateProgram) call.
type GenerateProgramResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Any diagnostics raised by code generation.
	Diagnostics []*codegen.Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	// The generated program source code, represented as a map of file names to byte contents.
	Source        map[string][]byte `protobuf:"bytes,2,rep,name=source,proto3" json:"source,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateProgramResponse) Reset() {
	*x = GenerateProgramResponse{}
	mi := &file_pulumi_language_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateProgramResponse) ProtoMessage() {}

func (x *GenerateProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateProgramResponse.ProtoReflect.Descriptor instead.
func (*GenerateProgramResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateProgramResponse) GetDiagnostics() []*codegen.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *GenerateProgramResponse) GetSource() map[string][]byte {
	if x != nil {
		return x.Source
	}
	return nil
}

// `GenerateProjectRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.GenerateProject) call.
type GenerateProjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The directory containing [PCL](pcl) source code, from which the project should be generated.
	SourceDirectory string `protobuf:"bytes,1,opt,name=source_directory,json=sourceDirectory,proto3" json:"source_directory,omitempty"`
	// The directory in which generated project files should be written. This should be an absolute path on the
	// filesystem that is accessible to the language host.
	TargetDirectory string `protobuf:"bytes,2,opt,name=target_directory,json=targetDirectory,proto3" json:"target_directory,omitempty"`
	// A string containing JSON to be used as the Pulumi project file (that is, as the contents of `Pulumi.yaml`).
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// True if [PCL binding](pcl-binding) should be strict.
	Strict bool `protobuf:"varint,4,opt,name=strict,proto3" json:"strict,omitempty"`
	// The target of a codegen.LoaderServer to use for loading schemas.
	LoaderTarget string `protobuf:"bytes,5,opt,name=loader_target,json=loaderTarget,proto3" json:"loader_target,omitempty"`
	// Local dependencies that the generated project should reference explicitly, instead of e.g. using the language's
	// package system. This is a map of package names to local paths of language-specific artifacts that should be used.
	// For instance, in the case of a NodeJS project, this might be a map of NPM package names to local paths to be
	// used, such as `{ "@pulumi/aws": "/some/path/to/aws.tgz" }` if a local tarball is to be used instead of the
	// published `@pulumi/aws` package.
	LocalDependencies map[string]string `protobuf:"bytes,6,rep,name=local_dependencies,json=localDependencies,proto3" json:"local_dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GenerateProjectRequest) Reset() {
	*x = GenerateProjectRequest{}
	mi := &file_pulumi_language_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateProjectRequest) ProtoMessage() {}

func (x *GenerateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateProjectRequest.ProtoReflect.Descriptor instead.
func (*GenerateProjectRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateProjectRequest) GetSourceDirectory() string {
	if x != nil {
		return x.SourceDirectory
	}
	return ""
}

func (x *GenerateProjectRequest) GetTargetDirectory() string {
	if x != nil {
		return x.TargetDirectory
	}
	return ""
}

func (x *GenerateProjectRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GenerateProjectRequest) GetStrict() bool {
	if x != nil {
		return x.Strict
	}
	return false
}

func (x *GenerateProjectRequest) GetLoaderTarget() string {
	if x != nil {
		return x.LoaderTarget
	}
	return ""
}

func (x *GenerateProjectRequest) GetLocalDependencies() map[string]string {
	if x != nil {
		return x.LocalDependencies
	}
	return nil
}

// `GenerateProjectResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.GenerateProject) call.
type GenerateProjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Any diagnostics raised by code generation.
	Diagnostics   []*codegen.Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateProjectResponse) Reset() {
	*x = GenerateProjectResponse{}
	mi := &file_pulumi_language_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateProjectResponse) ProtoMessage() {}

func (x *GenerateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateProjectResponse.ProtoReflect.Descriptor instead.
func (*GenerateProjectResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{22}
}

func (x *GenerateProjectResponse) GetDiagnostics() []*codegen.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

// `GeneratePackageRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.GeneratePackage) call.
type GeneratePackageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The directory to generate the package in. This should be an absolute path on the filesystem that is accessible to
	// the language host.
	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	// A JSON-encoded string containing the schema from which the SDK package should be generated.
	Schema string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	// Extra files that should be copied as-is to the generated output.
	ExtraFiles map[string][]byte `protobuf:"bytes,3,rep,name=extra_files,json=extraFiles,proto3" json:"extra_files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The target of a codegen.LoaderServer to use for loading schemas.
	LoaderTarget string `protobuf:"bytes,4,opt,name=loader_target,json=loaderTarget,proto3" json:"loader_target,omitempty"`
	// Local dependencies that the generated package should reference explicitly, instead of e.g. using the language's
	// package system. This is a map of package names to local paths of language-specific artifacts that should be used.
	// For instance, in the case of a NodeJS package, this might be a map of NPM package names to local paths to be
	// used, such as `{ "@pulumi/aws": "/some/path/to/aws.tgz" }` if a local tarball is to be used instead of the
	// published `@pulumi/aws` package.
	LocalDependencies map[string]string `protobuf:"bytes,5,rep,name=local_dependencies,json=localDependencies,proto3" json:"local_dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If true, generates an SDK appropriate for local usage. This may differ from a standard publishable SDK depending
	// on the language (e.g. for a NodeJS package that is intended to be imported locally, the language host may choose
	// not to generate a `package.json`).
	Local         bool `protobuf:"varint,6,opt,name=local,proto3" json:"local,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratePackageRequest) Reset() {
	*x = GeneratePackageRequest{}
	mi := &file_pulumi_language_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePackageRequest) ProtoMessage() {}

func (x *GeneratePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePackageRequest.ProtoReflect.Descriptor instead.
func (*GeneratePackageRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{23}
}

func (x *GeneratePackageRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *GeneratePackageRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *GeneratePackageRequest) GetExtraFiles() map[string][]byte {
	if x != nil {
		return x.ExtraFiles
	}
	return nil
}

func (x *GeneratePackageRequest) GetLoaderTarget() string {
	if x != nil {
		return x.LoaderTarget
	}
	return ""
}

func (x *GeneratePackageRequest) GetLocalDependencies() map[string]string {
	if x != nil {
		return x.LocalDependencies
	}
	return nil
}

func (x *GeneratePackageRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

// `GeneratePackageResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.GeneratePackage) call.
type GeneratePackageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Any diagnostics raised by code generation.
	Diagnostics   []*codegen.Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratePackageResponse) Reset() {
	*x = GeneratePackageResponse{}
	mi := &file_pulumi_language_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePackageResponse) ProtoMessage() {}

func (x *GeneratePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePackageResponse.ProtoReflect.Descriptor instead.
func (*GeneratePackageResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{24}
}

func (x *GeneratePackageResponse) GetDiagnostics() []*codegen.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

// `PackRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.Pack) call.
type PackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The directory containing the package to pack. This should be an absolute path on the filesystem that is accessible
	// to the language host.
	PackageDirectory string `protobuf:"bytes,1,opt,name=package_directory,json=packageDirectory,proto3" json:"package_directory,omitempty"`
	// The directory to write the packed artifact to. This should be an absolute path on the filesystem that is
	// accessible to the language host.
	DestinationDirectory string `protobuf:"bytes,2,opt,name=destination_directory,json=destinationDirectory,proto3" json:"destination_directory,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PackRequest) Reset() {
	*x = PackRequest{}
	mi := &file_pulumi_language_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackRequest) ProtoMessage() {}

func (x *PackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackRequest.ProtoReflect.Descriptor instead.
func (*PackRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{25}
}

func (x *PackRequest) GetPackageDirectory() string {
	if x != nil {
		return x.PackageDirectory
	}
	return ""
}

func (x *PackRequest) GetDestinationDirectory() string {
	if x != nil {
		return x.DestinationDirectory
	}
	return ""
}

// `PackResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.Pack) call.
type PackResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The path to the packed artifact. This should be an absolute path on the filesystem that is accessible to the
	// language host.
	ArtifactPath  string `protobuf:"bytes,1,opt,name=artifact_path,json=artifactPath,proto3" json:"artifact_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackResponse) Reset() {
	*x = PackResponse{}
	mi := &file_pulumi_language_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackResponse) ProtoMessage() {}

func (x *PackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackResponse.ProtoReflect.Descriptor instead.
func (*PackResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{26}
}

func (x *PackResponse) GetArtifactPath() string {
	if x != nil {
		return x.ArtifactPath
	}
	return ""
}

// `LanguageHandshakeRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.Handshake) call.
type LanguageHandshakeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The gRPC address of the engine calling the language host.
	EngineAddress string `protobuf:"bytes,1,opt,name=engine_address,json=engineAddress,proto3" json:"engine_address,omitempty"`
	// The optional root directory, where the `PulumiPlugin.yaml` file or language binary is located. This can't be sent
	// when the engine is attaching to a language via a port number.
	RootDirectory *string `protobuf:"bytes,2,opt,name=root_directory,json=rootDirectory,proto3,oneof" json:"root_directory,omitempty"`
	// The optional absolute path to the directory of the language program to execute. Generally, but not required to
	// be, underneath the root directory. This can't be sent when the engine is attaching to a language via a port
	// number.
	ProgramDirectory *string `protobuf:"bytes,3,opt,name=program_directory,json=programDirectory,proto3,oneof" json:"program_directory,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LanguageHandshakeRequest) Reset() {
	*x = LanguageHandshakeRequest{}
	mi := &file_pulumi_language_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageHandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageHandshakeRequest) ProtoMessage() {}

func (x *LanguageHandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageHandshakeRequest.ProtoReflect.Descriptor instead.
func (*LanguageHandshakeRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{27}
}

func (x *LanguageHandshakeRequest) GetEngineAddress() string {
	if x != nil {
		return x.EngineAddress
	}
	return ""
}

func (x *LanguageHandshakeRequest) GetRootDirectory() string {
	if x != nil && x.RootDirectory != nil {
		return *x.RootDirectory
	}
	return ""
}

func (x *LanguageHandshakeRequest) GetProgramDirectory() string {
	if x != nil && x.ProgramDirectory != nil {
		return *x.ProgramDirectory
	}
	return ""
}

// `LanguageHandshakeResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.Handshake) call.
type LanguageHandshakeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LanguageHandshakeResponse) Reset() {
	*x = LanguageHandshakeResponse{}
	mi := &file_pulumi_language_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageHandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageHandshakeResponse) ProtoMessage() {}

func (x *LanguageHandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageHandshakeResponse.ProtoReflect.Descriptor instead.
func (*LanguageHandshakeResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{28}
}

// `LinkRequest` is the type of requests sent as part of a [](pulumirpc.LanguageRuntime.Link) call.
type LinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The program to use.
	Info *ProgramInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// The target of a codegen.LoaderServer to use for loading schemas.
	LoaderTarget string `protobuf:"bytes,2,opt,name=loader_target,json=loaderTarget,proto3" json:"loader_target,omitempty"`
	// Local dependencies that should be linked into the program or plugin's language specific project files.
	// Each dependency has a path to a a language specific artifact. This can be a binary artifact like a
	// Python wheel or a tar.gz for Node.js, or a source directory.
	Packages      []*LinkRequest_LinkDependency `protobuf:"bytes,3,rep,name=packages,proto3" json:"packages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkRequest) Reset() {
	*x = LinkRequest{}
	mi := &file_pulumi_language_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRequest) ProtoMessage() {}

func (x *LinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRequest.ProtoReflect.Descriptor instead.
func (*LinkRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{29}
}

func (x *LinkRequest) GetInfo() *ProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *LinkRequest) GetLoaderTarget() string {
	if x != nil {
		return x.LoaderTarget
	}
	return ""
}

func (x *LinkRequest) GetPackages() []*LinkRequest_LinkDependency {
	if x != nil {
		return x.Packages
	}
	return nil
}

// `LinkResponse` is the type of responses sent by a [](pulumirpc.LanguageRuntime.Link) call.
type LinkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The instructions on how to use a linked package in a program or plugin. These instructions are meant
	// to be displayed to the user. For example when linking a local Python dependency, this might return
	// `import my_namespace_mypkg as mypkg`.
	ImportInstructions string `protobuf:"bytes,1,opt,name=import_instructions,json=importInstructions,proto3" json:"import_instructions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LinkResponse) Reset() {
	*x = LinkResponse{}
	mi := &file_pulumi_language_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResponse) ProtoMessage() {}

func (x *LinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResponse.ProtoReflect.Descriptor instead.
func (*LinkResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{30}
}

func (x *LinkResponse) GetImportInstructions() string {
	if x != nil {
		return x.ImportInstructions
	}
	return ""
}

// `RuntimeOptionValue` is a struct that captures the value of a runtime option.
type RuntimeOptionPrompt_RuntimeOptionValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the runtime option.
	PromptType RuntimeOptionPrompt_RuntimeOptionType `protobuf:"varint,1,opt,name=promptType,proto3,enum=pulumirpc.RuntimeOptionPrompt_RuntimeOptionType" json:"promptType,omitempty"`
	// The string value of the runtime option, if and only if the type is `STRING`.
	StringValue string `protobuf:"bytes,2,opt,name=stringValue,proto3" json:"stringValue,omitempty"`
	// The 32-bit integer value of the runtime option, if and only if the type is `INT32`.
	Int32Value int32 `protobuf:"varint,3,opt,name=int32Value,proto3" json:"int32Value,omitempty"`
	// The display name of the runtime option, to be used in prompts.
	DisplayName   string `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) Reset() {
	*x = RuntimeOptionPrompt_RuntimeOptionValue{}
	mi := &file_pulumi_language_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptionPrompt_RuntimeOptionValue) ProtoMessage() {}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptionPrompt_RuntimeOptionValue.ProtoReflect.Descriptor instead.
func (*RuntimeOptionPrompt_RuntimeOptionValue) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{15, 0}
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) GetPromptType() RuntimeOptionPrompt_RuntimeOptionType {
	if x != nil {
		return x.PromptType
	}
	return RuntimeOptionPrompt_STRING
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) GetInt32Value() int32 {
	if x != nil {
		return x.Int32Value
	}
	return 0
}

func (x *RuntimeOptionPrompt_RuntimeOptionValue) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type LinkRequest_LinkDependency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *PackageDependency     `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkRequest_LinkDependency) Reset() {
	*x = LinkRequest_LinkDependency{}
	mi := &file_pulumi_language_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkRequest_LinkDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRequest_LinkDependency) ProtoMessage() {}

func (x *LinkRequest_LinkDependency) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_language_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRequest_LinkDependency.ProtoReflect.Descriptor instead.
func (*LinkRequest_LinkDependency) Descriptor() ([]byte, []int) {
	return file_pulumi_language_proto_rawDescGZIP(), []int{29, 0}
}

func (x *LinkRequest_LinkDependency) GetPackage() *PackageDependency {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *LinkRequest_LinkDependency) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_pulumi_language_proto protoreflect.FileDescriptor

const file_pulumi_language_proto_rawDesc = "" +
	"\n" +
	"\x15pulumi/language.proto\x12\tpulumirpc\x1a\x18pulumi/codegen/hcl.proto\x1a\x13pulumi/plugin.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xb5\x01\n" +
	"\vProgramInfo\x12%\n" +
	"\x0eroot_directory\x18\x01 \x01(\tR\rrootDirectory\x12+\n" +
	"\x11program_directory\x18\x02 \x01(\tR\x10programDirectory\x12\x1f\n" +
	"\ventry_point\x18\x03 \x01(\tR\n" +
	"entryPoint\x121\n" +
	"\aoptions\x18\x04 \x01(\v2\x17.google.protobuf.StructR\aoptions\":\n" +
	"\fAboutRequest\x12*\n" +
	"\x04info\x18\x01 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\"\xca\x01\n" +
	"\rAboutResponse\x12\x1e\n" +
	"\n" +
	"executable\x18\x01 \x01(\tR\n" +
	"executable\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12B\n" +
	"\bmetadata\x18\x03 \x03(\v2&.pulumirpc.AboutResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x01\n" +
	"\x1dGetProgramDependenciesRequest\x12\x1c\n" +
	"\aproject\x18\x01 \x01(\tB\x02\x18\x01R\aproject\x12\x14\n" +
	"\x03pwd\x18\x02 \x01(\tB\x02\x18\x01R\x03pwd\x12\x1c\n" +
	"\aprogram\x18\x03 \x01(\tB\x02\x18\x01R\aprogram\x126\n" +
	"\x16transitiveDependencies\x18\x04 \x01(\bR\x16transitiveDependencies\x12*\n" +
	"\x04info\x18\x05 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\">\n" +
	"\x0eDependencyInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"_\n" +
	"\x1eGetProgramDependenciesResponse\x12=\n" +
	"\fdependencies\x18\x01 \x03(\v2\x19.pulumirpc.DependencyInfoR\fdependencies\"\x99\x01\n" +
	"\x19GetRequiredPluginsRequest\x12\x1c\n" +
	"\aproject\x18\x01 \x01(\tB\x02\x18\x01R\aproject\x12\x14\n" +
	"\x03pwd\x18\x02 \x01(\tB\x02\x18\x01R\x03pwd\x12\x1c\n" +
	"\aprogram\x18\x03 \x01(\tB\x02\x18\x01R\aprogram\x12*\n" +
	"\x04info\x18\x04 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\"S\n" +
	"\x1aGetRequiredPluginsResponse\x125\n" +
	"\aplugins\x18\x01 \x03(\v2\x1b.pulumirpc.PluginDependencyR\aplugins\"H\n" +
	"\x1aGetRequiredPackagesRequest\x12*\n" +
	"\x04info\x18\x01 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\"W\n" +
	"\x1bGetRequiredPackagesResponse\x128\n" +
	"\bpackages\x18\x01 \x03(\v2\x1c.pulumirpc.PackageDependencyR\bpackages\"\x8a\x05\n" +
	"\n" +
	"RunRequest\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12\x14\n" +
	"\x05stack\x18\x02 \x01(\tR\x05stack\x12\x10\n" +
	"\x03pwd\x18\x03 \x01(\tR\x03pwd\x12\x1c\n" +
	"\aprogram\x18\x04 \x01(\tB\x02\x18\x01R\aprogram\x12\x12\n" +
	"\x04args\x18\x05 \x03(\tR\x04args\x129\n" +
	"\x06config\x18\x06 \x03(\v2!.pulumirpc.RunRequest.ConfigEntryR\x06config\x12\x16\n" +
	"\x06dryRun\x18\a \x01(\bR\x06dryRun\x12\x1a\n" +
	"\bparallel\x18\b \x01(\x05R\bparallel\x12'\n" +
	"\x0fmonitor_address\x18\t \x01(\tR\x0emonitorAddress\x12 \n" +
	"\tqueryMode\x18\n" +
	" \x01(\bB\x02\x18\x01R\tqueryMode\x12*\n" +
	"\x10configSecretKeys\x18\v \x03(\tR\x10configSecretKeys\x12\"\n" +
	"\forganization\x18\f \x01(\tR\forganization\x12I\n" +
	"\x11configPropertyMap\x18\r \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x11configPropertyMap\x12*\n" +
	"\x04info\x18\x0e \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\x12#\n" +
	"\rloader_target\x18\x0f \x01(\tR\floaderTarget\x12'\n" +
	"\x0fattach_debugger\x18\x10 \x01(\bR\x0eattachDebugger\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"7\n" +
	"\vRunResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12\x12\n" +
	"\x04bail\x18\x02 \x01(\bR\x04bail\"\xe5\x01\n" +
	"\x1aInstallDependenciesRequest\x12 \n" +
	"\tdirectory\x18\x01 \x01(\tB\x02\x18\x01R\tdirectory\x12\x1f\n" +
	"\vis_terminal\x18\x02 \x01(\bR\n" +
	"isTerminal\x12*\n" +
	"\x04info\x18\x03 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\x12;\n" +
	"\x1ause_language_version_tools\x18\x04 \x01(\bR\x17useLanguageVersionTools\x12\x1b\n" +
	"\tis_plugin\x18\x05 \x01(\bR\bisPlugin\"M\n" +
	"\x1bInstallDependenciesResponse\x12\x16\n" +
	"\x06stdout\x18\x01 \x01(\fR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x02 \x01(\fR\x06stderr\"C\n" +
	"\x15RuntimeOptionsRequest\x12*\n" +
	"\x04info\x18\x01 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\"\xae\x04\n" +
	"\x13RuntimeOptionPrompt\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12P\n" +
	"\n" +
	"promptType\x18\x03 \x01(\x0e20.pulumirpc.RuntimeOptionPrompt.RuntimeOptionTypeR\n" +
	"promptType\x12K\n" +
	"\achoices\x18\x04 \x03(\v21.pulumirpc.RuntimeOptionPrompt.RuntimeOptionValueR\achoices\x12K\n" +
	"\adefault\x18\x05 \x01(\v21.pulumirpc.RuntimeOptionPrompt.RuntimeOptionValueR\adefault\x1a\xca\x01\n" +
	"\x12RuntimeOptionValue\x12P\n" +
	"\n" +
	"promptType\x18\x01 \x01(\x0e20.pulumirpc.RuntimeOptionPrompt.RuntimeOptionTypeR\n" +
	"promptType\x12 \n" +
	"\vstringValue\x18\x02 \x01(\tR\vstringValue\x12\x1e\n" +
	"\n" +
	"int32Value\x18\x03 \x01(\x05R\n" +
	"int32Value\x12 \n" +
	"\vdisplayName\x18\x04 \x01(\tR\vdisplayName\"*\n" +
	"\x11RuntimeOptionType\x12\n" +
	"\n" +
	"\x06STRING\x10\x00\x12\t\n" +
	"\x05INT32\x10\x01\"R\n" +
	"\x16RuntimeOptionsResponse\x128\n" +
	"\aprompts\x18\x01 \x03(\v2\x1e.pulumirpc.RuntimeOptionPromptR\aprompts\"\xe5\x01\n" +
	"\x10RunPluginRequest\x12\x10\n" +
	"\x03pwd\x18\x01 \x01(\tR\x03pwd\x12\x1c\n" +
	"\aprogram\x18\x02 \x01(\tB\x02\x18\x01R\aprogram\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x10\n" +
	"\x03env\x18\x04 \x03(\tR\x03env\x12*\n" +
	"\x04info\x18\x05 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\x12\x12\n" +
	"\x04kind\x18\x06 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12'\n" +
	"\x0fattach_debugger\x18\b \x01(\bR\x0eattachDebugger\"o\n" +
	"\x11RunPluginResponse\x12\x18\n" +
	"\x06stdout\x18\x01 \x01(\fH\x00R\x06stdout\x12\x18\n" +
	"\x06stderr\x18\x02 \x01(\fH\x00R\x06stderr\x12\x1c\n" +
	"\bexitcode\x18\x03 \x01(\x05H\x00R\bexitcodeB\b\n" +
	"\x06output\"\xd7\x01\n" +
	"\x16GenerateProgramRequest\x12E\n" +
	"\x06source\x18\x01 \x03(\v2-.pulumirpc.GenerateProgramRequest.SourceEntryR\x06source\x12#\n" +
	"\rloader_target\x18\x02 \x01(\tR\floaderTarget\x12\x16\n" +
	"\x06strict\x18\x03 \x01(\bR\x06strict\x1a9\n" +
	"\vSourceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x17GenerateProgramResponse\x12?\n" +
	"\vdiagnostics\x18\x01 \x03(\v2\x1d.pulumirpc.codegen.DiagnosticR\vdiagnostics\x12F\n" +
	"\x06source\x18\x02 \x03(\v2..pulumirpc.GenerateProgramResponse.SourceEntryR\x06source\x1a9\n" +
	"\vSourceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xf4\x02\n" +
	"\x16GenerateProjectRequest\x12)\n" +
	"\x10source_directory\x18\x01 \x01(\tR\x0fsourceDirectory\x12)\n" +
	"\x10target_directory\x18\x02 \x01(\tR\x0ftargetDirectory\x12\x18\n" +
	"\aproject\x18\x03 \x01(\tR\aproject\x12\x16\n" +
	"\x06strict\x18\x04 \x01(\bR\x06strict\x12#\n" +
	"\rloader_target\x18\x05 \x01(\tR\floaderTarget\x12g\n" +
	"\x12local_dependencies\x18\x06 \x03(\v28.pulumirpc.GenerateProjectRequest.LocalDependenciesEntryR\x11localDependencies\x1aD\n" +
	"\x16LocalDependenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x17GenerateProjectResponse\x12?\n" +
	"\vdiagnostics\x18\x01 \x03(\v2\x1d.pulumirpc.codegen.DiagnosticR\vdiagnostics\"\xcb\x03\n" +
	"\x16GeneratePackageRequest\x12\x1c\n" +
	"\tdirectory\x18\x01 \x01(\tR\tdirectory\x12\x16\n" +
	"\x06schema\x18\x02 \x01(\tR\x06schema\x12R\n" +
	"\vextra_files\x18\x03 \x03(\v21.pulumirpc.GeneratePackageRequest.ExtraFilesEntryR\n" +
	"extraFiles\x12#\n" +
	"\rloader_target\x18\x04 \x01(\tR\floaderTarget\x12g\n" +
	"\x12local_dependencies\x18\x05 \x03(\v28.pulumirpc.GeneratePackageRequest.LocalDependenciesEntryR\x11localDependencies\x12\x14\n" +
	"\x05local\x18\x06 \x01(\bR\x05local\x1a=\n" +
	"\x0fExtraFilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aD\n" +
	"\x16LocalDependenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x17GeneratePackageResponse\x12?\n" +
	"\vdiagnostics\x18\x01 \x03(\v2\x1d.pulumirpc.codegen.DiagnosticR\vdiagnostics\"o\n" +
	"\vPackRequest\x12+\n" +
	"\x11package_directory\x18\x01 \x01(\tR\x10packageDirectory\x123\n" +
	"\x15destination_directory\x18\x02 \x01(\tR\x14destinationDirectory\"3\n" +
	"\fPackResponse\x12#\n" +
	"\rartifact_path\x18\x01 \x01(\tR\fartifactPath\"\xc8\x01\n" +
	"\x18LanguageHandshakeRequest\x12%\n" +
	"\x0eengine_address\x18\x01 \x01(\tR\rengineAddress\x12*\n" +
	"\x0eroot_directory\x18\x02 \x01(\tH\x00R\rrootDirectory\x88\x01\x01\x120\n" +
	"\x11program_directory\x18\x03 \x01(\tH\x01R\x10programDirectory\x88\x01\x01B\x11\n" +
	"\x0f_root_directoryB\x14\n" +
	"\x12_program_directory\"\x1b\n" +
	"\x19LanguageHandshakeResponse\"\xff\x01\n" +
	"\vLinkRequest\x12*\n" +
	"\x04info\x18\x01 \x01(\v2\x16.pulumirpc.ProgramInfoR\x04info\x12#\n" +
	"\rloader_target\x18\x02 \x01(\tR\floaderTarget\x12A\n" +
	"\bpackages\x18\x03 \x03(\v2%.pulumirpc.LinkRequest.LinkDependencyR\bpackages\x1a\\\n" +
	"\x0eLinkDependency\x126\n" +
	"\apackage\x18\x01 \x01(\v2\x1c.pulumirpc.PackageDependencyR\apackage\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"?\n" +
	"\fLinkResponse\x12/\n" +
	"\x13import_instructions\x18\x01 \x01(\tR\x12importInstructions2\xc0\n" +
	"\n" +
	"\x0fLanguageRuntime\x12X\n" +
	"\tHandshake\x12#.pulumirpc.LanguageHandshakeRequest\x1a$.pulumirpc.LanguageHandshakeResponse\"\x00\x12f\n" +
	"\x12GetRequiredPlugins\x12$.pulumirpc.GetRequiredPluginsRequest\x1a%.pulumirpc.GetRequiredPluginsResponse\"\x03\x88\x02\x01\x12f\n" +
	"\x13GetRequiredPackages\x12%.pulumirpc.GetRequiredPackagesRequest\x1a&.pulumirpc.GetRequiredPackagesResponse\"\x00\x126\n" +
	"\x03Run\x12\x15.pulumirpc.RunRequest\x1a\x16.pulumirpc.RunResponse\"\x00\x12@\n" +
	"\rGetPluginInfo\x12\x16.google.protobuf.Empty\x1a\x15.pulumirpc.PluginInfo\"\x00\x12h\n" +
	"\x13InstallDependencies\x12%.pulumirpc.InstallDependenciesRequest\x1a&.pulumirpc.InstallDependenciesResponse\"\x000\x01\x12^\n" +
	"\x15RuntimeOptionsPrompts\x12 .pulumirpc.RuntimeOptionsRequest\x1a!.pulumirpc.RuntimeOptionsResponse\"\x00\x12<\n" +
	"\x05About\x12\x17.pulumirpc.AboutRequest\x1a\x18.pulumirpc.AboutResponse\"\x00\x12o\n" +
	"\x16GetProgramDependencies\x12(.pulumirpc.GetProgramDependenciesRequest\x1a).pulumirpc.GetProgramDependenciesResponse\"\x00\x12J\n" +
	"\tRunPlugin\x12\x1b.pulumirpc.RunPluginRequest\x1a\x1c.pulumirpc.RunPluginResponse\"\x000\x01\x12Z\n" +
	"\x0fGenerateProgram\x12!.pulumirpc.GenerateProgramRequest\x1a\".pulumirpc.GenerateProgramResponse\"\x00\x12Z\n" +
	"\x0fGenerateProject\x12!.pulumirpc.GenerateProjectRequest\x1a\".pulumirpc.GenerateProjectResponse\"\x00\x12Z\n" +
	"\x0fGeneratePackage\x12!.pulumirpc.GeneratePackageRequest\x1a\".pulumirpc.GeneratePackageResponse\"\x00\x129\n" +
	"\x04Pack\x12\x16.pulumirpc.PackRequest\x1a\x17.pulumirpc.PackResponse\"\x00\x129\n" +
	"\x04Link\x12\x16.pulumirpc.LinkRequest\x1a\x17.pulumirpc.LinkResponse\"\x00\x12:\n" +
	"\x06Cancel\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00B4Z2github.com/pulumi/pulumi/sdk/v3/proto/go;pulumirpcb\x06proto3"

var (
	file_pulumi_language_proto_rawDescOnce sync.Once
	file_pulumi_language_proto_rawDescData []byte
)

func file_pulumi_language_proto_rawDescGZIP() []byte {
	file_pulumi_language_proto_rawDescOnce.Do(func() {
		file_pulumi_language_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pulumi_language_proto_rawDesc), len(file_pulumi_language_proto_rawDesc)))
	})
	return file_pulumi_language_proto_rawDescData
}

var file_pulumi_language_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pulumi_language_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_pulumi_language_proto_goTypes = []any{
	(RuntimeOptionPrompt_RuntimeOptionType)(0),     // 0: pulumirpc.RuntimeOptionPrompt.RuntimeOptionType
	(*ProgramInfo)(nil),                            // 1: pulumirpc.ProgramInfo
	(*AboutRequest)(nil),                           // 2: pulumirpc.AboutRequest
	(*AboutResponse)(nil),                          // 3: pulumirpc.AboutResponse
	(*GetProgramDependenciesRequest)(nil),          // 4: pulumirpc.GetProgramDependenciesRequest
	(*DependencyInfo)(nil),                         // 5: pulumirpc.DependencyInfo
	(*GetProgramDependenciesResponse)(nil),         // 6: pulumirpc.GetProgramDependenciesResponse
	(*GetRequiredPluginsRequest)(nil),              // 7: pulumirpc.GetRequiredPluginsRequest
	(*GetRequiredPluginsResponse)(nil),             // 8: pulumirpc.GetRequiredPluginsResponse
	(*GetRequiredPackagesRequest)(nil),             // 9: pulumirpc.GetRequiredPackagesRequest
	(*GetRequiredPackagesResponse)(nil),            // 10: pulumirpc.GetRequiredPackagesResponse
	(*RunRequest)(nil),                             // 11: pulumirpc.RunRequest
	(*RunResponse)(nil),                            // 12: pulumirpc.RunResponse
	(*InstallDependenciesRequest)(nil),             // 13: pulumirpc.InstallDependenciesRequest
	(*InstallDependenciesResponse)(nil),            // 14: pulumirpc.InstallDependenciesResponse
	(*RuntimeOptionsRequest)(nil),                  // 15: pulumirpc.RuntimeOptionsRequest
	(*RuntimeOptionPrompt)(nil),                    // 16: pulumirpc.RuntimeOptionPrompt
	(*RuntimeOptionsResponse)(nil),                 // 17: pulumirpc.RuntimeOptionsResponse
	(*RunPluginRequest)(nil),                       // 18: pulumirpc.RunPluginRequest
	(*RunPluginResponse)(nil),                      // 19: pulumirpc.RunPluginResponse
	(*GenerateProgramRequest)(nil),                 // 20: pulumirpc.GenerateProgramRequest
	(*GenerateProgramResponse)(nil),                // 21: pulumirpc.GenerateProgramResponse
	(*GenerateProjectRequest)(nil),                 // 22: pulumirpc.GenerateProjectRequest
	(*GenerateProjectResponse)(nil),                // 23: pulumirpc.GenerateProjectResponse
	(*GeneratePackageRequest)(nil),                 // 24: pulumirpc.GeneratePackageRequest
	(*GeneratePackageResponse)(nil),                // 25: pulumirpc.GeneratePackageResponse
	(*PackRequest)(nil),                            // 26: pulumirpc.PackRequest
	(*PackResponse)(nil),                           // 27: pulumirpc.PackResponse
	(*LanguageHandshakeRequest)(nil),               // 28: pulumirpc.LanguageHandshakeRequest
	(*LanguageHandshakeResponse)(nil),              // 29: pulumirpc.LanguageHandshakeResponse
	(*LinkRequest)(nil),                            // 30: pulumirpc.LinkRequest
	(*LinkResponse)(nil),                           // 31: pulumirpc.LinkResponse
	nil,                                            // 32: pulumirpc.AboutResponse.MetadataEntry
	nil,                                            // 33: pulumirpc.RunRequest.ConfigEntry
	(*RuntimeOptionPrompt_RuntimeOptionValue)(nil), // 34: pulumirpc.RuntimeOptionPrompt.RuntimeOptionValue
	nil,                                // 35: pulumirpc.GenerateProgramRequest.SourceEntry
	nil,                                // 36: pulumirpc.GenerateProgramResponse.SourceEntry
	nil,                                // 37: pulumirpc.GenerateProjectRequest.LocalDependenciesEntry
	nil,                                // 38: pulumirpc.GeneratePackageRequest.ExtraFilesEntry
	nil,                                // 39: pulumirpc.GeneratePackageRequest.LocalDependenciesEntry
	(*LinkRequest_LinkDependency)(nil), // 40: pulumirpc.LinkRequest.LinkDependency
	(*structpb.Struct)(nil),            // 41: google.protobuf.Struct
	(*PluginDependency)(nil),           // 42: pulumirpc.PluginDependency
	(*PackageDependency)(nil),          // 43: pulumirpc.PackageDependency
	(*codegen.Diagnostic)(nil),         // 44: pulumirpc.codegen.Diagnostic
	(*emptypb.Empty)(nil),              // 45: google.protobuf.Empty
	(*PluginInfo)(nil),                 // 46: pulumirpc.PluginInfo
}
var file_pulumi_language_proto_depIdxs = []int32{
	41, // 0: pulumirpc.ProgramInfo.options:type_name -> google.protobuf.Struct
	1,  // 1: pulumirpc.AboutRequest.info:type_name -> pulumirpc.ProgramInfo
	32, // 2: pulumirpc.AboutResponse.metadata:type_name -> pulumirpc.AboutResponse.MetadataEntry
	1,  // 3: pulumirpc.GetProgramDependenciesRequest.info:type_name -> pulumirpc.ProgramInfo
	5,  // 4: pulumirpc.GetProgramDependenciesResponse.dependencies:type_name -> pulumirpc.DependencyInfo
	1,  // 5: pulumirpc.GetRequiredPluginsRequest.info:type_name -> pulumirpc.ProgramInfo
	42, // 6: pulumirpc.GetRequiredPluginsResponse.plugins:type_name -> pulumirpc.PluginDependency
	1,  // 7: pulumirpc.GetRequiredPackagesRequest.info:type_name -> pulumirpc.ProgramInfo
	43, // 8: pulumirpc.GetRequiredPackagesResponse.packages:type_name -> pulumirpc.PackageDependency
	33, // 9: pulumirpc.RunRequest.config:type_name -> pulumirpc.RunRequest.ConfigEntry
	41, // 10: pulumirpc.RunRequest.configPropertyMap:type_name -> google.protobuf.Struct
	1,  // 11: pulumirpc.RunRequest.info:type_name -> pulumirpc.ProgramInfo
	1,  // 12: pulumirpc.InstallDependenciesRequest.info:type_name -> pulumirpc.ProgramInfo
	1,  // 13: pulumirpc.RuntimeOptionsRequest.info:type_name -> pulumirpc.ProgramInfo
	0,  // 14: pulumirpc.RuntimeOptionPrompt.promptType:type_name -> pulumirpc.RuntimeOptionPrompt.RuntimeOptionType
	34, // 15: pulumirpc.RuntimeOptionPrompt.choices:type_name -> pulumirpc.RuntimeOptionPrompt.RuntimeOptionValue
	34, // 16: pulumirpc.RuntimeOptionPrompt.default:type_name -> pulumirpc.RuntimeOptionPrompt.RuntimeOptionValue
	16, // 17: pulumirpc.RuntimeOptionsResponse.prompts:type_name -> pulumirpc.RuntimeOptionPrompt
	1,  // 18: pulumirpc.RunPluginRequest.info:type_name -> pulumirpc.ProgramInfo
	35, // 19: pulumirpc.GenerateProgramRequest.source:type_name -> pulumirpc.GenerateProgramRequest.SourceEntry
	44, // 20: pulumirpc.GenerateProgramResponse.diagnostics:type_name -> pulumirpc.codegen.Diagnostic
	36, // 21: pulumirpc.GenerateProgramResponse.source:type_name -> pulumirpc.GenerateProgramResponse.SourceEntry
	37, // 22: pulumirpc.GenerateProjectRequest.local_dependencies:type_name -> pulumirpc.GenerateProjectRequest.LocalDependenciesEntry
	44, // 23: pulumirpc.GenerateProjectResponse.diagnostics:type_name -> pulumirpc.codegen.Diagnostic
	38, // 24: pulumirpc.GeneratePackageRequest.extra_files:type_name -> pulumirpc.GeneratePackageRequest.ExtraFilesEntry
	39, // 25: pulumirpc.GeneratePackageRequest.local_dependencies:type_name -> pulumirpc.GeneratePackageRequest.LocalDependenciesEntry
	44, // 26: pulumirpc.GeneratePackageResponse.diagnostics:type_name -> pulumirpc.codegen.Diagnostic
	1,  // 27: pulumirpc.LinkRequest.info:type_name -> pulumirpc.ProgramInfo
	40, // 28: pulumirpc.LinkRequest.packages:type_name -> pulumirpc.LinkRequest.LinkDependency
	0,  // 29: pulumirpc.RuntimeOptionPrompt.RuntimeOptionValue.promptType:type_name -> pulumirpc.RuntimeOptionPrompt.RuntimeOptionType
	43, // 30: pulumirpc.LinkRequest.LinkDependency.package:type_name -> pulumirpc.PackageDependency
	28, // 31: pulumirpc.LanguageRuntime.Handshake:input_type -> pulumirpc.LanguageHandshakeRequest
	7,  // 32: pulumirpc.LanguageRuntime.GetRequiredPlugins:input_type -> pulumirpc.GetRequiredPluginsRequest
	9,  // 33: pulumirpc.LanguageRuntime.GetRequiredPackages:input_type -> pulumirpc.GetRequiredPackagesRequest
	11, // 34: pulumirpc.LanguageRuntime.Run:input_type -> pulumirpc.RunRequest
	45, // 35: pulumirpc.LanguageRuntime.GetPluginInfo:input_type -> google.protobuf.Empty
	13, // 36: pulumirpc.LanguageRuntime.InstallDependencies:input_type -> pulumirpc.InstallDependenciesRequest
	15, // 37: pulumirpc.LanguageRuntime.RuntimeOptionsPrompts:input_type -> pulumirpc.RuntimeOptionsRequest
	2,  // 38: pulumirpc.LanguageRuntime.About:input_type -> pulumirpc.AboutRequest
	4,  // 39: pulumirpc.LanguageRuntime.GetProgramDependencies:input_type -> pulumirpc.GetProgramDependenciesRequest
	18, // 40: pulumirpc.LanguageRuntime.RunPlugin:input_type -> pulumirpc.RunPluginRequest
	20, // 41: pulumirpc.LanguageRuntime.GenerateProgram:input_type -> pulumirpc.GenerateProgramRequest
	22, // 42: pulumirpc.LanguageRuntime.GenerateProject:input_type -> pulumirpc.GenerateProjectRequest
	24, // 43: pulumirpc.LanguageRuntime.GeneratePackage:input_type -> pulumirpc.GeneratePackageRequest
	26, // 44: pulumirpc.LanguageRuntime.Pack:input_type -> pulumirpc.PackRequest
	30, // 45: pulumirpc.LanguageRuntime.Link:input_type -> pulumirpc.LinkRequest
	45, // 46: pulumirpc.LanguageRuntime.Cancel:input_type -> google.protobuf.Empty
	29, // 47: pulumirpc.LanguageRuntime.Handshake:output_type -> pulumirpc.LanguageHandshakeResponse
	8,  // 48: pulumirpc.LanguageRuntime.GetRequiredPlugins:output_type -> pulumirpc.GetRequiredPluginsResponse
	10, // 49: pulumirpc.LanguageRuntime.GetRequiredPackages:output_type -> pulumirpc.GetRequiredPackagesResponse
	12, // 50: pulumirpc.LanguageRuntime.Run:output_type -> pulumirpc.RunResponse
	46, // 51: pulumirpc.LanguageRuntime.GetPluginInfo:output_type -> pulumirpc.PluginInfo
	14, // 52: pulumirpc.LanguageRuntime.InstallDependencies:output_type -> pulumirpc.InstallDependenciesResponse
	17, // 53: pulumirpc.LanguageRuntime.RuntimeOptionsPrompts:output_type -> pulumirpc.RuntimeOptionsResponse
	3,  // 54: pulumirpc.LanguageRuntime.About:output_type -> pulumirpc.AboutResponse
	6,  // 55: pulumirpc.LanguageRuntime.GetProgramDependencies:output_type -> pulumirpc.GetProgramDependenciesResponse
	19, // 56: pulumirpc.LanguageRuntime.RunPlugin:output_type -> pulumirpc.RunPluginResponse
	21, // 57: pulumirpc.LanguageRuntime.GenerateProgram:output_type -> pulumirpc.GenerateProgramResponse
	23, // 58: pulumirpc.LanguageRuntime.GenerateProject:output_type -> pulumirpc.GenerateProjectResponse
	25, // 59: pulumirpc.LanguageRuntime.GeneratePackage:output_type -> pulumirpc.GeneratePackageResponse
	27, // 60: pulumirpc.LanguageRuntime.Pack:output_type -> pulumirpc.PackResponse
	31, // 61: pulumirpc.LanguageRuntime.Link:output_type -> pulumirpc.LinkResponse
	45, // 62: pulumirpc.LanguageRuntime.Cancel:output_type -> google.protobuf.Empty
	47, // [47:63] is the sub-list for method output_type
	31, // [31:47] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_pulumi_language_proto_init() }
func file_pulumi_language_proto_init() {
	if File_pulumi_language_proto != nil {
		return
	}
	file_pulumi_plugin_proto_init()
	file_pulumi_language_proto_msgTypes[18].OneofWrappers = []any{
		(*RunPluginResponse_Stdout)(nil),
		(*RunPluginResponse_Stderr)(nil),
		(*RunPluginResponse_Exitcode)(nil),
	}
	file_pulumi_language_proto_msgTypes[27].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pulumi_language_proto_rawDesc), len(file_pulumi_language_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pulumi_language_proto_goTypes,
		DependencyIndexes: file_pulumi_language_proto_depIdxs,
		EnumInfos:         file_pulumi_language_proto_enumTypes,
		MessageInfos:      file_pulumi_language_proto_msgTypes,
	}.Build()
	File_pulumi_language_proto = out.File
	file_pulumi_language_proto_goTypes = nil
	file_pulumi_language_proto_depIdxs = nil
}
