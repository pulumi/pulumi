// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.5
// source: pulumi/analyzer.proto

package pulumirpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnforcementLevel indicates the severity of a policy violation.
type EnforcementLevel int32

const (
	EnforcementLevel_ADVISORY  EnforcementLevel = 0 // Displayed to users, but does not block deployment.
	EnforcementLevel_MANDATORY EnforcementLevel = 1 // Stops deployment, cannot be overridden.
	EnforcementLevel_DISABLED  EnforcementLevel = 2 // Disabled policies do not run during a deployment.
	EnforcementLevel_REMEDIATE EnforcementLevel = 3 // Remediated policies actually fixes problems instead of issuing diagnostics.
)

// Enum value maps for EnforcementLevel.
var (
	EnforcementLevel_name = map[int32]string{
		0: "ADVISORY",
		1: "MANDATORY",
		2: "DISABLED",
		3: "REMEDIATE",
	}
	EnforcementLevel_value = map[string]int32{
		"ADVISORY":  0,
		"MANDATORY": 1,
		"DISABLED":  2,
		"REMEDIATE": 3,
	}
)

func (x EnforcementLevel) Enum() *EnforcementLevel {
	p := new(EnforcementLevel)
	*p = x
	return p
}

func (x EnforcementLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnforcementLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumi_analyzer_proto_enumTypes[0].Descriptor()
}

func (EnforcementLevel) Type() protoreflect.EnumType {
	return &file_pulumi_analyzer_proto_enumTypes[0]
}

func (x EnforcementLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnforcementLevel.Descriptor instead.
func (EnforcementLevel) EnumDescriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{0}
}

// PolicyType indicates the type of a policy.
type PolicyType int32

const (
	PolicyType_POLICY_TYPE_UNKNOWN  PolicyType = 0 // Unknown policy type.
	PolicyType_POLICY_TYPE_RESOURCE PolicyType = 1 // A policy that validates a resource.
	PolicyType_POLICY_TYPE_STACK    PolicyType = 2 // A policy that validates a stack.
)

// Enum value maps for PolicyType.
var (
	PolicyType_name = map[int32]string{
		0: "POLICY_TYPE_UNKNOWN",
		1: "POLICY_TYPE_RESOURCE",
		2: "POLICY_TYPE_STACK",
	}
	PolicyType_value = map[string]int32{
		"POLICY_TYPE_UNKNOWN":  0,
		"POLICY_TYPE_RESOURCE": 1,
		"POLICY_TYPE_STACK":    2,
	}
)

func (x PolicyType) Enum() *PolicyType {
	p := new(PolicyType)
	*p = x
	return p
}

func (x PolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumi_analyzer_proto_enumTypes[1].Descriptor()
}

func (PolicyType) Type() protoreflect.EnumType {
	return &file_pulumi_analyzer_proto_enumTypes[1]
}

func (x PolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyType.Descriptor instead.
func (PolicyType) EnumDescriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{1}
}

// PolicySeverity indicates the severity of a policy.
type PolicySeverity int32

const (
	PolicySeverity_POLICY_SEVERITY_UNSPECIFIED PolicySeverity = 0 // Unspecified severity.
	PolicySeverity_POLICY_SEVERITY_LOW         PolicySeverity = 1 // Low severity.
	PolicySeverity_POLICY_SEVERITY_MEDIUM      PolicySeverity = 2 // Medium severity.
	PolicySeverity_POLICY_SEVERITY_HIGH        PolicySeverity = 3 // High severity.
	PolicySeverity_POLICY_SEVERITY_CRITICAL    PolicySeverity = 4 // Critical severity.
)

// Enum value maps for PolicySeverity.
var (
	PolicySeverity_name = map[int32]string{
		0: "POLICY_SEVERITY_UNSPECIFIED",
		1: "POLICY_SEVERITY_LOW",
		2: "POLICY_SEVERITY_MEDIUM",
		3: "POLICY_SEVERITY_HIGH",
		4: "POLICY_SEVERITY_CRITICAL",
	}
	PolicySeverity_value = map[string]int32{
		"POLICY_SEVERITY_UNSPECIFIED": 0,
		"POLICY_SEVERITY_LOW":         1,
		"POLICY_SEVERITY_MEDIUM":      2,
		"POLICY_SEVERITY_HIGH":        3,
		"POLICY_SEVERITY_CRITICAL":    4,
	}
)

func (x PolicySeverity) Enum() *PolicySeverity {
	p := new(PolicySeverity)
	*p = x
	return p
}

func (x PolicySeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicySeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumi_analyzer_proto_enumTypes[2].Descriptor()
}

func (PolicySeverity) Type() protoreflect.EnumType {
	return &file_pulumi_analyzer_proto_enumTypes[2]
}

func (x PolicySeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicySeverity.Descriptor instead.
func (PolicySeverity) EnumDescriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{2}
}

// `AnalyzerStackConfigureRequest` is the message for the stack configuration of the stack being analyzed.
type AnalyzerStackConfigureRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The stack name being analyzed.
	Stack string `protobuf:"bytes,1,opt,name=stack,proto3" json:"stack,omitempty"`
	// The project name of the stack being analyzed.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// The organization name of the stack being analyzed.
	Organization string `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	// True if this is a preview/dry run.
	DryRun bool `protobuf:"varint,4,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// A list of configuration keys whose values should be treated as secrets.
	ConfigSecretKeys []string `protobuf:"bytes,6,rep,name=config_secret_keys,json=configSecretKeys,proto3" json:"config_secret_keys,omitempty"`
	// The configuration of the stack being analyzed.
	Config map[string]string `protobuf:"bytes,7,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags for the current stack.
	Tags          map[string]string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerStackConfigureRequest) Reset() {
	*x = AnalyzerStackConfigureRequest{}
	mi := &file_pulumi_analyzer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerStackConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerStackConfigureRequest) ProtoMessage() {}

func (x *AnalyzerStackConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerStackConfigureRequest.ProtoReflect.Descriptor instead.
func (*AnalyzerStackConfigureRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzerStackConfigureRequest) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

func (x *AnalyzerStackConfigureRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *AnalyzerStackConfigureRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *AnalyzerStackConfigureRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *AnalyzerStackConfigureRequest) GetConfigSecretKeys() []string {
	if x != nil {
		return x.ConfigSecretKeys
	}
	return nil
}

func (x *AnalyzerStackConfigureRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AnalyzerStackConfigureRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// `AnalyzerStackConfigureResponse` is the type of responses sent by a [](pulumirpc.Analyzer.ConfigureStack) call.
type AnalyzerStackConfigureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerStackConfigureResponse) Reset() {
	*x = AnalyzerStackConfigureResponse{}
	mi := &file_pulumi_analyzer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerStackConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerStackConfigureResponse) ProtoMessage() {}

func (x *AnalyzerStackConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerStackConfigureResponse.ProtoReflect.Descriptor instead.
func (*AnalyzerStackConfigureResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{1}
}

// `AnalyzerHandshakeRequest` is the type of requests sent as part of a [](pulumirpc.Analyzer.Handshake) call.
type AnalyzerHandshakeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The gRPC address of the engine handshaking with the analyzer. At a minimum, this address will expose an instance
	// of the [](pulumirpc.Engine) service.
	EngineAddress string `protobuf:"bytes,1,opt,name=engine_address,json=engineAddress,proto3" json:"engine_address,omitempty"`
	// A *root directory* where the analyzer's binary, `PulumiPolicy.yaml`, or other identifying source code is located.
	// In the event that the analyzer is *not* being booted by the engine (e.g. in the case that the engine has been
	// asked to attach to an existing running analyzer instance via a host/port number), this field will be empty.
	RootDirectory *string `protobuf:"bytes,2,opt,name=root_directory,json=rootDirectory,proto3,oneof" json:"root_directory,omitempty"`
	// A *program directory* in which the analyzer should execute. This is generally a subdirectory of the root
	// directory, though this is not required. In the event that the analyzer is *not* being booted by the engine (e.g.
	// in the case that the engine has been asked to attach to an existing running analyzer instance via a host/port
	// number), this field will be empty.
	ProgramDirectory *string `protobuf:"bytes,3,opt,name=program_directory,json=programDirectory,proto3,oneof" json:"program_directory,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AnalyzerHandshakeRequest) Reset() {
	*x = AnalyzerHandshakeRequest{}
	mi := &file_pulumi_analyzer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerHandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerHandshakeRequest) ProtoMessage() {}

func (x *AnalyzerHandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerHandshakeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzerHandshakeRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{2}
}

func (x *AnalyzerHandshakeRequest) GetEngineAddress() string {
	if x != nil {
		return x.EngineAddress
	}
	return ""
}

func (x *AnalyzerHandshakeRequest) GetRootDirectory() string {
	if x != nil && x.RootDirectory != nil {
		return *x.RootDirectory
	}
	return ""
}

func (x *AnalyzerHandshakeRequest) GetProgramDirectory() string {
	if x != nil && x.ProgramDirectory != nil {
		return *x.ProgramDirectory
	}
	return ""
}

// `AnalyzerHandshakeResponse` is the type of responses sent by a [](pulumirpc.Analyzer.Handshake) call.
type AnalyzerHandshakeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerHandshakeResponse) Reset() {
	*x = AnalyzerHandshakeResponse{}
	mi := &file_pulumi_analyzer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerHandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerHandshakeResponse) ProtoMessage() {}

func (x *AnalyzerHandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerHandshakeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzerHandshakeResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{3}
}

type AnalyzeRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          string                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`             // the type token of the resource.
	Properties    *structpb.Struct          `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"` // the full properties to use for validation.
	Urn           string                    `protobuf:"bytes,3,opt,name=urn,proto3" json:"urn,omitempty"`               // the URN of the resource.
	Name          string                    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             // the name for the resource's URN.
	Options       *AnalyzerResourceOptions  `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`       // the resource options.
	Provider      *AnalyzerProviderResource `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`     // the resource's provider.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRequest) Reset() {
	*x = AnalyzeRequest{}
	mi := &file_pulumi_analyzer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest) ProtoMessage() {}

func (x *AnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{4}
}

func (x *AnalyzeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnalyzeRequest) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AnalyzeRequest) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *AnalyzeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzeRequest) GetOptions() *AnalyzerResourceOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AnalyzeRequest) GetProvider() *AnalyzerProviderResource {
	if x != nil {
		return x.Provider
	}
	return nil
}

// AnalyzerResource defines the view of a Pulumi-managed resource as sent to Analyzers. The properties
// of the resource are specific to the type of analysis being performed. See the Analyzer
// service definition for more information.
type AnalyzerResource struct {
	state                protoimpl.MessageState                   `protogen:"open.v1"`
	Type                 string                                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                                                                                           // the type token of the resource.
	Properties           *structpb.Struct                         `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`                                                                                               // the full properties to use for validation.
	Urn                  string                                   `protobuf:"bytes,3,opt,name=urn,proto3" json:"urn,omitempty"`                                                                                                             // the URN of the resource.
	Name                 string                                   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                                                           // the name for the resource's URN.
	Options              *AnalyzerResourceOptions                 `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`                                                                                                     // the resource options.
	Provider             *AnalyzerProviderResource                `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`                                                                                                   // the resource's provider.
	Parent               string                                   `protobuf:"bytes,7,opt,name=parent,proto3" json:"parent,omitempty"`                                                                                                       // an optional parent URN that this child resource belongs to.
	Dependencies         []string                                 `protobuf:"bytes,8,rep,name=dependencies,proto3" json:"dependencies,omitempty"`                                                                                           // a list of URNs that this resource depends on.
	PropertyDependencies map[string]*AnalyzerPropertyDependencies `protobuf:"bytes,9,rep,name=propertyDependencies,proto3" json:"propertyDependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // a map from property keys to the dependencies of the property.
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AnalyzerResource) Reset() {
	*x = AnalyzerResource{}
	mi := &file_pulumi_analyzer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerResource) ProtoMessage() {}

func (x *AnalyzerResource) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerResource.ProtoReflect.Descriptor instead.
func (*AnalyzerResource) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{5}
}

func (x *AnalyzerResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnalyzerResource) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AnalyzerResource) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *AnalyzerResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzerResource) GetOptions() *AnalyzerResourceOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AnalyzerResource) GetProvider() *AnalyzerProviderResource {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *AnalyzerResource) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *AnalyzerResource) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *AnalyzerResource) GetPropertyDependencies() map[string]*AnalyzerPropertyDependencies {
	if x != nil {
		return x.PropertyDependencies
	}
	return nil
}

// AnalyzerResourceOptions defines the options associated with a resource.
type AnalyzerResourceOptions struct {
	state                      protoimpl.MessageState                  `protogen:"open.v1"`
	Protect                    bool                                    `protobuf:"varint,1,opt,name=protect,proto3" json:"protect,omitempty"`                                       // true if the resource should be marked protected.
	IgnoreChanges              []string                                `protobuf:"bytes,2,rep,name=ignoreChanges,proto3" json:"ignoreChanges,omitempty"`                            // a list of property names to ignore during changes.
	DeleteBeforeReplace        bool                                    `protobuf:"varint,3,opt,name=deleteBeforeReplace,proto3" json:"deleteBeforeReplace,omitempty"`               // true if this resource should be deleted before replacement.
	DeleteBeforeReplaceDefined bool                                    `protobuf:"varint,4,opt,name=deleteBeforeReplaceDefined,proto3" json:"deleteBeforeReplaceDefined,omitempty"` // true if the deleteBeforeReplace property should be treated as defined even if it is false.
	AdditionalSecretOutputs    []string                                `protobuf:"bytes,5,rep,name=additionalSecretOutputs,proto3" json:"additionalSecretOutputs,omitempty"`        // a list of output properties that should also be treated as secret, in addition to ones we detect.
	Aliases                    []string                                `protobuf:"bytes,6,rep,name=aliases,proto3" json:"aliases,omitempty"`                                        // a list of additional URNs that shoud be considered the same.
	CustomTimeouts             *AnalyzerResourceOptions_CustomTimeouts `protobuf:"bytes,7,opt,name=customTimeouts,proto3" json:"customTimeouts,omitempty"`                          // a config block that will be used to configure timeouts for CRUD operations.
	Parent                     string                                  `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`                                          // an optional parent URN that this child resource belongs to.
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AnalyzerResourceOptions) Reset() {
	*x = AnalyzerResourceOptions{}
	mi := &file_pulumi_analyzer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerResourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerResourceOptions) ProtoMessage() {}

func (x *AnalyzerResourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerResourceOptions.ProtoReflect.Descriptor instead.
func (*AnalyzerResourceOptions) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{6}
}

func (x *AnalyzerResourceOptions) GetProtect() bool {
	if x != nil {
		return x.Protect
	}
	return false
}

func (x *AnalyzerResourceOptions) GetIgnoreChanges() []string {
	if x != nil {
		return x.IgnoreChanges
	}
	return nil
}

func (x *AnalyzerResourceOptions) GetDeleteBeforeReplace() bool {
	if x != nil {
		return x.DeleteBeforeReplace
	}
	return false
}

func (x *AnalyzerResourceOptions) GetDeleteBeforeReplaceDefined() bool {
	if x != nil {
		return x.DeleteBeforeReplaceDefined
	}
	return false
}

func (x *AnalyzerResourceOptions) GetAdditionalSecretOutputs() []string {
	if x != nil {
		return x.AdditionalSecretOutputs
	}
	return nil
}

func (x *AnalyzerResourceOptions) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *AnalyzerResourceOptions) GetCustomTimeouts() *AnalyzerResourceOptions_CustomTimeouts {
	if x != nil {
		return x.CustomTimeouts
	}
	return nil
}

func (x *AnalyzerResourceOptions) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// AnalyzerProviderResource provides information about a resource's provider.
type AnalyzerProviderResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`             // the type token of the resource.
	Properties    *structpb.Struct       `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"` // the full properties to use for validation.
	Urn           string                 `protobuf:"bytes,3,opt,name=urn,proto3" json:"urn,omitempty"`               // the URN of the resource.
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             // the name for the resource's URN.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerProviderResource) Reset() {
	*x = AnalyzerProviderResource{}
	mi := &file_pulumi_analyzer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerProviderResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerProviderResource) ProtoMessage() {}

func (x *AnalyzerProviderResource) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerProviderResource.ProtoReflect.Descriptor instead.
func (*AnalyzerProviderResource) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{7}
}

func (x *AnalyzerProviderResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnalyzerProviderResource) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AnalyzerProviderResource) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *AnalyzerProviderResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// AnalyzerPropertyDependencies describes the resources that a particular property depends on.
type AnalyzerPropertyDependencies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Urns          []string               `protobuf:"bytes,1,rep,name=urns,proto3" json:"urns,omitempty"` // A list of URNs this property depends on.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerPropertyDependencies) Reset() {
	*x = AnalyzerPropertyDependencies{}
	mi := &file_pulumi_analyzer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerPropertyDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerPropertyDependencies) ProtoMessage() {}

func (x *AnalyzerPropertyDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerPropertyDependencies.ProtoReflect.Descriptor instead.
func (*AnalyzerPropertyDependencies) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{8}
}

func (x *AnalyzerPropertyDependencies) GetUrns() []string {
	if x != nil {
		return x.Urns
	}
	return nil
}

type AnalyzeStackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []*AnalyzerResource    `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeStackRequest) Reset() {
	*x = AnalyzeStackRequest{}
	mi := &file_pulumi_analyzer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeStackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeStackRequest) ProtoMessage() {}

func (x *AnalyzeStackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeStackRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeStackRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeStackRequest) GetResources() []*AnalyzerResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type AnalyzeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diagnostics   []*AnalyzeDiagnostic   `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`                          // information about policy violations.
	NotApplicable []*PolicyNotApplicable `protobuf:"bytes,3,rep,name=not_applicable,json=notApplicable,proto3" json:"not_applicable,omitempty"` // information about policies that were not applicable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	mi := &file_pulumi_analyzer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{10}
}

func (x *AnalyzeResponse) GetDiagnostics() []*AnalyzeDiagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *AnalyzeResponse) GetNotApplicable() []*PolicyNotApplicable {
	if x != nil {
		return x.NotApplicable
	}
	return nil
}

type AnalyzeDiagnostic struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PolicyName        string                 `protobuf:"bytes,1,opt,name=policyName,proto3" json:"policyName,omitempty"`                                              // Name of the violated policy.
	PolicyPackName    string                 `protobuf:"bytes,2,opt,name=policyPackName,proto3" json:"policyPackName,omitempty"`                                      // Name of the policy pack the policy is in.
	PolicyPackVersion string                 `protobuf:"bytes,3,opt,name=policyPackVersion,proto3" json:"policyPackVersion,omitempty"`                                // Version of the policy pack.
	Description       string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                            // Description of policy rule. e.g., "encryption enabled."
	Message           string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                                    // Message to display on policy violation, e.g., remediation steps.
	EnforcementLevel  EnforcementLevel       `protobuf:"varint,7,opt,name=enforcementLevel,proto3,enum=pulumirpc.EnforcementLevel" json:"enforcementLevel,omitempty"` // Enforcement level of the policy violation.
	Urn               string                 `protobuf:"bytes,8,opt,name=urn,proto3" json:"urn,omitempty"`                                                            // URN of the resource that violates the policy.
	Severity          PolicySeverity         `protobuf:"varint,9,opt,name=severity,proto3,enum=pulumirpc.PolicySeverity" json:"severity,omitempty"`                   // Severity of the policy violation.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AnalyzeDiagnostic) Reset() {
	*x = AnalyzeDiagnostic{}
	mi := &file_pulumi_analyzer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeDiagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeDiagnostic) ProtoMessage() {}

func (x *AnalyzeDiagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeDiagnostic.ProtoReflect.Descriptor instead.
func (*AnalyzeDiagnostic) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{11}
}

func (x *AnalyzeDiagnostic) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetPolicyPackName() string {
	if x != nil {
		return x.PolicyPackName
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetPolicyPackVersion() string {
	if x != nil {
		return x.PolicyPackVersion
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetEnforcementLevel() EnforcementLevel {
	if x != nil {
		return x.EnforcementLevel
	}
	return EnforcementLevel_ADVISORY
}

func (x *AnalyzeDiagnostic) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *AnalyzeDiagnostic) GetSeverity() PolicySeverity {
	if x != nil {
		return x.Severity
	}
	return PolicySeverity_POLICY_SEVERITY_UNSPECIFIED
}

// Remediation is a single resource remediation result.
type Remediation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PolicyName        string                 `protobuf:"bytes,1,opt,name=policyName,proto3" json:"policyName,omitempty"`               // Name of the policy that performed the remediation.
	PolicyPackName    string                 `protobuf:"bytes,2,opt,name=policyPackName,proto3" json:"policyPackName,omitempty"`       // Name of the policy pack the transform is in.
	PolicyPackVersion string                 `protobuf:"bytes,3,opt,name=policyPackVersion,proto3" json:"policyPackVersion,omitempty"` // Version of the policy pack.
	Description       string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`             // Description of transform rule. e.g., "auto-tag resources."
	Properties        *structpb.Struct       `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`               // the transformed properties to use.
	Diagnostic        string                 `protobuf:"bytes,6,opt,name=diagnostic,proto3" json:"diagnostic,omitempty"`               // an optional warning diagnostic to emit, if a transform failed.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Remediation) Reset() {
	*x = Remediation{}
	mi := &file_pulumi_analyzer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Remediation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remediation) ProtoMessage() {}

func (x *Remediation) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remediation.ProtoReflect.Descriptor instead.
func (*Remediation) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{12}
}

func (x *Remediation) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Remediation) GetPolicyPackName() string {
	if x != nil {
		return x.PolicyPackName
	}
	return ""
}

func (x *Remediation) GetPolicyPackVersion() string {
	if x != nil {
		return x.PolicyPackVersion
	}
	return ""
}

func (x *Remediation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Remediation) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Remediation) GetDiagnostic() string {
	if x != nil {
		return x.Diagnostic
	}
	return ""
}

// RemediateResponse contains a sequence of remediations applied, in order.
type RemediateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Remediations  []*Remediation         `protobuf:"bytes,1,rep,name=remediations,proto3" json:"remediations,omitempty"`                        // the list of remediations that were applied.
	NotApplicable []*PolicyNotApplicable `protobuf:"bytes,2,rep,name=not_applicable,json=notApplicable,proto3" json:"not_applicable,omitempty"` // information about policies that were not applicable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemediateResponse) Reset() {
	*x = RemediateResponse{}
	mi := &file_pulumi_analyzer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemediateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemediateResponse) ProtoMessage() {}

func (x *RemediateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemediateResponse.ProtoReflect.Descriptor instead.
func (*RemediateResponse) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{13}
}

func (x *RemediateResponse) GetRemediations() []*Remediation {
	if x != nil {
		return x.Remediations
	}
	return nil
}

func (x *RemediateResponse) GetNotApplicable() []*PolicyNotApplicable {
	if x != nil {
		return x.NotApplicable
	}
	return nil
}

// AnalyzerInfo provides metadata about a PolicyPack inside an analyzer.
type AnalyzerInfo struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	Name           string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                             // Name of the PolicyPack.
	DisplayName    string                   `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`                                                                               // Pretty name for the PolicyPack.
	Policies       []*PolicyInfo            `protobuf:"bytes,3,rep,name=policies,proto3" json:"policies,omitempty"`                                                                                     // Metadata about policies contained in PolicyPack.
	Version        string                   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                                                                                       // Version of the Policy Pack.
	SupportsConfig bool                     `protobuf:"varint,5,opt,name=supportsConfig,proto3" json:"supportsConfig,omitempty"`                                                                        // Whether the Policy Pack supports config.
	InitialConfig  map[string]*PolicyConfig `protobuf:"bytes,6,rep,name=initialConfig,proto3" json:"initialConfig,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of policy name to config.
	Description    string                   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                                               // Description of the policy pack.
	Readme         string                   `protobuf:"bytes,8,opt,name=readme,proto3" json:"readme,omitempty"`                                                                                         // README text for the policy pack.
	Provider       string                   `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`                                                                                     // Cloud provider/platform associated with the policy pack.
	Tags           []string                 `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                            // Tags for this policy pack.
	Repository     string                   `protobuf:"bytes,11,opt,name=repository,proto3" json:"repository,omitempty"`                                                                                // A URL to the repository where the policy pack is defined.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AnalyzerInfo) Reset() {
	*x = AnalyzerInfo{}
	mi := &file_pulumi_analyzer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerInfo) ProtoMessage() {}

func (x *AnalyzerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerInfo.ProtoReflect.Descriptor instead.
func (*AnalyzerInfo) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{14}
}

func (x *AnalyzerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzerInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AnalyzerInfo) GetPolicies() []*PolicyInfo {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *AnalyzerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AnalyzerInfo) GetSupportsConfig() bool {
	if x != nil {
		return x.SupportsConfig
	}
	return false
}

func (x *AnalyzerInfo) GetInitialConfig() map[string]*PolicyConfig {
	if x != nil {
		return x.InitialConfig
	}
	return nil
}

func (x *AnalyzerInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnalyzerInfo) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *AnalyzerInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AnalyzerInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AnalyzerInfo) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

// PolicyInfo provides metadata about a policy within a Policy Pack.
type PolicyInfo struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Name             string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                          // Name of the policy.
	DisplayName      string                     `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`                                            // Pretty name for the policy.
	Description      string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                            // Description of policy rule. e.g., "encryption enabled."
	Message          string                     `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                                                    // Message to display on policy violation, e.g., remediation steps.
	EnforcementLevel EnforcementLevel           `protobuf:"varint,5,opt,name=enforcementLevel,proto3,enum=pulumirpc.EnforcementLevel" json:"enforcementLevel,omitempty"` // Severity of the policy violation.
	ConfigSchema     *PolicyConfigSchema        `protobuf:"bytes,6,opt,name=configSchema,proto3" json:"configSchema,omitempty"`                                          // Config schema for the policy.
	PolicyType       PolicyType                 `protobuf:"varint,7,opt,name=policy_type,json=policyType,proto3,enum=pulumirpc.PolicyType" json:"policy_type,omitempty"` // Type of the policy.
	Severity         PolicySeverity             `protobuf:"varint,8,opt,name=severity,proto3,enum=pulumirpc.PolicySeverity" json:"severity,omitempty"`                   // Severity of the policy.
	Framework        *PolicyComplianceFramework `protobuf:"bytes,9,opt,name=framework,proto3" json:"framework,omitempty"`                                                // Compliance framework that this policy belongs to.
	Tags             []string                   `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`                                                         // Tags associated with the policy.
	RemediationSteps string                     `protobuf:"bytes,11,opt,name=remediation_steps,json=remediationSteps,proto3" json:"remediation_steps,omitempty"`         // A description of the steps to take to remediate a policy violation.
	Url              string                     `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`                                                           // A URL to more information about the policy.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PolicyInfo) Reset() {
	*x = PolicyInfo{}
	mi := &file_pulumi_analyzer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyInfo) ProtoMessage() {}

func (x *PolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyInfo.ProtoReflect.Descriptor instead.
func (*PolicyInfo) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{15}
}

func (x *PolicyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PolicyInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PolicyInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PolicyInfo) GetEnforcementLevel() EnforcementLevel {
	if x != nil {
		return x.EnforcementLevel
	}
	return EnforcementLevel_ADVISORY
}

func (x *PolicyInfo) GetConfigSchema() *PolicyConfigSchema {
	if x != nil {
		return x.ConfigSchema
	}
	return nil
}

func (x *PolicyInfo) GetPolicyType() PolicyType {
	if x != nil {
		return x.PolicyType
	}
	return PolicyType_POLICY_TYPE_UNKNOWN
}

func (x *PolicyInfo) GetSeverity() PolicySeverity {
	if x != nil {
		return x.Severity
	}
	return PolicySeverity_POLICY_SEVERITY_UNSPECIFIED
}

func (x *PolicyInfo) GetFramework() *PolicyComplianceFramework {
	if x != nil {
		return x.Framework
	}
	return nil
}

func (x *PolicyInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PolicyInfo) GetRemediationSteps() string {
	if x != nil {
		return x.RemediationSteps
	}
	return ""
}

func (x *PolicyInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// PolicyConfigSchema provides the schema for a policy's configuration.
type PolicyConfigSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Properties    *structpb.Struct       `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"` // JSON schema for each property.
	Required      []string               `protobuf:"bytes,2,rep,name=required,proto3" json:"required,omitempty"`     // Required properties.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyConfigSchema) Reset() {
	*x = PolicyConfigSchema{}
	mi := &file_pulumi_analyzer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyConfigSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyConfigSchema) ProtoMessage() {}

func (x *PolicyConfigSchema) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyConfigSchema.ProtoReflect.Descriptor instead.
func (*PolicyConfigSchema) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{16}
}

func (x *PolicyConfigSchema) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PolicyConfigSchema) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

// PolicyConfig provides configuration for a policy.
type PolicyConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EnforcementLevel EnforcementLevel       `protobuf:"varint,1,opt,name=enforcementLevel,proto3,enum=pulumirpc.EnforcementLevel" json:"enforcementLevel,omitempty"` // Enforcement level of the policy.
	Properties       *structpb.Struct       `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`                                              // Configuration properties of the policy.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PolicyConfig) Reset() {
	*x = PolicyConfig{}
	mi := &file_pulumi_analyzer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyConfig) ProtoMessage() {}

func (x *PolicyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyConfig.ProtoReflect.Descriptor instead.
func (*PolicyConfig) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{17}
}

func (x *PolicyConfig) GetEnforcementLevel() EnforcementLevel {
	if x != nil {
		return x.EnforcementLevel
	}
	return EnforcementLevel_ADVISORY
}

func (x *PolicyConfig) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

// ConfigureAnalyzerRequest provides configuration information to the analyzer.
type ConfigureAnalyzerRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	PolicyConfig  map[string]*PolicyConfig `protobuf:"bytes,1,rep,name=policyConfig,proto3" json:"policyConfig,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of policy name to config.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureAnalyzerRequest) Reset() {
	*x = ConfigureAnalyzerRequest{}
	mi := &file_pulumi_analyzer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAnalyzerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAnalyzerRequest) ProtoMessage() {}

func (x *ConfigureAnalyzerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureAnalyzerRequest.ProtoReflect.Descriptor instead.
func (*ConfigureAnalyzerRequest) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigureAnalyzerRequest) GetPolicyConfig() map[string]*PolicyConfig {
	if x != nil {
		return x.PolicyConfig
	}
	return nil
}

// PolicyComplianceFramework provides information about the compliance framework that a policy belongs to.
type PolicyComplianceFramework struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // The compliance framework name.
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`             // The compliance framework version.
	Reference     string                 `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`         // The compliance framework reference.
	Specification string                 `protobuf:"bytes,4,opt,name=specification,proto3" json:"specification,omitempty"` // The compliance framework specification.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyComplianceFramework) Reset() {
	*x = PolicyComplianceFramework{}
	mi := &file_pulumi_analyzer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyComplianceFramework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyComplianceFramework) ProtoMessage() {}

func (x *PolicyComplianceFramework) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyComplianceFramework.ProtoReflect.Descriptor instead.
func (*PolicyComplianceFramework) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{19}
}

func (x *PolicyComplianceFramework) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyComplianceFramework) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PolicyComplianceFramework) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PolicyComplianceFramework) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

// PolicyNotApplicable describes a policy that was not applicable, including an optional reason why.
type PolicyNotApplicable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyName    string                 `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"` // The name of the policy that was not applicable.
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                           // An optional reason why the policy was not applicable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyNotApplicable) Reset() {
	*x = PolicyNotApplicable{}
	mi := &file_pulumi_analyzer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyNotApplicable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyNotApplicable) ProtoMessage() {}

func (x *PolicyNotApplicable) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyNotApplicable.ProtoReflect.Descriptor instead.
func (*PolicyNotApplicable) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{20}
}

func (x *PolicyNotApplicable) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *PolicyNotApplicable) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// CustomTimeouts allows a user to be able to create a set of custom timeout parameters.
type AnalyzerResourceOptions_CustomTimeouts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Create        float64                `protobuf:"fixed64,1,opt,name=create,proto3" json:"create,omitempty"` // The create resource timeout in seconds.
	Update        float64                `protobuf:"fixed64,2,opt,name=update,proto3" json:"update,omitempty"` // The update resource timeout in seconds.
	Delete        float64                `protobuf:"fixed64,3,opt,name=delete,proto3" json:"delete,omitempty"` // The delete resource timeout in seconds.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzerResourceOptions_CustomTimeouts) Reset() {
	*x = AnalyzerResourceOptions_CustomTimeouts{}
	mi := &file_pulumi_analyzer_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzerResourceOptions_CustomTimeouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzerResourceOptions_CustomTimeouts) ProtoMessage() {}

func (x *AnalyzerResourceOptions_CustomTimeouts) ProtoReflect() protoreflect.Message {
	mi := &file_pulumi_analyzer_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzerResourceOptions_CustomTimeouts.ProtoReflect.Descriptor instead.
func (*AnalyzerResourceOptions_CustomTimeouts) Descriptor() ([]byte, []int) {
	return file_pulumi_analyzer_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AnalyzerResourceOptions_CustomTimeouts) GetCreate() float64 {
	if x != nil {
		return x.Create
	}
	return 0
}

func (x *AnalyzerResourceOptions_CustomTimeouts) GetUpdate() float64 {
	if x != nil {
		return x.Update
	}
	return 0
}

func (x *AnalyzerResourceOptions_CustomTimeouts) GetDelete() float64 {
	if x != nil {
		return x.Delete
	}
	return 0
}

var File_pulumi_analyzer_proto protoreflect.FileDescriptor

const file_pulumi_analyzer_proto_rawDesc = "" +
	"\n" +
	"\x15pulumi/analyzer.proto\x12\tpulumirpc\x1a\x13pulumi/plugin.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xca\x03\n" +
	"\x1dAnalyzerStackConfigureRequest\x12\x14\n" +
	"\x05stack\x18\x01 \x01(\tR\x05stack\x12\x18\n" +
	"\aproject\x18\x02 \x01(\tR\aproject\x12\"\n" +
	"\forganization\x18\x03 \x01(\tR\forganization\x12\x17\n" +
	"\adry_run\x18\x04 \x01(\bR\x06dryRun\x12,\n" +
	"\x12config_secret_keys\x18\x06 \x03(\tR\x10configSecretKeys\x12L\n" +
	"\x06config\x18\a \x03(\v24.pulumirpc.AnalyzerStackConfigureRequest.ConfigEntryR\x06config\x12F\n" +
	"\x04tags\x18\b \x03(\v22.pulumirpc.AnalyzerStackConfigureRequest.TagsEntryR\x04tags\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x05\x10\x06\" \n" +
	"\x1eAnalyzerStackConfigureResponse\"\xc8\x01\n" +
	"\x18AnalyzerHandshakeRequest\x12%\n" +
	"\x0eengine_address\x18\x01 \x01(\tR\rengineAddress\x12*\n" +
	"\x0eroot_directory\x18\x02 \x01(\tH\x00R\rrootDirectory\x88\x01\x01\x120\n" +
	"\x11program_directory\x18\x03 \x01(\tH\x01R\x10programDirectory\x88\x01\x01B\x11\n" +
	"\x0f_root_directoryB\x14\n" +
	"\x12_program_directory\"\x1b\n" +
	"\x19AnalyzerHandshakeResponse\"\x82\x02\n" +
	"\x0eAnalyzeRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x127\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\x12\x10\n" +
	"\x03urn\x18\x03 \x01(\tR\x03urn\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12<\n" +
	"\aoptions\x18\x05 \x01(\v2\".pulumirpc.AnalyzerResourceOptionsR\aoptions\x12?\n" +
	"\bprovider\x18\x06 \x01(\v2#.pulumirpc.AnalyzerProviderResourceR\bprovider\"\x9d\x04\n" +
	"\x10AnalyzerResource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x127\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\x12\x10\n" +
	"\x03urn\x18\x03 \x01(\tR\x03urn\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12<\n" +
	"\aoptions\x18\x05 \x01(\v2\".pulumirpc.AnalyzerResourceOptionsR\aoptions\x12?\n" +
	"\bprovider\x18\x06 \x01(\v2#.pulumirpc.AnalyzerProviderResourceR\bprovider\x12\x16\n" +
	"\x06parent\x18\a \x01(\tR\x06parent\x12\"\n" +
	"\fdependencies\x18\b \x03(\tR\fdependencies\x12i\n" +
	"\x14propertyDependencies\x18\t \x03(\v25.pulumirpc.AnalyzerResource.PropertyDependenciesEntryR\x14propertyDependencies\x1ap\n" +
	"\x19PropertyDependenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.pulumirpc.AnalyzerPropertyDependenciesR\x05value:\x028\x01\"\xec\x03\n" +
	"\x17AnalyzerResourceOptions\x12\x18\n" +
	"\aprotect\x18\x01 \x01(\bR\aprotect\x12$\n" +
	"\rignoreChanges\x18\x02 \x03(\tR\rignoreChanges\x120\n" +
	"\x13deleteBeforeReplace\x18\x03 \x01(\bR\x13deleteBeforeReplace\x12>\n" +
	"\x1adeleteBeforeReplaceDefined\x18\x04 \x01(\bR\x1adeleteBeforeReplaceDefined\x128\n" +
	"\x17additionalSecretOutputs\x18\x05 \x03(\tR\x17additionalSecretOutputs\x12\x18\n" +
	"\aaliases\x18\x06 \x03(\tR\aaliases\x12Y\n" +
	"\x0ecustomTimeouts\x18\a \x01(\v21.pulumirpc.AnalyzerResourceOptions.CustomTimeoutsR\x0ecustomTimeouts\x12\x16\n" +
	"\x06parent\x18\b \x01(\tR\x06parent\x1aX\n" +
	"\x0eCustomTimeouts\x12\x16\n" +
	"\x06create\x18\x01 \x01(\x01R\x06create\x12\x16\n" +
	"\x06update\x18\x02 \x01(\x01R\x06update\x12\x16\n" +
	"\x06delete\x18\x03 \x01(\x01R\x06delete\"\x8d\x01\n" +
	"\x18AnalyzerProviderResource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x127\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\x12\x10\n" +
	"\x03urn\x18\x03 \x01(\tR\x03urn\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"2\n" +
	"\x1cAnalyzerPropertyDependencies\x12\x12\n" +
	"\x04urns\x18\x01 \x03(\tR\x04urns\"P\n" +
	"\x13AnalyzeStackRequest\x129\n" +
	"\tresources\x18\x01 \x03(\v2\x1b.pulumirpc.AnalyzerResourceR\tresources\"\x98\x01\n" +
	"\x0fAnalyzeResponse\x12>\n" +
	"\vdiagnostics\x18\x02 \x03(\v2\x1c.pulumirpc.AnalyzeDiagnosticR\vdiagnostics\x12E\n" +
	"\x0enot_applicable\x18\x03 \x03(\v2\x1e.pulumirpc.PolicyNotApplicableR\rnotApplicable\"\xe3\x02\n" +
	"\x11AnalyzeDiagnostic\x12\x1e\n" +
	"\n" +
	"policyName\x18\x01 \x01(\tR\n" +
	"policyName\x12&\n" +
	"\x0epolicyPackName\x18\x02 \x01(\tR\x0epolicyPackName\x12,\n" +
	"\x11policyPackVersion\x18\x03 \x01(\tR\x11policyPackVersion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12G\n" +
	"\x10enforcementLevel\x18\a \x01(\x0e2\x1b.pulumirpc.EnforcementLevelR\x10enforcementLevel\x12\x10\n" +
	"\x03urn\x18\b \x01(\tR\x03urn\x125\n" +
	"\bseverity\x18\t \x01(\x0e2\x19.pulumirpc.PolicySeverityR\bseverityJ\x04\b\x06\x10\aR\x04tags\"\xfe\x01\n" +
	"\vRemediation\x12\x1e\n" +
	"\n" +
	"policyName\x18\x01 \x01(\tR\n" +
	"policyName\x12&\n" +
	"\x0epolicyPackName\x18\x02 \x01(\tR\x0epolicyPackName\x12,\n" +
	"\x11policyPackVersion\x18\x03 \x01(\tR\x11policyPackVersion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x127\n" +
	"\n" +
	"properties\x18\x05 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\x12\x1e\n" +
	"\n" +
	"diagnostic\x18\x06 \x01(\tR\n" +
	"diagnostic\"\x96\x01\n" +
	"\x11RemediateResponse\x12:\n" +
	"\fremediations\x18\x01 \x03(\v2\x16.pulumirpc.RemediationR\fremediations\x12E\n" +
	"\x0enot_applicable\x18\x02 \x03(\v2\x1e.pulumirpc.PolicyNotApplicableR\rnotApplicable\"\xf0\x03\n" +
	"\fAnalyzerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdisplayName\x18\x02 \x01(\tR\vdisplayName\x121\n" +
	"\bpolicies\x18\x03 \x03(\v2\x15.pulumirpc.PolicyInfoR\bpolicies\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12&\n" +
	"\x0esupportsConfig\x18\x05 \x01(\bR\x0esupportsConfig\x12P\n" +
	"\rinitialConfig\x18\x06 \x03(\v2*.pulumirpc.AnalyzerInfo.InitialConfigEntryR\rinitialConfig\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x16\n" +
	"\x06readme\x18\b \x01(\tR\x06readme\x12\x1a\n" +
	"\bprovider\x18\t \x01(\tR\bprovider\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"repository\x18\v \x01(\tR\n" +
	"repository\x1aY\n" +
	"\x12InitialConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.pulumirpc.PolicyConfigR\x05value:\x028\x01\"\x90\x04\n" +
	"\n" +
	"PolicyInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdisplayName\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12G\n" +
	"\x10enforcementLevel\x18\x05 \x01(\x0e2\x1b.pulumirpc.EnforcementLevelR\x10enforcementLevel\x12A\n" +
	"\fconfigSchema\x18\x06 \x01(\v2\x1d.pulumirpc.PolicyConfigSchemaR\fconfigSchema\x126\n" +
	"\vpolicy_type\x18\a \x01(\x0e2\x15.pulumirpc.PolicyTypeR\n" +
	"policyType\x125\n" +
	"\bseverity\x18\b \x01(\x0e2\x19.pulumirpc.PolicySeverityR\bseverity\x12B\n" +
	"\tframework\x18\t \x01(\v2$.pulumirpc.PolicyComplianceFrameworkR\tframework\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12+\n" +
	"\x11remediation_steps\x18\v \x01(\tR\x10remediationSteps\x12\x10\n" +
	"\x03url\x18\f \x01(\tR\x03url\"i\n" +
	"\x12PolicyConfigSchema\x127\n" +
	"\n" +
	"properties\x18\x01 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\x12\x1a\n" +
	"\brequired\x18\x02 \x03(\tR\brequired\"\x90\x01\n" +
	"\fPolicyConfig\x12G\n" +
	"\x10enforcementLevel\x18\x01 \x01(\x0e2\x1b.pulumirpc.EnforcementLevelR\x10enforcementLevel\x127\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"properties\"\xcf\x01\n" +
	"\x18ConfigureAnalyzerRequest\x12Y\n" +
	"\fpolicyConfig\x18\x01 \x03(\v25.pulumirpc.ConfigureAnalyzerRequest.PolicyConfigEntryR\fpolicyConfig\x1aX\n" +
	"\x11PolicyConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.pulumirpc.PolicyConfigR\x05value:\x028\x01\"\x8d\x01\n" +
	"\x19PolicyComplianceFramework\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\treference\x18\x03 \x01(\tR\treference\x12$\n" +
	"\rspecification\x18\x04 \x01(\tR\rspecification\"N\n" +
	"\x13PolicyNotApplicable\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason*L\n" +
	"\x10EnforcementLevel\x12\f\n" +
	"\bADVISORY\x10\x00\x12\r\n" +
	"\tMANDATORY\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\x12\r\n" +
	"\tREMEDIATE\x10\x03*V\n" +
	"\n" +
	"PolicyType\x12\x17\n" +
	"\x13POLICY_TYPE_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14POLICY_TYPE_RESOURCE\x10\x01\x12\x15\n" +
	"\x11POLICY_TYPE_STACK\x10\x02*\x9e\x01\n" +
	"\x0ePolicySeverity\x12\x1f\n" +
	"\x1bPOLICY_SEVERITY_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13POLICY_SEVERITY_LOW\x10\x01\x12\x1a\n" +
	"\x16POLICY_SEVERITY_MEDIUM\x10\x02\x12\x18\n" +
	"\x14POLICY_SEVERITY_HIGH\x10\x03\x12\x1c\n" +
	"\x18POLICY_SEVERITY_CRITICAL\x10\x042\xb7\x05\n" +
	"\bAnalyzer\x12B\n" +
	"\aAnalyze\x12\x19.pulumirpc.AnalyzeRequest\x1a\x1a.pulumirpc.AnalyzeResponse\"\x00\x12L\n" +
	"\fAnalyzeStack\x12\x1e.pulumirpc.AnalyzeStackRequest\x1a\x1a.pulumirpc.AnalyzeResponse\"\x00\x12F\n" +
	"\tRemediate\x12\x19.pulumirpc.AnalyzeRequest\x1a\x1c.pulumirpc.RemediateResponse\"\x00\x12D\n" +
	"\x0fGetAnalyzerInfo\x12\x16.google.protobuf.Empty\x1a\x17.pulumirpc.AnalyzerInfo\"\x00\x12@\n" +
	"\rGetPluginInfo\x12\x16.google.protobuf.Empty\x1a\x15.pulumirpc.PluginInfo\"\x00\x12J\n" +
	"\tConfigure\x12#.pulumirpc.ConfigureAnalyzerRequest\x1a\x16.google.protobuf.Empty\"\x00\x12X\n" +
	"\tHandshake\x12#.pulumirpc.AnalyzerHandshakeRequest\x1a$.pulumirpc.AnalyzerHandshakeResponse\"\x00\x12g\n" +
	"\x0eConfigureStack\x12(.pulumirpc.AnalyzerStackConfigureRequest\x1a).pulumirpc.AnalyzerStackConfigureResponse\"\x00\x12:\n" +
	"\x06Cancel\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00B4Z2github.com/pulumi/pulumi/sdk/v3/proto/go;pulumirpcb\x06proto3"

var (
	file_pulumi_analyzer_proto_rawDescOnce sync.Once
	file_pulumi_analyzer_proto_rawDescData []byte
)

func file_pulumi_analyzer_proto_rawDescGZIP() []byte {
	file_pulumi_analyzer_proto_rawDescOnce.Do(func() {
		file_pulumi_analyzer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pulumi_analyzer_proto_rawDesc), len(file_pulumi_analyzer_proto_rawDesc)))
	})
	return file_pulumi_analyzer_proto_rawDescData
}

var file_pulumi_analyzer_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pulumi_analyzer_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_pulumi_analyzer_proto_goTypes = []any{
	(EnforcementLevel)(0),                          // 0: pulumirpc.EnforcementLevel
	(PolicyType)(0),                                // 1: pulumirpc.PolicyType
	(PolicySeverity)(0),                            // 2: pulumirpc.PolicySeverity
	(*AnalyzerStackConfigureRequest)(nil),          // 3: pulumirpc.AnalyzerStackConfigureRequest
	(*AnalyzerStackConfigureResponse)(nil),         // 4: pulumirpc.AnalyzerStackConfigureResponse
	(*AnalyzerHandshakeRequest)(nil),               // 5: pulumirpc.AnalyzerHandshakeRequest
	(*AnalyzerHandshakeResponse)(nil),              // 6: pulumirpc.AnalyzerHandshakeResponse
	(*AnalyzeRequest)(nil),                         // 7: pulumirpc.AnalyzeRequest
	(*AnalyzerResource)(nil),                       // 8: pulumirpc.AnalyzerResource
	(*AnalyzerResourceOptions)(nil),                // 9: pulumirpc.AnalyzerResourceOptions
	(*AnalyzerProviderResource)(nil),               // 10: pulumirpc.AnalyzerProviderResource
	(*AnalyzerPropertyDependencies)(nil),           // 11: pulumirpc.AnalyzerPropertyDependencies
	(*AnalyzeStackRequest)(nil),                    // 12: pulumirpc.AnalyzeStackRequest
	(*AnalyzeResponse)(nil),                        // 13: pulumirpc.AnalyzeResponse
	(*AnalyzeDiagnostic)(nil),                      // 14: pulumirpc.AnalyzeDiagnostic
	(*Remediation)(nil),                            // 15: pulumirpc.Remediation
	(*RemediateResponse)(nil),                      // 16: pulumirpc.RemediateResponse
	(*AnalyzerInfo)(nil),                           // 17: pulumirpc.AnalyzerInfo
	(*PolicyInfo)(nil),                             // 18: pulumirpc.PolicyInfo
	(*PolicyConfigSchema)(nil),                     // 19: pulumirpc.PolicyConfigSchema
	(*PolicyConfig)(nil),                           // 20: pulumirpc.PolicyConfig
	(*ConfigureAnalyzerRequest)(nil),               // 21: pulumirpc.ConfigureAnalyzerRequest
	(*PolicyComplianceFramework)(nil),              // 22: pulumirpc.PolicyComplianceFramework
	(*PolicyNotApplicable)(nil),                    // 23: pulumirpc.PolicyNotApplicable
	nil,                                            // 24: pulumirpc.AnalyzerStackConfigureRequest.ConfigEntry
	nil,                                            // 25: pulumirpc.AnalyzerStackConfigureRequest.TagsEntry
	nil,                                            // 26: pulumirpc.AnalyzerResource.PropertyDependenciesEntry
	(*AnalyzerResourceOptions_CustomTimeouts)(nil), // 27: pulumirpc.AnalyzerResourceOptions.CustomTimeouts
	nil,                     // 28: pulumirpc.AnalyzerInfo.InitialConfigEntry
	nil,                     // 29: pulumirpc.ConfigureAnalyzerRequest.PolicyConfigEntry
	(*structpb.Struct)(nil), // 30: google.protobuf.Struct
	(*emptypb.Empty)(nil),   // 31: google.protobuf.Empty
	(*PluginInfo)(nil),      // 32: pulumirpc.PluginInfo
}
var file_pulumi_analyzer_proto_depIdxs = []int32{
	24, // 0: pulumirpc.AnalyzerStackConfigureRequest.config:type_name -> pulumirpc.AnalyzerStackConfigureRequest.ConfigEntry
	25, // 1: pulumirpc.AnalyzerStackConfigureRequest.tags:type_name -> pulumirpc.AnalyzerStackConfigureRequest.TagsEntry
	30, // 2: pulumirpc.AnalyzeRequest.properties:type_name -> google.protobuf.Struct
	9,  // 3: pulumirpc.AnalyzeRequest.options:type_name -> pulumirpc.AnalyzerResourceOptions
	10, // 4: pulumirpc.AnalyzeRequest.provider:type_name -> pulumirpc.AnalyzerProviderResource
	30, // 5: pulumirpc.AnalyzerResource.properties:type_name -> google.protobuf.Struct
	9,  // 6: pulumirpc.AnalyzerResource.options:type_name -> pulumirpc.AnalyzerResourceOptions
	10, // 7: pulumirpc.AnalyzerResource.provider:type_name -> pulumirpc.AnalyzerProviderResource
	26, // 8: pulumirpc.AnalyzerResource.propertyDependencies:type_name -> pulumirpc.AnalyzerResource.PropertyDependenciesEntry
	27, // 9: pulumirpc.AnalyzerResourceOptions.customTimeouts:type_name -> pulumirpc.AnalyzerResourceOptions.CustomTimeouts
	30, // 10: pulumirpc.AnalyzerProviderResource.properties:type_name -> google.protobuf.Struct
	8,  // 11: pulumirpc.AnalyzeStackRequest.resources:type_name -> pulumirpc.AnalyzerResource
	14, // 12: pulumirpc.AnalyzeResponse.diagnostics:type_name -> pulumirpc.AnalyzeDiagnostic
	23, // 13: pulumirpc.AnalyzeResponse.not_applicable:type_name -> pulumirpc.PolicyNotApplicable
	0,  // 14: pulumirpc.AnalyzeDiagnostic.enforcementLevel:type_name -> pulumirpc.EnforcementLevel
	2,  // 15: pulumirpc.AnalyzeDiagnostic.severity:type_name -> pulumirpc.PolicySeverity
	30, // 16: pulumirpc.Remediation.properties:type_name -> google.protobuf.Struct
	15, // 17: pulumirpc.RemediateResponse.remediations:type_name -> pulumirpc.Remediation
	23, // 18: pulumirpc.RemediateResponse.not_applicable:type_name -> pulumirpc.PolicyNotApplicable
	18, // 19: pulumirpc.AnalyzerInfo.policies:type_name -> pulumirpc.PolicyInfo
	28, // 20: pulumirpc.AnalyzerInfo.initialConfig:type_name -> pulumirpc.AnalyzerInfo.InitialConfigEntry
	0,  // 21: pulumirpc.PolicyInfo.enforcementLevel:type_name -> pulumirpc.EnforcementLevel
	19, // 22: pulumirpc.PolicyInfo.configSchema:type_name -> pulumirpc.PolicyConfigSchema
	1,  // 23: pulumirpc.PolicyInfo.policy_type:type_name -> pulumirpc.PolicyType
	2,  // 24: pulumirpc.PolicyInfo.severity:type_name -> pulumirpc.PolicySeverity
	22, // 25: pulumirpc.PolicyInfo.framework:type_name -> pulumirpc.PolicyComplianceFramework
	30, // 26: pulumirpc.PolicyConfigSchema.properties:type_name -> google.protobuf.Struct
	0,  // 27: pulumirpc.PolicyConfig.enforcementLevel:type_name -> pulumirpc.EnforcementLevel
	30, // 28: pulumirpc.PolicyConfig.properties:type_name -> google.protobuf.Struct
	29, // 29: pulumirpc.ConfigureAnalyzerRequest.policyConfig:type_name -> pulumirpc.ConfigureAnalyzerRequest.PolicyConfigEntry
	11, // 30: pulumirpc.AnalyzerResource.PropertyDependenciesEntry.value:type_name -> pulumirpc.AnalyzerPropertyDependencies
	20, // 31: pulumirpc.AnalyzerInfo.InitialConfigEntry.value:type_name -> pulumirpc.PolicyConfig
	20, // 32: pulumirpc.ConfigureAnalyzerRequest.PolicyConfigEntry.value:type_name -> pulumirpc.PolicyConfig
	7,  // 33: pulumirpc.Analyzer.Analyze:input_type -> pulumirpc.AnalyzeRequest
	12, // 34: pulumirpc.Analyzer.AnalyzeStack:input_type -> pulumirpc.AnalyzeStackRequest
	7,  // 35: pulumirpc.Analyzer.Remediate:input_type -> pulumirpc.AnalyzeRequest
	31, // 36: pulumirpc.Analyzer.GetAnalyzerInfo:input_type -> google.protobuf.Empty
	31, // 37: pulumirpc.Analyzer.GetPluginInfo:input_type -> google.protobuf.Empty
	21, // 38: pulumirpc.Analyzer.Configure:input_type -> pulumirpc.ConfigureAnalyzerRequest
	5,  // 39: pulumirpc.Analyzer.Handshake:input_type -> pulumirpc.AnalyzerHandshakeRequest
	3,  // 40: pulumirpc.Analyzer.ConfigureStack:input_type -> pulumirpc.AnalyzerStackConfigureRequest
	31, // 41: pulumirpc.Analyzer.Cancel:input_type -> google.protobuf.Empty
	13, // 42: pulumirpc.Analyzer.Analyze:output_type -> pulumirpc.AnalyzeResponse
	13, // 43: pulumirpc.Analyzer.AnalyzeStack:output_type -> pulumirpc.AnalyzeResponse
	16, // 44: pulumirpc.Analyzer.Remediate:output_type -> pulumirpc.RemediateResponse
	17, // 45: pulumirpc.Analyzer.GetAnalyzerInfo:output_type -> pulumirpc.AnalyzerInfo
	32, // 46: pulumirpc.Analyzer.GetPluginInfo:output_type -> pulumirpc.PluginInfo
	31, // 47: pulumirpc.Analyzer.Configure:output_type -> google.protobuf.Empty
	6,  // 48: pulumirpc.Analyzer.Handshake:output_type -> pulumirpc.AnalyzerHandshakeResponse
	4,  // 49: pulumirpc.Analyzer.ConfigureStack:output_type -> pulumirpc.AnalyzerStackConfigureResponse
	31, // 50: pulumirpc.Analyzer.Cancel:output_type -> google.protobuf.Empty
	42, // [42:51] is the sub-list for method output_type
	33, // [33:42] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_pulumi_analyzer_proto_init() }
func file_pulumi_analyzer_proto_init() {
	if File_pulumi_analyzer_proto != nil {
		return
	}
	file_pulumi_plugin_proto_init()
	file_pulumi_analyzer_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pulumi_analyzer_proto_rawDesc), len(file_pulumi_analyzer_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pulumi_analyzer_proto_goTypes,
		DependencyIndexes: file_pulumi_analyzer_proto_depIdxs,
		EnumInfos:         file_pulumi_analyzer_proto_enumTypes,
		MessageInfos:      file_pulumi_analyzer_proto_msgTypes,
	}.Build()
	File_pulumi_analyzer_proto = out.File
	file_pulumi_analyzer_proto_goTypes = nil
	file_pulumi_analyzer_proto_depIdxs = nil
}
