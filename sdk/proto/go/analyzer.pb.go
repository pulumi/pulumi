// Code generated by protoc-gen-go. DO NOT EDIT.
// source: analyzer.proto

package pulumirpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _struct "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EnforcementLevel indicates the severity of a policy violation.
type AnalyzeDiagnostic_LogSeverity int32

const (
	AnalyzeDiagnostic_WARNING   AnalyzeDiagnostic_LogSeverity = 0
	AnalyzeDiagnostic_MANDATORY AnalyzeDiagnostic_LogSeverity = 2
)

var AnalyzeDiagnostic_LogSeverity_name = map[int32]string{
	0: "WARNING",
	2: "MANDATORY",
}
var AnalyzeDiagnostic_LogSeverity_value = map[string]int32{
	"WARNING":   0,
	"MANDATORY": 2,
}

func (x AnalyzeDiagnostic_LogSeverity) String() string {
	return proto.EnumName(AnalyzeDiagnostic_LogSeverity_name, int32(x))
}
func (AnalyzeDiagnostic_LogSeverity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_analyzer_77d426fa6070e0b3, []int{2, 0}
}

type AnalyzeRequest struct {
	Type                 string          `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Properties           *_struct.Struct `protobuf:"bytes,2,opt,name=properties" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AnalyzeRequest) Reset()         { *m = AnalyzeRequest{} }
func (m *AnalyzeRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyzeRequest) ProtoMessage()    {}
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_analyzer_77d426fa6070e0b3, []int{0}
}
func (m *AnalyzeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeRequest.Unmarshal(m, b)
}
func (m *AnalyzeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeRequest.Marshal(b, m, deterministic)
}
func (dst *AnalyzeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeRequest.Merge(dst, src)
}
func (m *AnalyzeRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyzeRequest.Size(m)
}
func (m *AnalyzeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeRequest proto.InternalMessageInfo

func (m *AnalyzeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AnalyzeRequest) GetProperties() *_struct.Struct {
	if m != nil {
		return m.Properties
	}
	return nil
}

type AnalyzeResponse struct {
	Diagnostics          []*AnalyzeDiagnostic `protobuf:"bytes,2,rep,name=diagnostics" json:"diagnostics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnalyzeResponse) Reset()         { *m = AnalyzeResponse{} }
func (m *AnalyzeResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResponse) ProtoMessage()    {}
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_analyzer_77d426fa6070e0b3, []int{1}
}
func (m *AnalyzeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeResponse.Unmarshal(m, b)
}
func (m *AnalyzeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeResponse.Marshal(b, m, deterministic)
}
func (dst *AnalyzeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeResponse.Merge(dst, src)
}
func (m *AnalyzeResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyzeResponse.Size(m)
}
func (m *AnalyzeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeResponse proto.InternalMessageInfo

func (m *AnalyzeResponse) GetDiagnostics() []*AnalyzeDiagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type AnalyzeDiagnostic struct {
	PolicyName           string                        `protobuf:"bytes,1,opt,name=policyName" json:"policyName,omitempty"`
	PolicyPackName       string                        `protobuf:"bytes,2,opt,name=policyPackName" json:"policyPackName,omitempty"`
	PolicyPackVersion    string                        `protobuf:"bytes,3,opt,name=policyPackVersion" json:"policyPackVersion,omitempty"`
	Description          string                        `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Message              string                        `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Tags                 []string                      `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	EnforcementLevel     AnalyzeDiagnostic_LogSeverity `protobuf:"varint,7,opt,name=enforcementLevel,enum=pulumirpc.AnalyzeDiagnostic_LogSeverity" json:"enforcementLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AnalyzeDiagnostic) Reset()         { *m = AnalyzeDiagnostic{} }
func (m *AnalyzeDiagnostic) String() string { return proto.CompactTextString(m) }
func (*AnalyzeDiagnostic) ProtoMessage()    {}
func (*AnalyzeDiagnostic) Descriptor() ([]byte, []int) {
	return fileDescriptor_analyzer_77d426fa6070e0b3, []int{2}
}
func (m *AnalyzeDiagnostic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeDiagnostic.Unmarshal(m, b)
}
func (m *AnalyzeDiagnostic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeDiagnostic.Marshal(b, m, deterministic)
}
func (dst *AnalyzeDiagnostic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeDiagnostic.Merge(dst, src)
}
func (m *AnalyzeDiagnostic) XXX_Size() int {
	return xxx_messageInfo_AnalyzeDiagnostic.Size(m)
}
func (m *AnalyzeDiagnostic) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeDiagnostic.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeDiagnostic proto.InternalMessageInfo

func (m *AnalyzeDiagnostic) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *AnalyzeDiagnostic) GetPolicyPackName() string {
	if m != nil {
		return m.PolicyPackName
	}
	return ""
}

func (m *AnalyzeDiagnostic) GetPolicyPackVersion() string {
	if m != nil {
		return m.PolicyPackVersion
	}
	return ""
}

func (m *AnalyzeDiagnostic) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AnalyzeDiagnostic) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AnalyzeDiagnostic) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AnalyzeDiagnostic) GetEnforcementLevel() AnalyzeDiagnostic_LogSeverity {
	if m != nil {
		return m.EnforcementLevel
	}
	return AnalyzeDiagnostic_WARNING
}

func init() {
	proto.RegisterType((*AnalyzeRequest)(nil), "pulumirpc.AnalyzeRequest")
	proto.RegisterType((*AnalyzeResponse)(nil), "pulumirpc.AnalyzeResponse")
	proto.RegisterType((*AnalyzeDiagnostic)(nil), "pulumirpc.AnalyzeDiagnostic")
	proto.RegisterEnum("pulumirpc.AnalyzeDiagnostic_LogSeverity", AnalyzeDiagnostic_LogSeverity_name, AnalyzeDiagnostic_LogSeverity_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Analyzer service

type AnalyzerClient interface {
	// Analyze analyzes a single resource object, and returns any errors that it finds.
	Analyze(ctx context.Context, in *AnalyzeRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error)
	// GetPluginInfo returns generic information about this plugin, like its version.
	GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error)
}

type analyzerClient struct {
	cc *grpc.ClientConn
}

func NewAnalyzerClient(cc *grpc.ClientConn) AnalyzerClient {
	return &analyzerClient{cc}
}

func (c *analyzerClient) Analyze(ctx context.Context, in *AnalyzeRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error) {
	out := new(AnalyzeResponse)
	err := grpc.Invoke(ctx, "/pulumirpc.Analyzer/Analyze", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *analyzerClient) GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error) {
	out := new(PluginInfo)
	err := grpc.Invoke(ctx, "/pulumirpc.Analyzer/GetPluginInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Analyzer service

type AnalyzerServer interface {
	// Analyze analyzes a single resource object, and returns any errors that it finds.
	Analyze(context.Context, *AnalyzeRequest) (*AnalyzeResponse, error)
	// GetPluginInfo returns generic information about this plugin, like its version.
	GetPluginInfo(context.Context, *empty.Empty) (*PluginInfo, error)
}

func RegisterAnalyzerServer(s *grpc.Server, srv AnalyzerServer) {
	s.RegisterService(&_Analyzer_serviceDesc, srv)
}

func _Analyzer_Analyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyzeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyzerServer).Analyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pulumirpc.Analyzer/Analyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyzerServer).Analyze(ctx, req.(*AnalyzeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Analyzer_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyzerServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pulumirpc.Analyzer/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyzerServer).GetPluginInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Analyzer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pulumirpc.Analyzer",
	HandlerType: (*AnalyzerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Analyze",
			Handler:    _Analyzer_Analyze_Handler,
		},
		{
			MethodName: "GetPluginInfo",
			Handler:    _Analyzer_GetPluginInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "analyzer.proto",
}

func init() { proto.RegisterFile("analyzer.proto", fileDescriptor_analyzer_77d426fa6070e0b3) }

var fileDescriptor_analyzer_77d426fa6070e0b3 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x51, 0x6b, 0xd4, 0x40,
	0x10, 0xc7, 0xef, 0xae, 0xb5, 0xe7, 0x4d, 0x6c, 0xbc, 0x0e, 0xa8, 0x31, 0x16, 0x29, 0x79, 0x90,
	0x0a, 0x92, 0xc2, 0xf9, 0xe0, 0x9b, 0x18, 0xa9, 0x94, 0x42, 0x8d, 0x35, 0x2d, 0x8a, 0x0f, 0x3e,
	0xa4, 0x71, 0x1a, 0x16, 0x93, 0xec, 0xba, 0xbb, 0x11, 0xe2, 0xa7, 0xf0, 0xf3, 0xf9, 0x69, 0xdc,
	0x6c, 0x72, 0xd7, 0xd0, 0x88, 0x6f, 0x33, 0xf3, 0xff, 0xcd, 0x3f, 0xb3, 0x93, 0x01, 0x37, 0xad,
	0xd2, 0xa2, 0xf9, 0x45, 0x32, 0x14, 0x92, 0x6b, 0x8e, 0x0b, 0x51, 0x17, 0x75, 0xc9, 0xa4, 0xc8,
	0xfc, 0x7b, 0xa2, 0xa8, 0x73, 0x56, 0x75, 0x82, 0xff, 0x24, 0xe7, 0x3c, 0x2f, 0xe8, 0xc8, 0x66,
	0x57, 0xf5, 0xf5, 0x11, 0x95, 0x42, 0x37, 0xbd, 0xb8, 0x7f, 0x5b, 0x54, 0x5a, 0xd6, 0x99, 0xee,
	0xd4, 0xe0, 0x2b, 0xb8, 0x51, 0xf7, 0x95, 0x84, 0x7e, 0xd4, 0xa4, 0x34, 0x22, 0x6c, 0xeb, 0x46,
	0x90, 0x37, 0x3d, 0x98, 0x1e, 0x2e, 0x12, 0x1b, 0xe3, 0x2b, 0x00, 0x83, 0x0b, 0x92, 0x9a, 0x91,
	0xf2, 0x66, 0x46, 0x71, 0x56, 0x8f, 0xc2, 0xce, 0x38, 0x5c, 0x1b, 0x87, 0x17, 0xd6, 0x38, 0x19,
	0xa0, 0xc1, 0x47, 0xb8, 0xbf, 0xb1, 0x57, 0x82, 0x57, 0x8a, 0xf0, 0x35, 0x38, 0xdf, 0x58, 0x9a,
	0x57, 0x5c, 0x69, 0x96, 0xb5, 0x66, 0x5b, 0xc6, 0x6c, 0x3f, 0xdc, 0xbc, 0x2d, 0xec, 0x1b, 0x8e,
	0x37, 0x50, 0x32, 0x6c, 0x08, 0xfe, 0xcc, 0x60, 0x6f, 0x84, 0xe0, 0x53, 0x33, 0x21, 0x2f, 0x58,
	0xd6, 0xc4, 0x69, 0xb9, 0x9e, 0x7d, 0x50, 0xc1, 0x67, 0xe0, 0x76, 0xd9, 0x79, 0x9a, 0x7d, 0xb7,
	0xcc, 0xcc, 0x32, 0xb7, 0xaa, 0xf8, 0x02, 0xf6, 0x6e, 0x2a, 0x9f, 0x48, 0x2a, 0xc6, 0x2b, 0x6f,
	0xcb, 0xa2, 0x63, 0x01, 0x0f, 0xcc, 0x5b, 0x48, 0x65, 0x92, 0x09, 0xdd, 0x72, 0xdb, 0x96, 0x1b,
	0x96, 0xd0, 0x83, 0x79, 0x49, 0x4a, 0xa5, 0x39, 0x79, 0x77, 0xac, 0xba, 0x4e, 0xed, 0x9e, 0xd3,
	0x5c, 0x79, 0x3b, 0x66, 0x01, 0xed, 0x9e, 0x4d, 0x8c, 0x97, 0xb0, 0xa4, 0xea, 0x9a, 0xcb, 0x8c,
	0x4a, 0xaa, 0xf4, 0x19, 0xfd, 0xa4, 0xc2, 0x9b, 0x9b, 0x36, 0x77, 0x75, 0xf8, 0xbf, 0x05, 0x85,
	0x67, 0x3c, 0xbf, 0x30, 0xb0, 0x64, 0xba, 0x49, 0x46, 0x0e, 0xc1, 0x73, 0x70, 0x06, 0x00, 0x3a,
	0x30, 0xff, 0x1c, 0x25, 0xf1, 0x69, 0x7c, 0xb2, 0x9c, 0xe0, 0x2e, 0x2c, 0xde, 0x47, 0xf1, 0x71,
	0x74, 0xf9, 0x21, 0xf9, 0xb2, 0x9c, 0xad, 0x7e, 0x4f, 0xe1, 0x6e, 0x6f, 0x2f, 0xf1, 0x2d, 0xcc,
	0xfb, 0x18, 0x1f, 0x8f, 0x3f, 0xdf, 0xdf, 0x8b, 0xef, 0xff, 0x4b, 0xea, 0xfe, 0x75, 0x30, 0xc1,
	0x37, 0xb0, 0x7b, 0x42, 0xfa, 0xdc, 0x5e, 0xeb, 0xa9, 0x19, 0x0c, 0x1f, 0x8e, 0xce, 0xe6, 0x5d,
	0x7b, 0xac, 0xfe, 0x83, 0x81, 0xcd, 0x0d, 0x1e, 0x4c, 0xae, 0x76, 0x2c, 0xf8, 0xf2, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xaa, 0x68, 0x9c, 0xfb, 0x0e, 0x03, 0x00, 0x00,
}
