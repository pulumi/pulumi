# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import resource_status_pb2 as pulumi_dot_resource__status__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in pulumi/resource_status_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ResourceStatusStub(object):
    """ResourceStatus is an interface that can be called from a resource provider to update status about a resource.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PublishViewSteps = channel.unary_unary(
                '/pulumirpc.ResourceStatus/PublishViewSteps',
                request_serializer=pulumi_dot_resource__status__pb2.PublishViewStepsRequest.SerializeToString,
                response_deserializer=pulumi_dot_resource__status__pb2.PublishViewStepsResponse.FromString,
                _registered_method=True)


class ResourceStatusServicer(object):
    """ResourceStatus is an interface that can be called from a resource provider to update status about a resource.
    """

    def PublishViewSteps(self, request, context):
        """`PublishViewSteps` is used to publish a series of steps for a view resource.
        Views can be materialized via create and update steps, and more complex
        changes, such as replacements, can be modeled as a series of steps.
        The engine does not actually apply these steps, but rather flows them through
        the engine such that the view resources are written to state and the view
        resources are displayed in the UI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceStatusServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PublishViewSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishViewSteps,
                    request_deserializer=pulumi_dot_resource__status__pb2.PublishViewStepsRequest.FromString,
                    response_serializer=pulumi_dot_resource__status__pb2.PublishViewStepsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pulumirpc.ResourceStatus', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pulumirpc.ResourceStatus', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResourceStatus(object):
    """ResourceStatus is an interface that can be called from a resource provider to update status about a resource.
    """

    @staticmethod
    def PublishViewSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pulumirpc.ResourceStatus/PublishViewSteps',
            pulumi_dot_resource__status__pb2.PublishViewStepsRequest.SerializeToString,
            pulumi_dot_resource__status__pb2.PublishViewStepsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
