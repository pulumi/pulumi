# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pulumi.testing import language_pb2 as pulumi_dot_testing_dot_language__pb2


class LanguageTestStub(object):
    """LanguageTest is the interface to the pulumi language test framework. This is _highly_ experimental and
    currently subject to breaking changes without warning.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLanguageTests = channel.unary_unary(
                '/pulumirpc.testing.LanguageTest/GetLanguageTests',
                request_serializer=pulumi_dot_testing_dot_language__pb2.GetLanguageTestsRequest.SerializeToString,
                response_deserializer=pulumi_dot_testing_dot_language__pb2.GetLanguageTestsResponse.FromString,
                )
        self.PrepareLanguageTests = channel.unary_unary(
                '/pulumirpc.testing.LanguageTest/PrepareLanguageTests',
                request_serializer=pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsRequest.SerializeToString,
                response_deserializer=pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsResponse.FromString,
                )
        self.RunLanguageTest = channel.unary_unary(
                '/pulumirpc.testing.LanguageTest/RunLanguageTest',
                request_serializer=pulumi_dot_testing_dot_language__pb2.RunLanguageTestRequest.SerializeToString,
                response_deserializer=pulumi_dot_testing_dot_language__pb2.RunLanguageTestResponse.FromString,
                )


class LanguageTestServicer(object):
    """LanguageTest is the interface to the pulumi language test framework. This is _highly_ experimental and
    currently subject to breaking changes without warning.
    """

    def GetLanguageTests(self, request, context):
        """GetLanguageTests returns a list of all the language tests.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepareLanguageTests(self, request, context):
        """PrepareLanguageTests prepares the engine to run language tests. It sets up a stable artifacts folder
        (which should be .gitignore'd) and fills it with the core SDK artifact.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunLanguageTest(self, request, context):
        """RunLanguageTest runs a single test of the language plugin.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LanguageTestServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLanguageTests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLanguageTests,
                    request_deserializer=pulumi_dot_testing_dot_language__pb2.GetLanguageTestsRequest.FromString,
                    response_serializer=pulumi_dot_testing_dot_language__pb2.GetLanguageTestsResponse.SerializeToString,
            ),
            'PrepareLanguageTests': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepareLanguageTests,
                    request_deserializer=pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsRequest.FromString,
                    response_serializer=pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsResponse.SerializeToString,
            ),
            'RunLanguageTest': grpc.unary_unary_rpc_method_handler(
                    servicer.RunLanguageTest,
                    request_deserializer=pulumi_dot_testing_dot_language__pb2.RunLanguageTestRequest.FromString,
                    response_serializer=pulumi_dot_testing_dot_language__pb2.RunLanguageTestResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pulumirpc.testing.LanguageTest', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LanguageTest(object):
    """LanguageTest is the interface to the pulumi language test framework. This is _highly_ experimental and
    currently subject to breaking changes without warning.
    """

    @staticmethod
    def GetLanguageTests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pulumirpc.testing.LanguageTest/GetLanguageTests',
            pulumi_dot_testing_dot_language__pb2.GetLanguageTestsRequest.SerializeToString,
            pulumi_dot_testing_dot_language__pb2.GetLanguageTestsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrepareLanguageTests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pulumirpc.testing.LanguageTest/PrepareLanguageTests',
            pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsRequest.SerializeToString,
            pulumi_dot_testing_dot_language__pb2.PrepareLanguageTestsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunLanguageTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pulumirpc.testing.LanguageTest/RunLanguageTest',
            pulumi_dot_testing_dot_language__pb2.RunLanguageTestRequest.SerializeToString,
            pulumi_dot_testing_dot_language__pb2.RunLanguageTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
