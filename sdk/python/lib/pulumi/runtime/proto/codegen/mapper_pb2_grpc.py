# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pulumi.codegen import mapper_pb2 as pulumi_dot_codegen_dot_mapper__pb2


class MapperStub(object):
    """Mapper is a service for getting mappings from other ecosystems to Pulumi.
    This is currently unstable and experimental.

    Mapper provides methods for retrieving mappings that describe how to map names in some source "provider" (e.g. a
    Terraform provider, if we are converting from Terraform) to names in appropriate Pulumi packages. So when converting
    a Terraform program containing code like `resource "aws_s3_bucket" "b" {}`, for instance, we need to know (among
    other things) that the `aws_s3_bucket` Terraform resource type corresponds to the Pulumi type `aws:s3/bucket:Bucket`,
    and thus lives in the `aws` package. This is the kind of information that a Mapper provides.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMapping = channel.unary_unary(
                '/codegen.Mapper/GetMapping',
                request_serializer=pulumi_dot_codegen_dot_mapper__pb2.GetMappingRequest.SerializeToString,
                response_deserializer=pulumi_dot_codegen_dot_mapper__pb2.GetMappingResponse.FromString,
                )


class MapperServicer(object):
    """Mapper is a service for getting mappings from other ecosystems to Pulumi.
    This is currently unstable and experimental.

    Mapper provides methods for retrieving mappings that describe how to map names in some source "provider" (e.g. a
    Terraform provider, if we are converting from Terraform) to names in appropriate Pulumi packages. So when converting
    a Terraform program containing code like `resource "aws_s3_bucket" "b" {}`, for instance, we need to know (among
    other things) that the `aws_s3_bucket` Terraform resource type corresponds to the Pulumi type `aws:s3/bucket:Bucket`,
    and thus lives in the `aws` package. This is the kind of information that a Mapper provides.
    """

    def GetMapping(self, request, context):
        """`GetMapping` returns any available mapping data for the given source provider name (so again, this is e.g. the
        name of a Terraform provider if converting from Terraform). Callers may pass "hints" that describe a Pulumi
        package that is expected to provide the mapping and satisfy the request, which implementations may use to
        optimise their efforts to return the best possible mapping. If no matching mapping exists, implementations should
        return an empty byte array result.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapperServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMapping,
                    request_deserializer=pulumi_dot_codegen_dot_mapper__pb2.GetMappingRequest.FromString,
                    response_serializer=pulumi_dot_codegen_dot_mapper__pb2.GetMappingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'codegen.Mapper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mapper(object):
    """Mapper is a service for getting mappings from other ecosystems to Pulumi.
    This is currently unstable and experimental.

    Mapper provides methods for retrieving mappings that describe how to map names in some source "provider" (e.g. a
    Terraform provider, if we are converting from Terraform) to names in appropriate Pulumi packages. So when converting
    a Terraform program containing code like `resource "aws_s3_bucket" "b" {}`, for instance, we need to know (among
    other things) that the `aws_s3_bucket` Terraform resource type corresponds to the Pulumi type `aws:s3/bucket:Bucket`,
    and thus lives in the `aws` package. This is the kind of information that a Mapper provides.
    """

    @staticmethod
    def GetMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/codegen.Mapper/GetMapping',
            pulumi_dot_codegen_dot_mapper__pb2.GetMappingRequest.SerializeToString,
            pulumi_dot_codegen_dot_mapper__pb2.GetMappingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
