# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'DataArgs',
    'DataArgsDict',
]

MYPY = False

if not MYPY:
    class DataArgsDict(TypedDict):
        private: pulumi.Input[_builtins.str]
        public: pulumi.Input[_builtins.str]
elif False:
    DataArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class DataArgs:
    def __init__(__self__, *,
                 private: pulumi.Input[_builtins.str],
                 public: pulumi.Input[_builtins.str]):
        pulumi.set(__self__, "private", private)
        pulumi.set(__self__, "public", public)

    @_builtins.property
    @pulumi.getter
    def private(self) -> pulumi.Input[_builtins.str]:
        return pulumi.get(self, "private")

    @private.setter
    def private(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "private", value)

    @_builtins.property
    @pulumi.getter
    def public(self) -> pulumi.Input[_builtins.str]:
        return pulumi.get(self, "public")

    @public.setter
    def public(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "public", value)


