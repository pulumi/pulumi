# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from .. import outputs as _root_outputs

import types

__config__ = pulumi.Config('testconfigprovider')


class _ExportableConfig(types.ModuleType):
    @property
    def b1(self) -> Optional[bool]:
        return __config__.get_bool('b1')

    @property
    def b2(self) -> Optional[bool]:
        return __config__.get_bool('b2')

    @property
    def b3(self) -> Optional[bool]:
        return __config__.get_bool('b3')

    @property
    def i1(self) -> Optional[int]:
        return __config__.get_int('i1')

    @property
    def i2(self) -> Optional[int]:
        return __config__.get_int('i2')

    @property
    def i3(self) -> Optional[int]:
        return __config__.get_int('i3')

    @property
    def lb1(self) -> Optional[str]:
        return __config__.get('lb1')

    @property
    def lb2(self) -> Optional[str]:
        return __config__.get('lb2')

    @property
    def lb3(self) -> Optional[str]:
        return __config__.get('lb3')

    @property
    def li1(self) -> Optional[str]:
        return __config__.get('li1')

    @property
    def li2(self) -> Optional[str]:
        return __config__.get('li2')

    @property
    def li3(self) -> Optional[str]:
        return __config__.get('li3')

    @property
    def ln1(self) -> Optional[str]:
        return __config__.get('ln1')

    @property
    def ln2(self) -> Optional[str]:
        return __config__.get('ln2')

    @property
    def ln3(self) -> Optional[str]:
        return __config__.get('ln3')

    @property
    def ls1(self) -> Optional[str]:
        return __config__.get('ls1')

    @property
    def ls2(self) -> Optional[str]:
        return __config__.get('ls2')

    @property
    def ls3(self) -> Optional[str]:
        return __config__.get('ls3')

    @property
    def mb1(self) -> Optional[str]:
        return __config__.get('mb1')

    @property
    def mb2(self) -> Optional[str]:
        return __config__.get('mb2')

    @property
    def mb3(self) -> Optional[str]:
        return __config__.get('mb3')

    @property
    def mi1(self) -> Optional[str]:
        return __config__.get('mi1')

    @property
    def mi2(self) -> Optional[str]:
        return __config__.get('mi2')

    @property
    def mi3(self) -> Optional[str]:
        return __config__.get('mi3')

    @property
    def mn1(self) -> Optional[str]:
        return __config__.get('mn1')

    @property
    def mn2(self) -> Optional[str]:
        return __config__.get('mn2')

    @property
    def mn3(self) -> Optional[str]:
        return __config__.get('mn3')

    @property
    def ms1(self) -> Optional[str]:
        return __config__.get('ms1')

    @property
    def ms2(self) -> Optional[str]:
        return __config__.get('ms2')

    @property
    def ms3(self) -> Optional[str]:
        return __config__.get('ms3')

    @property
    def n1(self) -> Optional[float]:
        return __config__.get_float('n1')

    @property
    def n2(self) -> Optional[float]:
        return __config__.get_float('n2')

    @property
    def n3(self) -> Optional[float]:
        return __config__.get_float('n3')

    @property
    def ob1(self) -> Optional[str]:
        return __config__.get('ob1')

    @property
    def ob2(self) -> Optional[str]:
        return __config__.get('ob2')

    @property
    def ob3(self) -> Optional[str]:
        return __config__.get('ob3')

    @property
    def oi1(self) -> Optional[str]:
        return __config__.get('oi1')

    @property
    def oi2(self) -> Optional[str]:
        return __config__.get('oi2')

    @property
    def oi3(self) -> Optional[str]:
        return __config__.get('oi3')

    @property
    def on1(self) -> Optional[str]:
        return __config__.get('on1')

    @property
    def on2(self) -> Optional[str]:
        return __config__.get('on2')

    @property
    def on3(self) -> Optional[str]:
        return __config__.get('on3')

    @property
    def os1(self) -> Optional[str]:
        return __config__.get('os1')

    @property
    def os2(self) -> Optional[str]:
        return __config__.get('os2')

    @property
    def os3(self) -> Optional[str]:
        return __config__.get('os3')

    @property
    def s1(self) -> Optional[str]:
        return __config__.get('s1')

    @property
    def s2(self) -> Optional[str]:
        return __config__.get('s2')

    @property
    def s3(self) -> Optional[str]:
        return __config__.get('s3')

