dist: goreleaser

project_name: pulumi

builds:
- &pulumibin
  id: pulumi
  binary: pulumi
  dir: pkg
  main: ./cmd/pulumi
  gobinary: ../scripts/go-wrapper.sh
  env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  goos: ['linux', 'darwin', 'windows']
  goarch: ['amd64', 'arm64']
  goamd64: ['v1']
  ldflags:
    - -X github.com/pulumi/pulumi/pkg/v3/version.Version=v{{.Env.PULUMI_VERSION}}
  mod_timestamp: '{{ .CommitTimestamp }}'
- <<: *pulumibin
  id: pulumi-language-go
  binary: pulumi-language-go
  dir: sdk/go/pulumi-language-go
  main: ./
  gobinary: ../../../scripts/go-wrapper.sh
- <<: *pulumibin
  id: pulumi-language-nodejs
  binary: pulumi-language-nodejs
  dir: sdk/nodejs/cmd/pulumi-language-nodejs
  main: ./
  gobinary: ../../../../scripts/go-wrapper.sh
- <<: *pulumibin
  id: pulumi-language-python
  binary: pulumi-language-python
  dir: sdk/python/cmd/pulumi-language-python
  main: ./
  gobinary: ../../../../scripts/go-wrapper.sh

archives:
- id: pulumi
  wrap_in_directory: pulumi{{ if eq .Os "windows" }}/bin{{ end }}
  format_overrides:
    - goos: windows
      format: zip
  replacements:
    amd64: x64
  files:
      # OS specific scripts, not compiled
    - src: bin/{{ .Os }}/*
      dst: '.'
      strip_parent: true
      # binaries
    - src: bin/{{ .Os }}-{{ .Arch }}/*
      dst: '.'
      strip_parent: true
  name_template: "{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}"

snapshot:
  name_template: "{{ .Version }}-SNAPSHOT"

checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"
