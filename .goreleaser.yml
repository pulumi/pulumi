dist: goreleaser

project_name: pulumi

before:
  hooks:
    - ./scripts/get-language-providers.sh
    - ./scripts/prep-for-goreleaser.sh

blobs:
- bucket: get.pulumi.com
  folder: releases/sdk/
  ids:
    - pulumi
  provider: s3
  region: us-west-2

builds:
- &pulumibin
  id: pulumi
  binary: pulumi
  goos: ['linux', 'darwin', 'windows']
  goarch: ['amd64', 'arm64']
  goamd64: ['v1']
  ignore:
    - goos: windows
      goarch: arm64
  builder: prebuilt
  prebuilt:
    path: goreleaser-{{ .Os }}/{{ trimsuffix .Name .Ext }}_{{ .Os }}_{{ .Arch }}{{ with .Amd64 }}_{{ . }}{{ end }}/{{ .Name }}
  mod_timestamp: '{{ .CommitTimestamp }}'
- <<: *pulumibin
  id: pulumi-language-go
  binary: pulumi-language-go
- <<: *pulumibin
  id: pulumi-language-nodejs
  binary: pulumi-language-nodejs
- <<: *pulumibin
  id: pulumi-language-python
  binary: pulumi-language-python
- <<: *pulumibin
  id: pulumi-language-dotnet
  binary: pulumi-language-dotnet
- <<: *pulumibin
  id: pulumi-language-java
  binary: pulumi-language-java
  builder: prebuilt
  prebuilt:
    path: goreleaser-lang/java/{{ .Os }}-{{ replace .Arch "amd64" "x64" }}/{{ .Name }}
- <<: *pulumibin
  id: pulumi-language-yaml
  binary: pulumi-language-yaml
  builder: prebuilt
  prebuilt:
    path: goreleaser-lang/yaml/{{ .Os }}-{{ replace .Arch "amd64" "x64" }}/{{ .Name }}

archives:
- id: pulumi
  wrap_in_directory: pulumi{{ if eq .Os "windows" }}/bin{{ end }}
  format_overrides:
    - goos: windows
      format: zip
  replacements:
    amd64: x64
  files:
      # OS specific scripts, not compiled
    - src: bin/{{ .Os }}/*
      dst: '.'
      strip_parent: true
      # binaries
    - src: bin/{{ .Os }}-{{ .Arch }}/*
      dst: '.'
      strip_parent: true
  name_template: "{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}"

snapshot:
  name_template: "{{ .Version }}-SNAPSHOT"

checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"

brews:
  -
    name: pulumi
    tap:
      owner: pulumi
      name: homebrew-tap
    commit_author:
      name: pulumi-bot
      email: bot@pulumi.com
    homepage: "https://pulumi.com"
    description: "Pulumi - Modern Infrastructure as Code. Any cloud, any language "
    folder: Formula
    license: Apache-2.0
    test: |
      system "#{bin}/pulumi version"
    conflicts:
      - pulumi
    install: |-
      bin.install Dir["*"]

      # Install shell completions
      (bash_completion/"pulumi.bash").write Utils.safe_popen_read("#{bin}/pulumi gen-completion bash")
      (zsh_completion/"_pulumi").write Utils.safe_popen_read("#{bin}/pulumi gen-completion zsh")
      (fish_completion/"pulumi.fish").write Utils.safe_popen_read("#{bin}/pulumi gen-completion fish")

release:
  discussion_category_name: Releases
