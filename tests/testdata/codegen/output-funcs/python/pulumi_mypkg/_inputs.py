# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'BastionShareableLink',
    'BastionShareableLinkDict',
]

MYPY = False

if not MYPY:
    class BastionShareableLinkDict(TypedDict):
        """
        Bastion Shareable Link.
        """
        vm: _builtins.str
        """
        Reference of the virtual machine resource.
        """
elif False:
    BastionShareableLinkDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class BastionShareableLink:
    def __init__(__self__, *,
                 vm: _builtins.str):
        """
        Bastion Shareable Link.
        :param _builtins.str vm: Reference of the virtual machine resource.
        """
        pulumi.set(__self__, "vm", vm)

    @_builtins.property
    @pulumi.getter
    def vm(self) -> _builtins.str:
        """
        Reference of the virtual machine resource.
        """
        return pulumi.get(self, "vm")

    @vm.setter
    def vm(self, value: _builtins.str):
        pulumi.set(self, "vm", value)


