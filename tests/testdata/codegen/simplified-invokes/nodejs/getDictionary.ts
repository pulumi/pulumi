// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDictionary(a?: number, opts?: pulumi.InvokeOptions): Promise<{[key: string]: outputs.AnotherCustomResult}> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:GetDictionary", {
        "a": a,
    }, opts);
}
export function getDictionaryOutput(a?: pulumi.Input<number | undefined>, opts?: pulumi.InvokeOptions): pulumi.Output<{[key: string]: outputs.AnotherCustomResult}> {
    var args = {
        "a": a,
    };
    return pulumi.output(args).apply((resolvedArgs: any) => getDictionary(resolvedArgs.a, opts))
}
