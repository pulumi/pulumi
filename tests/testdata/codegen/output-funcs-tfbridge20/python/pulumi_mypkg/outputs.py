# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'StorageAccountKeyResponseResult',
    'GetAmiIdsFilterResult',
]

@pulumi.output_type
class StorageAccountKeyResponseResult(dict):
    """
    An access key for the storage account.
    """
    def __init__(__self__, *,
                 creation_time: _builtins.str,
                 key_name: _builtins.str,
                 permissions: _builtins.str,
                 value: _builtins.str):
        """
        An access key for the storage account.
        :param _builtins.str creation_time: Creation time of the key, in round trip date format.
        :param _builtins.str key_name: Name of the key.
        :param _builtins.str permissions: Permissions for the key -- read-only or full permissions.
        :param _builtins.str value: Base 64-encoded value of the key.
        """
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "key_name", key_name)
        pulumi.set(__self__, "permissions", permissions)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> _builtins.str:
        """
        Creation time of the key, in round trip date format.
        """
        return pulumi.get(self, "creation_time")

    @_builtins.property
    @pulumi.getter(name="keyName")
    def key_name(self) -> _builtins.str:
        """
        Name of the key.
        """
        return pulumi.get(self, "key_name")

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> _builtins.str:
        """
        Permissions for the key -- read-only or full permissions.
        """
        return pulumi.get(self, "permissions")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Base 64-encoded value of the key.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAmiIdsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str]):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")


