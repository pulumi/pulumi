# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'TypeWithAssetsArgs',
]

@pulumi.input_type
class TypeWithAssetsArgs:
    def __init__(__self__, *,
                 asset: pulumi.Input[Union[pulumi.Asset, pulumi.Archive]],
                 plain_archive: pulumi.Archive,
                 archive: Optional[pulumi.Input[pulumi.Archive]] = None,
                 plain_asset: Optional[Union[pulumi.Asset, pulumi.Archive]] = None):
        pulumi.set(__self__, "asset", asset)
        pulumi.set(__self__, "plain_archive", plain_archive)
        if archive is not None:
            pulumi.set(__self__, "archive", archive)
        if plain_asset is not None:
            pulumi.set(__self__, "plain_asset", plain_asset)

    @property
    @pulumi.getter
    def asset(self) -> pulumi.Input[Union[pulumi.Asset, pulumi.Archive]]:
        return pulumi.get(self, "asset")

    @asset.setter
    def asset(self, value: pulumi.Input[Union[pulumi.Asset, pulumi.Archive]]):
        pulumi.set(self, "asset", value)

    @property
    @pulumi.getter(name="plainArchive")
    def plain_archive(self) -> pulumi.Archive:
        return pulumi.get(self, "plain_archive")

    @plain_archive.setter
    def plain_archive(self, value: pulumi.Archive):
        pulumi.set(self, "plain_archive", value)

    @property
    @pulumi.getter
    def archive(self) -> Optional[pulumi.Input[pulumi.Archive]]:
        return pulumi.get(self, "archive")

    @archive.setter
    def archive(self, value: Optional[pulumi.Input[pulumi.Archive]]):
        pulumi.set(self, "archive", value)

    @property
    @pulumi.getter(name="plainAsset")
    def plain_asset(self) -> Optional[Union[pulumi.Asset, pulumi.Archive]]:
        return pulumi.get(self, "plain_asset")

    @plain_asset.setter
    def plain_asset(self, value: Optional[Union[pulumi.Asset, pulumi.Archive]]):
        pulumi.set(self, "plain_asset", value)


