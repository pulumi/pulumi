// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Example
{
    [ExampleResourceType("example:index:ResourceWithAssets")]
    public partial class ResourceWithAssets : global::Pulumi.CustomResource
    {
        [Output("archive")]
        public Output<Archive> Archive { get; private set; } = null!;

        [Output("asset")]
        public Output<AssetOrArchive> Asset { get; private set; } = null!;

        [Output("nested")]
        public Output<Outputs.TypeWithAssets?> Nested { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceWithAssets resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceWithAssets(string name, ResourceWithAssetsArgs args, CustomResourceOptions? options = null)
            : base("example:index:ResourceWithAssets", name, args ?? new ResourceWithAssetsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceWithAssets(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("example:index:ResourceWithAssets", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceWithAssets resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceWithAssets Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResourceWithAssets(name, id, options);
        }
    }

    public sealed class ResourceWithAssetsArgs : global::Pulumi.ResourceArgs
    {
        [Input("archive")]
        public Input<Archive>? Archive { get; set; }

        [Input("nested")]
        public Input<Inputs.TypeWithAssetsArgs>? Nested { get; set; }

        [Input("source", required: true)]
        public Input<AssetOrArchive> Source { get; set; } = null!;

        public ResourceWithAssetsArgs()
        {
        }
        public static new ResourceWithAssetsArgs Empty => new ResourceWithAssetsArgs();
    }
}
