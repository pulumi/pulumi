# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
import pulumi_kubernetes

__all__ = [
    'MyType',
    'MyTypeDict',
    'MyTypeArgs',
    'MyTypeArgsDict',
]

MYPY = False

if not MYPY:
    class MyTypeDict(TypedDict):
        my_prop: builtins.str
        external_prop: NotRequired['pulumi_kubernetes.core.v1.PodArgs']
        my_other_prop: NotRequired[builtins.float]
elif False:
    MyTypeDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class MyType:
    def __init__(__self__, *,
                 my_prop: builtins.str,
                 external_prop: Optional['pulumi_kubernetes.core.v1.PodArgs'] = None,
                 my_other_prop: Optional[builtins.float] = None):
        pulumi.set(__self__, "my_prop", my_prop)
        if external_prop is not None:
            pulumi.set(__self__, "external_prop", external_prop)
        if my_other_prop is not None:
            pulumi.set(__self__, "my_other_prop", my_other_prop)

    @property
    @pulumi.getter(name="myProp")
    def my_prop(self) -> builtins.str:
        return pulumi.get(self, "my_prop")

    @my_prop.setter
    def my_prop(self, value: builtins.str):
        pulumi.set(self, "my_prop", value)

    @property
    @pulumi.getter(name="externalProp")
    def external_prop(self) -> Optional['pulumi_kubernetes.core.v1.PodArgs']:
        return pulumi.get(self, "external_prop")

    @external_prop.setter
    def external_prop(self, value: Optional['pulumi_kubernetes.core.v1.PodArgs']):
        pulumi.set(self, "external_prop", value)

    @property
    @pulumi.getter(name="myOtherProp")
    def my_other_prop(self) -> Optional[builtins.float]:
        return pulumi.get(self, "my_other_prop")

    @my_other_prop.setter
    def my_other_prop(self, value: Optional[builtins.float]):
        pulumi.set(self, "my_other_prop", value)


if not MYPY:
    class MyTypeArgsDict(TypedDict):
        my_prop: pulumi.Input[builtins.str]
        external_prop: NotRequired[pulumi.Input[NotRequired['pulumi_kubernetes.core.v1.PodArgs']]]
        my_other_prop: NotRequired[pulumi.Input[NotRequired[builtins.float]]]
elif False:
    MyTypeArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class MyTypeArgs:
    def __init__(__self__, *,
                 my_prop: pulumi.Input[builtins.str],
                 external_prop: Optional[pulumi.Input[Optional['pulumi_kubernetes.core.v1.PodArgs']]] = None,
                 my_other_prop: Optional[pulumi.Input[Optional[builtins.float]]] = None):
        pulumi.set(__self__, "my_prop", my_prop)
        if external_prop is not None:
            pulumi.set(__self__, "external_prop", external_prop)
        if my_other_prop is not None:
            pulumi.set(__self__, "my_other_prop", my_other_prop)

    @property
    @pulumi.getter(name="myProp")
    def my_prop(self) -> pulumi.Input[builtins.str]:
        return pulumi.get(self, "my_prop")

    @my_prop.setter
    def my_prop(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "my_prop", value)

    @property
    @pulumi.getter(name="externalProp")
    def external_prop(self) -> Optional[pulumi.Input[Optional['pulumi_kubernetes.core.v1.PodArgs']]]:
        return pulumi.get(self, "external_prop")

    @external_prop.setter
    def external_prop(self, value: Optional[pulumi.Input[Optional['pulumi_kubernetes.core.v1.PodArgs']]]):
        pulumi.set(self, "external_prop", value)

    @property
    @pulumi.getter(name="myOtherProp")
    def my_other_prop(self) -> Optional[pulumi.Input[Optional[builtins.float]]]:
        return pulumi.get(self, "my_other_prop")

    @my_other_prop.setter
    def my_other_prop(self, value: Optional[pulumi.Input[Optional[builtins.float]]]):
        pulumi.set(self, "my_other_prop", value)


