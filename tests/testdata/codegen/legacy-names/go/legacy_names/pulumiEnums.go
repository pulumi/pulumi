// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package legacy_names

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Enum_XYZ string

const (
	Enum_XYZPlain        = Enum_XYZ("A")
	Enum_XYZ_Snake_case  = Enum_XYZ("B")
	Enum_XYZSHA256       = Enum_XYZ("C")
	Enum_XYZ_SHA256_hash = Enum_XYZ("D")
)

func (Enum_XYZ) ElementType() reflect.Type {
	return reflect.TypeOf((*Enum_XYZ)(nil)).Elem()
}

func (e Enum_XYZ) ToEnum_XYZOutput() Enum_XYZOutput {
	return pulumi.ToOutput(e).(Enum_XYZOutput)
}

func (e Enum_XYZ) ToEnum_XYZOutputWithContext(ctx context.Context) Enum_XYZOutput {
	return pulumi.ToOutputWithContext(ctx, e).(Enum_XYZOutput)
}

func (e Enum_XYZ) ToEnum_XYZPtrOutput() Enum_XYZPtrOutput {
	return e.ToEnum_XYZPtrOutputWithContext(context.Background())
}

func (e Enum_XYZ) ToEnum_XYZPtrOutputWithContext(ctx context.Context) Enum_XYZPtrOutput {
	return Enum_XYZ(e).ToEnum_XYZOutputWithContext(ctx).ToEnum_XYZPtrOutputWithContext(ctx)
}

func (e Enum_XYZ) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Enum_XYZ) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Enum_XYZ) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Enum_XYZ) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type Enum_XYZOutput struct{ *pulumi.OutputState }

func (Enum_XYZOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Enum_XYZ)(nil)).Elem()
}

func (o Enum_XYZOutput) ToEnum_XYZOutput() Enum_XYZOutput {
	return o
}

func (o Enum_XYZOutput) ToEnum_XYZOutputWithContext(ctx context.Context) Enum_XYZOutput {
	return o
}

func (o Enum_XYZOutput) ToEnum_XYZPtrOutput() Enum_XYZPtrOutput {
	return o.ToEnum_XYZPtrOutputWithContext(context.Background())
}

func (o Enum_XYZOutput) ToEnum_XYZPtrOutputWithContext(ctx context.Context) Enum_XYZPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Enum_XYZ) *Enum_XYZ {
		return &v
	}).(Enum_XYZPtrOutput)
}

func (o Enum_XYZOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o Enum_XYZOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Enum_XYZ) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o Enum_XYZOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o Enum_XYZOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Enum_XYZ) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Enum_XYZPtrOutput struct{ *pulumi.OutputState }

func (Enum_XYZPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Enum_XYZ)(nil)).Elem()
}

func (o Enum_XYZPtrOutput) ToEnum_XYZPtrOutput() Enum_XYZPtrOutput {
	return o
}

func (o Enum_XYZPtrOutput) ToEnum_XYZPtrOutputWithContext(ctx context.Context) Enum_XYZPtrOutput {
	return o
}

func (o Enum_XYZPtrOutput) Elem() Enum_XYZOutput {
	return o.ApplyT(func(v *Enum_XYZ) Enum_XYZ {
		if v != nil {
			return *v
		}
		var ret Enum_XYZ
		return ret
	}).(Enum_XYZOutput)
}

func (o Enum_XYZPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o Enum_XYZPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Enum_XYZ) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Enum_XYZInput is an input type that accepts values of the Enum_XYZ enum
// A concrete instance of `Enum_XYZInput` can be one of the following:
//
//	Enum_XYZPlain
//	Enum_XYZ_Snake_case
//	Enum_XYZSHA256
//	Enum_XYZ_SHA256_hash
type Enum_XYZInput interface {
	pulumi.Input

	ToEnum_XYZOutput() Enum_XYZOutput
	ToEnum_XYZOutputWithContext(context.Context) Enum_XYZOutput
}

var enum_XYZPtrType = reflect.TypeOf((**Enum_XYZ)(nil)).Elem()

type Enum_XYZPtrInput interface {
	pulumi.Input

	ToEnum_XYZPtrOutput() Enum_XYZPtrOutput
	ToEnum_XYZPtrOutputWithContext(context.Context) Enum_XYZPtrOutput
}

type enum_XYZPtr string

func Enum_XYZPtr(v string) Enum_XYZPtrInput {
	return (*enum_XYZPtr)(&v)
}

func (*enum_XYZPtr) ElementType() reflect.Type {
	return enum_XYZPtrType
}

func (in *enum_XYZPtr) ToEnum_XYZPtrOutput() Enum_XYZPtrOutput {
	return pulumi.ToOutput(in).(Enum_XYZPtrOutput)
}

func (in *enum_XYZPtr) ToEnum_XYZPtrOutputWithContext(ctx context.Context) Enum_XYZPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(Enum_XYZPtrOutput)
}

// Enum_XYZMapInput is an input type that accepts Enum_XYZMap and Enum_XYZMapOutput values.
// You can construct a concrete instance of `Enum_XYZMapInput` via:
//
//	Enum_XYZMap{ "key": Enum_XYZArgs{...} }
type Enum_XYZMapInput interface {
	pulumi.Input

	ToEnum_XYZMapOutput() Enum_XYZMapOutput
	ToEnum_XYZMapOutputWithContext(context.Context) Enum_XYZMapOutput
}

type Enum_XYZMap map[string]Enum_XYZ

func (Enum_XYZMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Enum_XYZ)(nil)).Elem()
}

func (i Enum_XYZMap) ToEnum_XYZMapOutput() Enum_XYZMapOutput {
	return i.ToEnum_XYZMapOutputWithContext(context.Background())
}

func (i Enum_XYZMap) ToEnum_XYZMapOutputWithContext(ctx context.Context) Enum_XYZMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Enum_XYZMapOutput)
}

type Enum_XYZMapOutput struct{ *pulumi.OutputState }

func (Enum_XYZMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Enum_XYZ)(nil)).Elem()
}

func (o Enum_XYZMapOutput) ToEnum_XYZMapOutput() Enum_XYZMapOutput {
	return o
}

func (o Enum_XYZMapOutput) ToEnum_XYZMapOutputWithContext(ctx context.Context) Enum_XYZMapOutput {
	return o
}

func (o Enum_XYZMapOutput) MapIndex(k pulumi.StringInput) Enum_XYZOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Enum_XYZ {
		return vs[0].(map[string]Enum_XYZ)[vs[1].(string)]
	}).(Enum_XYZOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Enum_XYZInput)(nil)).Elem(), Enum_XYZ("A"))
	pulumi.RegisterInputType(reflect.TypeOf((*Enum_XYZPtrInput)(nil)).Elem(), Enum_XYZ("A"))
	pulumi.RegisterInputType(reflect.TypeOf((*Enum_XYZMapInput)(nil)).Elem(), Enum_XYZMap{})
	pulumi.RegisterOutputType(Enum_XYZOutput{})
	pulumi.RegisterOutputType(Enum_XYZPtrOutput{})
	pulumi.RegisterOutputType(Enum_XYZMapOutput{})
}
