// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pkg

import (
	"context"
	"reflect"

	"example.com/pulumi-pkg/sdk/go/pkg/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A test resource fails on create.
type FailsOnCreate struct {
	pulumi.CustomResourceState
}

// NewFailsOnCreate registers a new resource with the given unique name, arguments, and options.
func NewFailsOnCreate(ctx *pulumi.Context,
	name string, args *FailsOnCreateArgs, opts ...pulumi.ResourceOption) (*FailsOnCreate, error) {
	if args == nil {
		args = &FailsOnCreateArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FailsOnCreate
	err = ctx.RegisterPackageResource("pkg:index:FailsOnCreate", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFailsOnCreate gets an existing FailsOnCreate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFailsOnCreate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FailsOnCreateState, opts ...pulumi.ResourceOption) (*FailsOnCreate, error) {
	var resource FailsOnCreate
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("pkg:index:FailsOnCreate", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FailsOnCreate resources.
type failsOnCreateState struct {
}

type FailsOnCreateState struct {
}

func (FailsOnCreateState) ElementType() reflect.Type {
	return reflect.TypeOf((*failsOnCreateState)(nil)).Elem()
}

type failsOnCreateArgs struct {
}

// The set of arguments for constructing a FailsOnCreate resource.
type FailsOnCreateArgs struct {
}

func (FailsOnCreateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*failsOnCreateArgs)(nil)).Elem()
}

type FailsOnCreateInput interface {
	pulumi.Input

	ToFailsOnCreateOutput() FailsOnCreateOutput
	ToFailsOnCreateOutputWithContext(ctx context.Context) FailsOnCreateOutput
}

func (*FailsOnCreate) ElementType() reflect.Type {
	return reflect.TypeOf((**FailsOnCreate)(nil)).Elem()
}

func (i *FailsOnCreate) ToFailsOnCreateOutput() FailsOnCreateOutput {
	return i.ToFailsOnCreateOutputWithContext(context.Background())
}

func (i *FailsOnCreate) ToFailsOnCreateOutputWithContext(ctx context.Context) FailsOnCreateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailsOnCreateOutput)
}

type FailsOnCreateOutput struct{ *pulumi.OutputState }

func (FailsOnCreateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailsOnCreate)(nil)).Elem()
}

func (o FailsOnCreateOutput) ToFailsOnCreateOutput() FailsOnCreateOutput {
	return o
}

func (o FailsOnCreateOutput) ToFailsOnCreateOutputWithContext(ctx context.Context) FailsOnCreateOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FailsOnCreateInput)(nil)).Elem(), &FailsOnCreate{})
	pulumi.RegisterOutputType(FailsOnCreateOutput{})
}
