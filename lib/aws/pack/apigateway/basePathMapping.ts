// *** WARNING: this file was generated by the Lumi IDL Compiler (LUMIDL). ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

/* tslint:disable:ordered-imports variable-name */
import * as lumi from "@lumi/lumi";

import {RestAPI} from "./restAPI";
import {Stage} from "./stage";

export class BasePathMapping extends lumi.NamedResource implements BasePathMappingArgs {
    public domainName: string;
    public restAPI: RestAPI;
    public basePath?: string;
    public stage?: Stage;

    public static get(id: lumi.ID): BasePathMapping {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): BasePathMapping[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: BasePathMappingArgs) {
        super(name);
        if (args.domainName === undefined) {
            throw new Error("Missing required argument 'domainName'");
        }
        this.domainName = args.domainName;
        if (args.restAPI === undefined) {
            throw new Error("Missing required argument 'restAPI'");
        }
        this.restAPI = args.restAPI;
        this.basePath = args.basePath;
        this.stage = args.stage;
    }
}

export interface BasePathMappingArgs {
    domainName: string;
    restAPI: RestAPI;
    basePath?: string;
    stage?: Stage;
}

