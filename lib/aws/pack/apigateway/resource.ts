// *** WARNING: this file was generated by the Lumi IDL Compiler (LUMIDL). ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

/* tslint:disable:ordered-imports variable-name */
import * as lumi from "@lumi/lumi";

import {RestAPI} from "./restAPI";

export class Resource extends lumi.NamedResource implements ResourceArgs {
    public readonly parent: Resource;
    public readonly pathPart: string;
    public readonly restAPI: RestAPI;

    public static get(id: lumi.ID): Resource {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): Resource[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: ResourceArgs) {
        super(name);
        if (args.parent === undefined) {
            throw new Error("Missing required argument 'parent'");
        }
        this.parent = args.parent;
        if (args.pathPart === undefined) {
            throw new Error("Missing required argument 'pathPart'");
        }
        this.pathPart = args.pathPart;
        if (args.restAPI === undefined) {
            throw new Error("Missing required argument 'restAPI'");
        }
        this.restAPI = args.restAPI;
    }
}

export interface ResourceArgs {
    readonly parent: Resource;
    readonly pathPart: string;
    readonly restAPI: RestAPI;
}

