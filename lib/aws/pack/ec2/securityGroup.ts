// *** WARNING: this file was generated by the Lumi IDL Compiler (LUMIDL). ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

/* tslint:disable:ordered-imports variable-name */
import * as lumi from "@lumi/lumi";

import {VPC} from "./vpc";

export class SecurityGroup extends lumi.NamedResource implements SecurityGroupArgs {
    public readonly groupDescription: string;
    public readonly groupName?: string;
    public readonly vpc?: VPC;
    public securityGroupEgress?: SecurityGroupRule[];
    public securityGroupIngress?: SecurityGroupRule[];
    public groupID: string;

    public static get(id: lumi.ID): SecurityGroup {
        return <any>undefined; // functionality provided by the runtime
    }

    public static query(q: any): SecurityGroup[] {
        return <any>undefined; // functionality provided by the runtime
    }

    constructor(name: string, args: SecurityGroupArgs) {
        super(name);
        if (args.groupDescription === undefined) {
            throw new Error("Missing required argument 'groupDescription'");
        }
        this.groupDescription = args.groupDescription;
        this.groupName = args.groupName;
        this.vpc = args.vpc;
        this.securityGroupEgress = args.securityGroupEgress;
        this.securityGroupIngress = args.securityGroupIngress;
    }
}

export interface SecurityGroupArgs {
    readonly groupDescription: string;
    readonly groupName?: string;
    readonly vpc?: VPC;
    securityGroupEgress?: SecurityGroupRule[];
    securityGroupIngress?: SecurityGroupRule[];
}

export interface SecurityGroupRule {
    ipProtocol: string;
    cidrIp?: string;
    fromPort?: number;
    toPort?: number;
}

