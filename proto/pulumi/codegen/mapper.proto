// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package codegen;

option go_package = "github.com/pulumi/pulumi/sdk/v3/proto/go/codegen";

// Mapper is a service for getting mappings from other ecosystems to Pulumi.
// This is currently unstable and experimental.

// Mapper provides methods for retrieving mappings that describe how to map names in some source "provider" (e.g. a
// Terraform provider, if we are converting from Terraform) to names in appropriate Pulumi packages. So when converting
// a Terraform program containing code like `resource "aws_s3_bucket" "b" {}`, for instance, we need to know (among
// other things) that the `aws_s3_bucket` Terraform resource type corresponds to the Pulumi type `aws:s3/bucket:Bucket`,
// and thus lives in the `aws` package. This is the kind of information that a Mapper provides.
service Mapper {
    // `GetMapping` returns any available mapping data for the given source provider name (so again, this is e.g. the
    // name of a Terraform provider if converting from Terraform). Callers may pass "hints" that describe a Pulumi
    // package that is expected to provide the mapping and satisfy the request, which implementations may use to
    // optimise their efforts to return the best possible mapping. If no matching mapping exists, implementations should
    // return an empty byte array result.
    rpc GetMapping(GetMappingRequest) returns (GetMappingResponse) {}
}


// `GetMappingRequest` is the type of requests sent as part of a [](codegen.Mapper.GetMapping) call.
message GetMappingRequest {
    // The name of the source provider (e.g. the Terraform provider name if a Terraform program is being converted) for
    // which a mapping into Pulumi should be returned.
    string provider = 1;

    // The name of the Pulumi plugin that is expected to provide the mapping. If left empty, will be defaulted to the
    // source provider name.
    string pulumi_provider = 2;

    // An optional parameterization that should be used on the named plugin before asking it for mappings.
    MapperParameterizationHint parameterization_hint = 3;
}

// `MapperPackageParameterizationHint` is the type of hints that may be passed to [](codegen.Mapper.GetMapping) when it
// is expected that a parameterized provider plugin is the most likely source of a mapping. E.g. in the case of a
// dynamically bridged Terraform provider, callers may wish to express that a mapping is most likely offered by the
// "terraform-provider" plugin, but only when it is parameterized with the appropriate Terraform provider information.
message MapperParameterizationHint {
    // The package name expected once parameterization has been applied.
    string name = 1;

    // The package version expected once parameterization has been applied.
    string version = 2;

    // The parameter value to send to the provider plugin as part of parameterization.
    bytes value = 3;
}

// `GetMappingResponse` is the type of responses sent by [](codegen.Mapper.GetMapping) calls.
message GetMappingResponse {
    // Conversion-plugin-specific mapping data. For a Terraform conversion, for instance, this is expected to be a piece
    // of data that maps Terraform names (e.g. resource types) to Pulumi names (e.g. Pulumi resource types). In many
    // cases this byte array will be a string of encoded JSON, but no specific format is required.
    bytes data = 1;
}
