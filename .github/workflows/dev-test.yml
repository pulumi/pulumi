name: Tests that developer scripts function as expected.

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Version of the Go toolchain for the build'
        default: '1.17.x'
        required: false
        type: string
      python-version:
        description: 'Version of the Python toolchain for the build'
        default: '3.9.x'
        required: false
        type: string
      node-version:
        description: 'Version of the Node toolchain for the build'
        default: '14.x'
        required: false
        type: string
      dotnet-version:
        description: 'Version of the .NET toolchain for the build'
        default: '3.1.x'
        required: false
        type: string
    secrets:
      pulumi-access-token:
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"
  PULUMI_ACCESS_TOKEN: ${{ secrets.pulumi-access-token }}
  PYTHON: python

jobs:
  test:
    name: Developer Experience

    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        test-subset:
          - developer-experience
      fail-fast: false

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Fetch Tags
        run: |
          git fetch --quiet --prune --unshallow --tags
      - name: Set PULUMI_TEST_SUBSET env var
        run: |
          echo "PULUMI_TEST_SUBSET=${{ matrix.test-subset }}" >> $GITHUB_ENV
      - name: Enable code coverage
        if: ${{ inputs.enable-coverage && (matrix.platform != 'windows-latest') }}
        run: |
          echo "PULUMI_TEST_COVERAGE_PATH=$(pwd)/coverage" >> $GITHUB_ENV
      - name: Set up Make (windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          choco install make
      - name: Set up Go ${{ inputs.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.go-version }}
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Go Cache
        uses: actions/cache@v2
        id: go-cache
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ matrix.platform }}-${{ matrix.test-subset }}-go-test-cache-${{ hashFiles('**/go.sum') }}
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ inputs.python-version }}
      - name: Set up DotNet ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Set up Node ${{ inputs.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}
      - name: Uninstall pre-installed Pulumi (windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          chocolatey uninstall pulumi
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip requests wheel urllib3 chardet
      - name: Setup git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Set Go Dep path
        run: |
          echo "PULUMI_GO_DEP_ROOT=$(dirname $(pwd))" >> $GITHUB_ENV
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.3.1
        with:
          repo: pulumi/pulumictl
      - name: Install gotestsum from source
        run: |
          go install gotest.tools/gotestsum@latest
        env:
          GOBIN: ${{ github.workspace }}/bin
      # Binary installer for gotestsum does not work because the
      # project distributes tarballs for Windows instead of zips
      # expected by the action.
      #
      # - name: Install gotestsum
      #   uses: jaxxstorm/action-install-gh-release@v1.3.1
      #   with:
      #     repo: gotestyourself/gotestsum
      #     tag: v1.7.0
      - name: Install goteststats
        uses: jaxxstorm/action-install-gh-release@v1.3.1
        with:
          repo: t0yv0/goteststats
          tag: v0.0.7
      - name: Download Pulumi Go Binaries (linux-x64)
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        uses: actions/download-artifact@v2
        with:
          name: pulumi-linux-x64
          path: artifacts/go
      - name: Download Pulumi Go Binaries (darwin-x64)
        if: ${{ matrix.platform == 'macos-latest' }}
        uses: actions/download-artifact@v2
        with:
          name: pulumi-darwin-x64
          path: artifacts/go
      - name: Download Pulumi Go Binaries (windows-x64)
        if: ${{ matrix.platform == 'windows-latest' }}
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-x64
          path: artifacts/go
      - name: Install Pulumi Go Binaries (non-windows)
        if: ${{ matrix.platform != 'windows-latest' }}
        run: |
          mkdir -p pulumi-bin
          tar -xf artifacts/go/*.tar.gz -C pulumi-bin
          mkdir -p bin
          mv pulumi-bin/pulumi/* bin/
          rm -rf pulumi-bin
      - name: Install Pulumi Go Binaries (windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          mkdir -p $PWD/bin
          unzip -d $PWD/bin artifacts/go/*.zip
          mv $PWD/bin/pulumi/bin/* $PWD/bin
          rm -rf $PWD/bin/pulumi
          echo "Checking contents of $PWD/bin"
          find $PWD/bin
      - name: Add ./bin to PATH
        run: |
          LOCAL_PATH=$(./scripts/normpath "${{ github.workspace }}/bin")
          echo "Adding LOCAL_PATH=$LOCAL_PATH to PATH"
          echo $LOCAL_PATH >> $GITHUB_PATH
      - name: Verify Pulumi Version
        run: |
          which pulumi   || echo "no pulumi"
          pulumi version || echo "no pulumi"
      - name: Download Pulumi .NET NuGet packages
        uses: actions/download-artifact@v2
        with:
          name: pulumi-nuget-packages
          # path set to match PULUMI_LOCAL_NUGET
          path: ${{ github.workspace }}/nuget
      - name: Add NuGet packages as a local NuGet source
        run: |
          echo "PULUMI_LOCAL_NUGET=$PULUMI_LOCAL_NUGET"
          SOURCE=$(./scripts/normpath $PULUMI_LOCAL_NUGET)
          echo "SOURCE=$SOURCE"
          dotnet nuget add source $SOURCE
        env:
          PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
      - name: Inspect downloaded artifacts
        run: |
          find artifacts
          echo "PULUMI_LOCAL_NUGET=$PULUMI_LOCAL_NUGET"
          ls $PULUMI_LOCAL_NUGET
        env:
          PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
      - name: Ensure dependencies for the Node SDK
        run: |
          cd sdk/nodejs
          make ensure
      - name: Node SDK check make install
        run: |
          cd sdk/nodejs
          make install
      - name: Ensure dependencies for the Python SDK
        run: |
           cd sdk/python
           make ensure
      - name: Python SDK check make install
        run: |
           cd sdk/python
           make install