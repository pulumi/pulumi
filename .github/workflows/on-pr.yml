name: Pull Request

permissions:
  # To create a draft release.
  contents: write
  # To comment on PRs.
  pull-requests: write
  # To sign artifacts.
  id-token: write

on:
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# The jobs in this workflow are only run on branches. The `on-community-pr.yml` job provides
# commands for running workflows from forks.

jobs:
  changelog-comment:
    name: changelog preview
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/on-pr-changelog.yml
    with:
      ref: ${{ github.ref }}
      base-ref: origin/${{ github.base_ref }}
      pr-number: ${{ github.event.pull_request.number }}
      changelog-required: ${{ !contains(github.event.pull_request.labels.*.name, 'impact/no-changelog-required') }}
    secrets: inherit

  info:
    name: info
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    uses: ./.github/workflows/ci-info.yml
    permissions:
      contents: read
    with:
      ref: ${{ github.ref }}
      is-snapshot: true
    secrets: inherit

  # Labels the PR based on affected paths.
  # Configuration is in .github/labeler.yml.
  label:
    name: Add CI labels
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  ci:
    name: CI
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    needs: [info, label]
    uses: ./.github/workflows/ci.yml
    permissions:
      contents: read
      # To sign artifacts.
      id-token: write
    with:
      ref: ${{ github.ref }}
      version: ${{ needs.info.outputs.version }}
      lint: true
      build-all-targets: ${{ contains(github.event.pull_request.labels.*.name, 'ci/test') }}
      # codegen tests take quite a while to run.
      # Run them only if ci/test or ci/test-codegen is set.
      # The latter is set by the label action if relevant files change.
      codegen-tests:  >- # No newlines or trailing newline.
        ${{
          contains(github.event.pull_request.labels.*.name, 'ci/test') ||
          contains(github.event.pull_request.labels.*.name, 'ci/test-codegen')
        }}
      test-version-sets: >- # No newlines or trailing newline.
        ${{
          contains(github.event.pull_request.labels.*.name, 'ci/test')
          && 'minimum current'
          || 'current'
        }}
      integration-test-platforms: ubuntu-latest
      acceptance-test-platforms: >- # No newlines or trailing newline.
        ${{
          contains(github.event.pull_request.labels.*.name, 'ci/test')
          && 'macos-latest windows-latest'
          || ''
        }}
      enable-coverage: true
    secrets: inherit

  prepare-release:
    name: prepare
    if: >- # No newlines or trailing newline.
      ${{
        github.event.pull_request.head.repo.full_name == github.repository
        && contains(github.event.pull_request.labels.*.name, 'ci/test')
      }}
    needs: [info, ci]
    uses: ./.github/workflows/ci-prepare-release.yml
    permissions:
      contents: write
      # To sign artifacts.
      id-token: write
    with:
      ref: ${{ github.ref }}
      version: ${{ needs.info.outputs.version }}
      release-notes: ${{ needs.info.outputs.release-notes }}
      project: ${{ github.repository }}
      draft: true
      prerelease: true
    secrets: inherit

  # release:
  #   name: release
  #   if: ${{ contains(github.event.pull_request.labels.*.name, 'ci/test') }}
  #   needs: [info, matrix, prepare-release]
  #   uses: ./.github/workflows/release.yml
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   with:
  #     ref: ${{ github.ref }}
  #     version: ${{ needs.info.outputs.version }}
  #     release-notes: ${{ needs.info.outputs.release-notes }}
  #     version-set: ${{ needs.matrix.outputs.version-set }}
  #     queue-merge: false
  #   secrets: inherit
