on:
  repository_dispatch:
    types: [ run-acceptance-tests-command ]
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

defaults:
  run:
    shell: bash

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_PROD_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  PYTHON: python

# Cancel checks on prior commits when new commits are added to a PR.
# This is motivated by temporary throughput issues on our GitHub
# Actions workers availability.
#
# Note from GitHub docs: Concurrency is currently in beta and subject
# to change.
#
# See also: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency
#
# Note on the the `group` computed expression: it is compiling
# `github.head_ref == '' ? github.run_id : github.head_ref` expression
# to the primitives available in GitHub Actions. The idea to use
# `head_ref` on `pull_request` triggers, but use unique
# `github.run_id` on `run-acceptance-tests-command` triggers. This
# effectively disables `concurrency` checks for
# `run-acceptance-tests-command` triggers.
concurrency:
  group: run-build-acceptance-tests-${{(fromJSON(format('[{0},{1}]',toJSON(github.head_ref),toJSON(github.run_id))))[github.head_ref=='']}}
  cancel-in-progress: true

jobs:

  build:
    name: Build
    uses: pulumi/pulumi/.github/workflows/build.yml@master
    with:
      # Cross-compiling from ubuntu-latest is faster but the artifact
      # checksums will not match what publish-binaries expects.
      # default-build-platform: macos-latest
      enable-coverage: false
      goreleaser-config: '.goreleaser.yml'
      goreleaser-flags: '-p 3 --release-notes=CHANGELOG_PENDING.md --skip-publish --skip-announce --skip-validate'

  publish-binaries:
    name: Publish Binaries
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        go-version: [1.17.x]
    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Fetch Tags
        run: |
          git fetch --quiet --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.3.1
        with:
          repo: pulumi/pulumictl
      - name: Download pulumi-linux-x64
        uses: actions/download-artifact@v2
        with:
          name: pulumi-linux-x64
          path: goreleaser-downloads
      - name: Download pulumi-linux-arm64
        uses: actions/download-artifact@v2
        with:
          name: pulumi-linux-arm64
          path: goreleaser-downloads
      - name: Download pulumi-darwin-x64
        uses: actions/download-artifact@v2
        with:
          name: pulumi-darwin-x64
          path: goreleaser-downloads
      - name: Download pulumi-darwin-arm64
        uses: actions/download-artifact@v2
        with:
          name: pulumi-darwin-arm64
          path: goreleaser-downloads
      - name: Download pulumi-windows-x64
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-x64
          path: goreleaser-downloads
      - name: Inspect goreleaser-downloads
        run: |
          find goreleaser-downloads
      - name: Unpack goreleaser-downloads
        run: |
          ./scripts/unpack.sh
      - name: Inspect goreleaser-prebuilt
        run: |
          find goreleaser-prebuilt
      - name: Set Release Version
        run: |
          echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic -o)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: -p 3 -f .goreleaser.yml --skip-publish --skip-announce --skip-validate --rm-dist --release-notes=CHANGELOG_PENDING.md
      - name: Download pulumi-windows-checksums
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-checksums
          path: artifacts/checksums/windows
      - name: Download pulumi-linux-checksums
        uses: actions/download-artifact@v2
        with:
          name: pulumi-linux-checksums
          path: artifacts/checksums/linux
      - name: Download pulumi-darwin-checksums
        uses: actions/download-artifact@v2
        with:
          name: pulumi-darwin-checksums
          path: artifacts/checksums/darwin
      - name: Verify checksums
        run: |
          C=artifacts/checksums/pulumi-tested-checksums.txt
          echo "Tested tarballs with the following checksums:"
          cat artifacts/checksums/*/* | sort | tee $C
          echo "Released tarballs with the following checksums:"
          sort goreleaser/*-checksums.txt
          echo "Checking that tested and released checksums are identical:"
          diff <(sort goreleaser/*-checksums.txt) $C || echo "WARN ignoring checksum mismatch"
      - name: Upload release artifacts
        uses: actions/upload-artifact@v2
        with:
            name: release-artifacts
            path: goreleaser
            retention-days: 2
