on:
  repository_dispatch:
    types: [ run-acceptance-tests-command ]
  pull_request:
    paths-ignore:
      - 'pkg/codegen/docs/**'

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_PROD_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"
  GO111MODULE: "on"

jobs:
  comment-notification:
    # We only care about adding the result to the PR if it's a repository_dispatch event
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      - name: Update with Result
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Please view the results of the PR Build + Acceptance Tests Run [Here][1]

            [1]: ${{ steps.vars.outputs.run-url }}
  build_and_test:
    name: Build & Test
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
        go-version: [1.15.x]
        python-version: [ 3.9.x ]
        dotnet-version: [ 3.1.x ]
        node-version: [ 14.x ]
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Setup git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Update path
        run: |
          echo "${{ runner.temp }}/opt/pulumi/bin" >> $GITHUB_PATH
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Fetch Tags
        run: |
          git fetch --quiet --prune --unshallow --tags
      - name: Set Go Dep path
        run: |
          echo "PULUMI_GO_DEP_ROOT=$(dirname $(pwd))" >> $GITHUB_ENV
      - name: Ensure
        run: |
          make ensure
      - name: Dist
        run: |
          make dist
        env:
          PULUMI_NODE_MODULES: ${{ runner.temp }}/opt/pulumi/node_modules
          PULUMI_LOCAL_NUGET: ${{ runner.temp }}/opt/pulumi/nuget
          PULUMI_ROOT: ${{ runner.temp }}/opt/pulumi
      - name: Install
        run: |
          make install_all
        env:
          PULUMI_NODE_MODULES: ${{ runner.temp }}/opt/pulumi/node_modules
          PULUMI_LOCAL_NUGET: ${{ runner.temp }}/opt/pulumi/nuget
          PULUMI_ROOT: ${{ runner.temp }}/opt/pulumi
      - name: Test
        run: |
          make test_all
        env:
          PULUMI_NODE_MODULES: ${{ runner.temp }}/opt/pulumi/node_modules
          PULUMI_LOCAL_NUGET: ${{ runner.temp }}/opt/pulumi/nuget
          PULUMI_ROOT: ${{ runner.temp }}/opt/pulumi
  windows-build:
    name: Windows Build
    strategy:
      matrix:
        go-version: [1.15.x]
        node-version: [14.x]
        python-version: [3.9.x]
        dotnet: [3.1.x]
    runs-on: windows-latest
    env:
      GOPATH: ${{ github.workspace }}
      PULUMI_LOCAL_NUGET: "D:\\Pulumi\\nuget"
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Install DotNet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install pyenv-win
          pip3 install pipenv
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: Fetch Tags
        run: |
          cd ./src/github.com/${{ github.repository }} && git fetch --quiet --prune --unshallow --tags
      - name: Clean
        run: dotnet nuget locals all --clear
      - name: Get dependencies
        run: |
          cd src\github.com\${{ github.repository }}
          set GO111MODULE=on
          pushd .
          cd sdk
          go mod tidy
          go mod download
          popd
          pushd .
          cd pkg
          go mod tidy
          go mod download
          popd
          pushd .
          cd tests
          go mod tidy
          go mod download
          popd
      - name: Build Pulumi
        run: |
          cd src\github.com\${{ github.repository }}
          dotnet msbuild /t:Build /v:Detailed build.proj /p:PulumiRoot="D:\\Pulumi"
      - name: Tar CLI Binaries
        run: tar -zcf ${{ github.workspace }}/cli.tar.gz -C D:\Pulumi\bin .
      - name: Tar SDK binaries
        run: |
          cd src\github.com\${{ github.repository }}
          tar -zcf ./nodejs-sdk.tar.gz -C sdk\nodejs .
          tar -zcf ./python-sdk.tar.gz -C sdk\python .
      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-windows-cli.tar.gz
          path: ${{ github.workspace }}/cli.tar.gz
      - name: Upload NodeJS artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-windows-nodejs-sdk.tar.gz
          path: ${{ github.workspace }}\src\github.com\${{ github.repository }}\nodejs-sdk.tar.gz
      - name: Upload Python artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-windows-python-sdk.tar.gz
          path: ${{ github.workspace }}\src\github.com\${{ github.repository }}\python-sdk.tar.gz
      - name: Tar Nuget Packages
        run: tar -zcf ${{ github.workspace }}/nuget.tar.gz -C D:\Pulumi\nuget .
      - name: Upload Nuget artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-nuget.tar.gz
          path: ${{ github.workspace }}/nuget.tar.gz
  windows-test:
    name: Windows Acceptance Test
    strategy:
      matrix:
        go-version: [1.15.x]
        node-version: [14.x]
        python-version: [3.9.x]
        dotnet: [3.1.x]
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: windows-latest
    needs: windows-build
    env:
      GOPATH: ${{ github.workspace }}
      PULUMI_LOCAL_NUGET: "D:\\Pulumi\\nuget"
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Install DotNet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install pyenv-win
          pip3 install pipenv
      - name: Ensure Pulumi Bin exists
        run: mkdir D:\Pulumi\bin
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: Fetch Tags
        run: |
          cd ./src/github.com/${{ github.repository }} && git fetch --quiet --prune --unshallow --tags
      - name: Ensure Local Nuget Exists
        run: mkdir D:/pulumi/nuget
      - name: Download Nuget Archive
        uses: actions/download-artifact@v2
        with:
          name: pulumi-nuget.tar.gz
          path: ${{ github.workspace}}
      - name: Uncompress Nuget folder
        run: tar -zxf ${{ github.workspace}}/nuget.tar.gz -C D:\Pulumi\nuget
      - name: Download Pulumi CLI Archive
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-cli.tar.gz
          path: ${{ github.workspace}}
      - name: Uncompress CLI folder
        run: |
          tar -zxf ${{ github.workspace}}/cli.tar.gz -C D:\Pulumi\bin
      - run: dir D:\Pulumi\bin
      - name: Set Build Env Vars
        shell: bash
        run: |
          echo "D:\Pulumi\bin" >> $GITHUB_PATH
      - name: Download Pulumi NodeJS Archive
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-nodejs-sdk.tar.gz
          path: ${{ github.workspace}}\src\github.com\${{ github.repository }}
      - name: Download Pulumi Python Archive
        uses: actions/download-artifact@v2
        with:
          name: pulumi-windows-python-sdk.tar.gz
          path: ${{ github.workspace}}\src\github.com\${{ github.repository }}
      - name: Uncompress SDK folder
        run: |
          cd src\github.com\${{ github.repository }}
          tar -zxf ./nodejs-sdk.tar.gz -C sdk\nodejs
          tar -zxf ./python-sdk.tar.gz -C sdk\python
      - name: Uninstall Choco Pulumi
        run: choco uninstall pulumi -y
      - name: Specify test dependencies
        run: |
          which pulumi
          echo "Currently Pulumi $(pulumi version) is installed"
          echo "Currently Go $(go version) is installed"
          echo "Currently Python $(python --version) is installed"
          echo "Currently DotNet $(dotnet --version) is installed"
          echo "Currently NodeJS $(node --version) is installed"
      - name: Get dependencies
        run: |
          cd src\github.com\${{ github.repository }}
          set GO111MODULE=on
          pushd .
          cd sdk
          go mod tidy
          go mod download
          popd
          pushd .
          cd pkg
          go mod tidy
          go mod download
          popd
          pushd .
          cd tests
          go mod tidy
          go mod download
          popd
      - name: Run Pulumi Tests
        run: |
          cd src\github.com\${{ github.repository }}
          dotnet msbuild /t:Tests /v:Detailed build.proj /p:PulumiRoot="D:\Pulumi"
